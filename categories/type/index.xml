<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Type on rbxmk</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/categories/type/</link><description>Recent content in Type on rbxmk</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright Â© 2022 Anaminus</copyright><atom:link href="https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/categories/type/index.xml" rel="self" type="application/rss+xml"/><item><title>Array</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/array/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/array/</guid><description>The Array type is a list of values.</description></item><item><title>AttrConfig</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/attrconfig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/attrconfig/</guid><description>The AttrConfig type configures how an instance encodes and decodes attributes.
Overview # Item Kind Description new Constructor Creates a new AttrConfig. Property Property The property that attributes are applied to. Constructors # new # AttrConfig.new(property: string): AttrConfig
The new constructor creates a new AttrConfig. property sets the Property field, defaulting to an empty string.
Properties # Property # AttrConfig.Property: string
The Property property determines which property of an Instance attributes are applied to.</description></item><item><title>Axes</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/axes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/axes/</guid><description>The Axes type represents a set of orthogonal coordinate axes that are considered active. Corresponds to the Axes type in Roblox.
Overview # Item Kind Description fromComponents Constructor Creates a new Axes with components set directly from each argument. new Constructor Creates a new Axes with components set from a number of values. Back Property Corresponds to the Z axes. Bottom Property Corresponds to the Y axes. Front Property Corresponds to the Z axes.</description></item><item><title>BinaryString</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/binarystring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/binarystring/</guid><description>The BinaryString type is a string that correctly handles binary data when encoded.</description></item><item><title>bool</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/bool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/bool/</guid><description>type bool = bool
The bool type is a binary state that can be true or false. It corresponds directly to the boolean Lua type.</description></item><item><title>BrickColor</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/brickcolor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/brickcolor/</guid><description>The BrickColor type represents a color from a predefined collection.
Overview # Item Kind Description Black Constructor Returns a black color. Blue Constructor Returns a blue color. DarkGray Constructor Returns a dark gray color. Gray Constructor Returns a gray color. Green Constructor Returns a green color. Red Constructor Returns a red color. White Constructor Returns a white color. Yellow Constructor Returns a yellow color. new Constructor Creates a BrickColor from a numeric value.</description></item><item><title>CallbackDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/callbackdesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/callbackdesc/</guid><description>type CallbackDesc = {MemberType: string, Name: string, Parameters: {ParameterDesc}, ReturnType: TypeDesc, Security: string, Tags: {string}}
The CallbackDesc type is a table that describes a callback member of a class. It has the following fields:
Field Type Description MemberType string Indicates the type of member. Always &amp;ldquo;Callback&amp;rdquo;. Name string The name of the member. Parameters { ParameterDesc} The parameters of the callback. ReturnType TypeDesc The type of the value returned by the callback.</description></item><item><title>CFrame</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cframe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cframe/</guid><description>The CFrame type is a matrix representing a combined position and orientation.
Overview # Item Kind Description Angles Constructor Returns a CFrame composed from angles. fromAxisAngle Constructor Returns a CFrame composed from an axis and angle. fromEulerAnglesXYZ Constructor Returns a CFrame composed from Euler angles. fromEulerAnglesYXZ Constructor Returns a CFrame composed from Euler angles ordered Y, X, Z. fromMatrix Constructor Returns a CFrame from a matrix. fromOrientation Constructor Returns a CFrame composed from orientations.</description></item><item><title>ClassDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/classdesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/classdesc/</guid><description>type ClassDesc = {MemoryCategory: string, Name: string, Superclass: string, Tags: {string}}
The ClassDesc type is a table that describes a class. It has the following fields:
Field Type Description MemoryCategory string The category of the class. Name string The name of the class. Superclass string The name of the class from which the current class inherits. Tags { string} The tags set for the class.</description></item><item><title>Color3</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/color3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/color3/</guid><description>The Color3 type represents a color in RGB space.
Overview # Item Kind Description fromHSV Constructor Returns a Color3 from hue, saturation, and value. fromRGB Constructor Returns a Color3 from 8-bit components. new Constructor Returns the zero Color3. Returns a Color3 from components. B Property The blue component. G Property The green component. R Property The red component. Lerp Method Linearly interpolates between two colors. ToHSV Method Converts to hue, saturation, and value.</description></item><item><title>Color3uint8</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/color3uint8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/color3uint8/</guid><description>type Color3uint8 = Color3
The Color3uint8 type represents a color with components that have 8-bit precision.</description></item><item><title>ColorSequence</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/colorsequence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/colorsequence/</guid><description>The ColorSequence type represents an interpolated sequence of colors.
Overview # Item Kind Description new Constructor The new constructor returns a ColorSequence with a single color. Returns a sequence with two colors. Returns a sequence composed of the given keypoints. Keypoints Property The keypoints of the sequence. __eq Operator Returns whether two ColorSequence values are equal. Constructors # new # ColorSequence.new(color: Color3): ColorSequence
no content for topic &amp;ldquo;Types/ColorSequence:Constructors/new/Single/Description&amp;rdquo; ColorSequence.new(color0: Color3, color1: Color3): ColorSequence</description></item><item><title>ColorSequenceKeypoint</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/colorsequencekeypoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/colorsequencekeypoint/</guid><description>The ColorSequenceKeypoint type represents a single keypoint of a ColorSequence.
Overview # Item Kind Description new Constructor Creates a new keypoint. Creates a new keypoint with an envelope. Envelope Property The amount of variance allowed from the Value. Time Property The time location along the sequence. Value Property The base value. __eq Operator Returns whether two ColorSequenceKeypoint values are equal. Constructors # new # ColorSequenceKeypoint.new(time: float, color: Color3): ColorSequenceKeypoint
The new constructor returns a new ColorSequenceKeypoint, time sets the Time field, and color sets the Value field.</description></item><item><title>Content</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/content/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/content/</guid><description>The Content type is a string that correctly handles a content reference when encoded.</description></item><item><title>Cookie</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cookie/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cookie/</guid><description>The Cookie type contains information about an HTTP cookie.
For security reasons, the value of the cookie cannot be accessed.
Cookie is immutable. A Cookie can be created with the Cookie.new constructor. Additionally, Cookies can be fetched from known locations with the Cookie.from function.
Overview # Item Kind Description from Constructor Gets cookies from a known location. new Constructor Creates a new cookie. Name Property The name of the cookie. __eq Operator Returns whether two Cookie values are equal.</description></item><item><title>Cookies</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cookies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cookies/</guid><description>type Cookies = {Cookie}
The Cookies type is a list of Cookie values.</description></item><item><title>Desc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/desc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/desc/</guid><description>The Desc type describes an entire API.
Overview # Item Kind Description new Constructor Creates a Desc. Class Method Gets data about a class. ClassTag Method Gets whether a tag is set for a class. Classes Method Gets a list of class names. Copy Method Returns a deep copy of the Desc. Diff Method Gets the difference between two descriptors. Enum Method Gets data about an enum. EnumItem Method Gets data about an enum item.</description></item><item><title>DescAction</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descaction/</guid><description>The DescAction type describes a single action that transforms a descriptor.
A DescAction can be created with the DescAction.new constructor. It is also returned from the Desc.Diff method and the desc-patch.json format.
Overview # Item Kind Description new Constructor Creates a new DescAction. Element Property The type of element. Primary Property The name of the primary element. Secondary Property The name of the secondary element. Type Property The type of transformation.</description></item><item><title>DescActions</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descactions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descactions/</guid><description>type DescActions = {DescAction}
The DescActions type is a list of DescAction values.</description></item><item><title>DescFields</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descfields/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descfields/</guid><description>type DescFields = {[string]: any}
The DescFields type is a collection of DescAction fields. Each element is a pair that maps a field name to a value.
The following value types are allowed:
Type Notes bool number string TypeDesc Table must contain &amp;ldquo;Category&amp;rdquo; and &amp;ldquo;Name&amp;rdquo; fields. ParameterDesc Field name must be &amp;ldquo;Parameters&amp;rdquo;. {string} Field name must be &amp;ldquo;Tags&amp;rdquo;.</description></item><item><title>Dictionary</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/dictionary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/dictionary/</guid><description>The Dictionary type is an associative array that maps strings to values.</description></item><item><title>DirEntry</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/direntry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/direntry/</guid><description>type DirEntry = {IsDir: bool, Name: string}
The DirEntry type is a table that contains a file entry of a directory. It has the following fields:
Field Type Description Name string The base name of the file. IsDir boolean Whether the file is a directory.</description></item><item><title>double</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/double/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/double/</guid><description>The double type is a number with 64-bit floating-point precision.</description></item><item><title>Enum</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enum/</guid><description>The Enum type is a set of named values.
Overview # Item Kind Description GetEnumItems Method Returns the items of the enum. __index Operator Gets an item by name. Methods # GetEnumItems # Enum:GetEnumItems(): {EnumItem}
The GetEnumItems method returns a list of items of the enum.
Operators # __index # Enum[name: string]: EnumItem
The index operator returns an item of the enum indexed by name.</description></item><item><title>EnumDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumdesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumdesc/</guid><description>type EnumDesc = {Name: string, Tags: {string}}
The EnumDesc type is a table that describes an enum. It has the following fields:
Field Type Description Name string The name of the enum. Tags { string} The tags set for the enum.</description></item><item><title>EnumItem</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumitem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumitem/</guid><description>The EnumItem type represents a single item of an Enum.
Overview # Item Kind Description EnumType Property The Enum of the item. Name Property no content for topic &amp;ldquo;Types/EnumItem:Properties/Name/Summary&amp;rdquo; Value Property no content for topic &amp;ldquo;Types/EnumItem:Properties/Value/Summary&amp;rdquo; IsA Method Returns whether the item belongs to an enum. Properties # EnumType # EnumItem.EnumType: Enum [readonly]
The EnumType field returns the Enum of the item.
Name # EnumItem.Name: string [readonly]
The Name field returns the name of the item.</description></item><item><title>EnumItemDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumitemdesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumitemdesc/</guid><description>type EnumItemDesc = {Index: int?, Name: string, Tags: {string}, Value: int}
The EnumitemDesc type is a table that describes an item of an enum. It has the following fields:
Field Type Description Index int Hints the order of the item.. Name string The name of the item. Tags { string} The tags set for the item. Value int The numeric value of the item.</description></item><item><title>Enums</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enums/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enums/</guid><description>The Enums type is a collection of Enum values.
Overview # Item Kind Description GetEnums Method Returns a list of Enum values. __index Operator Gets an Enum by name. Methods # GetEnums # Enums:GetEnums(): {Enum}
The GetEnums method returns a list of Enum values in the collection.
Operators # __index # Enums[name: string]: Enum
The index operator returns an enum in the collection indexed by name.</description></item><item><title>EventDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/eventdesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/eventdesc/</guid><description>type EventDesc = {MemberType: string, Name: string, Parameters: {ParameterDesc}, Security: string, Tags: {string}}
The EventDesc type is a table that describes a event member of a class. It has the following fields:
Field Type Description MemberType string Indicates the type of member. Always &amp;ldquo;Event&amp;rdquo;. Name string The name of the member. Parameters { ParameterDesc} The parameters of the event. Security string The security context required to get the member. Tags { string} The tags set for the member.</description></item><item><title>Faces</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/faces/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/faces/</guid><description>The Faces type represents a set of directions, on three orthogonal axes, that are considered active. Corresponds to the Faces type in Roblox.
Overview # Item Kind Description fromComponents Constructor Creates a new Faces with components set directly from each argument. new Constructor Creates a new Faces with components set from a number of values. Back Property Whether the back face is active. Bottom Property Whether the bottom face is active.</description></item><item><title>FileInfo</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/fileinfo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/fileinfo/</guid><description>type FileInfo = {IsDir: bool, ModTime: int64, Name: string, Size: int64}
The FileInfo type is a table that contains metadata about a file. It has the following fields:
Field Type Description Name string The base name of the file. IsDir boolean Whether the file is a directory. Size number The size of the file, in bytes. ModTime number The modification time of the file, in Unix time.</description></item><item><title>float</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/float/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/float/</guid><description>The double type is a number with 32-bit floating-point precision.</description></item><item><title>FormatSelector</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/formatselector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/formatselector/</guid><description>type FormatSelector = string|{[string]: any, Format: string}
The FormatSelector type selects a format, and optionally configures the format.
If a table, then the Format field indicates the name of the format to use, and remaining fields are options that configure the format, which depend on the format specified. All such fields are optional.
If a string, it is the name of the format to use, and specifies no options.</description></item><item><title>FunctionDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/functiondesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/functiondesc/</guid><description>type FunctionDesc = {MemberType: string, Name: string, Parameters: {ParameterDesc}, ReturnType: TypeDesc, Security: string, Tags: {string}}
The FunctionDesc type is a table that describes a function member of a class. It has the following fields:
Field Type Description MemberType string Indicates the type of member. Always &amp;ldquo;Function&amp;rdquo;. Name string The name of the member. ReturnType TypeDesc The type of the value returned by the function. Security string The security context required to set the member.</description></item><item><title>HttpHeaders</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpheaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpheaders/</guid><description>type HttpHeaders = {[string]: string|{string}}
The HttpHeaders type is a table that specifies the headers of an HTTP request or response. Each entry consists of a header name mapped to a string value. If a header requires multiple values, the name may be mapped to an array of values instead.
For response headers, a header is always mapped to an array, and each array will have at least one value.</description></item><item><title>HttpOptions</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpoptions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpoptions/</guid><description>type HttpOptions = {Body: any?, Cookies: Cookies?, Headers: HttpHeaders?, Method: string?, RequestFormat: FormatSelector?, ResponseFormat: FormatSelector?, URL: string}
The HttpOptions type is a table that specifies how an HTTP request is made. It has the following fields:
Field Type Description URL string The URL to make to request to. Method string? The HTTP method. Defaults to GET. RequestFormat FormatSelector? The format used to encode the request body. ResponseFormat FormatSelector? The format used to decode the response body.</description></item><item><title>HttpRequest</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httprequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httprequest/</guid><description>The HttpRequest type represents a pending HTTP request.
Overview # Item Kind Description Cancel Method Cancels the pending request. Resolve Method Returns the response to the request. Methods # Cancel # HttpRequest:Cancel()
The Cancel method cancels the pending request.
Resolve # HttpRequest:Resolve(): (resp: HttpResponse)
The Resolve method blocks until the request has finished, and returns the response. Throws an error if a problem occurred while resolving the request.</description></item><item><title>HttpResponse</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpresponse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpresponse/</guid><description>type HttpResponse = {Body: Variant?, Cookies: Cookies, Headers: HttpHeaders, StatusCode: int, StatusMessage: string, Success: bool}
The HttpResponse type is a table that contains the response of a request. It has the following fields:
Field Type Description Success bool Whether the request succeeded. True if StatusCode between 200 and 299. StatusCode int The HTTP status code of the response. StatusMessage string A readable message corresponding to the StatusCode. Headers HttpHeaders A set of response headers.</description></item><item><title>Instance</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/instance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/instance/</guid><description>The Instance type represents the content of a Roblox instance. It provides a similar API to that of Roblox.
See the Instances section for details on the implementation of Instances.
Overview # Item Kind Description new Constructor Creates a new Instance. ClassName Property The class of the instance. Name Property A name identifying the instance. Parent Property The parent instance. sym.AttrConfig Symbol The AttrConfig used by the instance. sym.Desc Symbol The descriptor used by the instance.</description></item><item><title>int</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/int/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/int/</guid><description>The int type is a signed 32-bit integer.</description></item><item><title>int64</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/int64/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/int64/</guid><description>The int64 type is a signed 64-bit integer.</description></item><item><title>JsonOperation</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonoperation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonoperation/</guid><description>type JsonOperation = {from: string?, op: string, path: string, value: JsonValue?}
no content for topic &amp;ldquo;Types/JsonOperation:Description&amp;rdquo;</description></item><item><title>JsonPatch</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonpatch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonpatch/</guid><description>type JsonPatch = {JsonOperation}
no content for topic &amp;ldquo;Types/JsonPatch:Description&amp;rdquo;</description></item><item><title>JsonValue</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonvalue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonvalue/</guid><description>type JsonValue = nil | bool | Number | string | Array | Dictionary
no content for topic &amp;ldquo;Types/JsonValue:Description&amp;rdquo;</description></item><item><title>MemberDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/memberdesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/memberdesc/</guid><description>type MemberDesc = PropertyDesc | FunctionDesc | EventDesc | CallbackDesc
The MemberDesc is one of any of the class member descriptor types.</description></item><item><title>nil</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/nil/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/nil/</guid><description>The nil type indicates the absence of a value. It corresponds directly to the nil Lua type.</description></item><item><title>Number</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/number/</guid><description>The number type is a numeric value. It corresponds directly to the number Lua type.</description></item><item><title>NumberRange</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numberrange/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numberrange/</guid><description>The NumberRange type represents a range of numbers between a minimum and maximum.
Overview # Item Kind Description new Constructor Returns a range with a single value. Returns a range with between two values. Max Property The maximum value. Min Property The minimum value. __eq Operator Returns whether two NumberRange values are equal. Constructors # new # NumberRange.new(value: float): NumberRange
The new constructor returns a NumberRange where value is both the minimum and maximum.</description></item><item><title>NumberSequence</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numbersequence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numbersequence/</guid><description>The NumberSequence type represents an interpolated sequence of numbers.
Overview # Item Kind Description new Constructor The new constructor returns a NumberSequence with a single number. Returns a sequence with two numbers. Returns a sequence composed of the given keypoints. Keypoints Property The keypoints of the sequence. __eq Operator Returns whether two NumberSequence values are equal. Constructors # new # NumberSequence.new(value: float): NumberSequence
no content for topic &amp;ldquo;Types/NumberSequence:Constructors/new/Single/Description&amp;rdquo; NumberSequence.new(value0: float, value1: float): NumberSequence</description></item><item><title>NumberSequenceKeypoint</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numbersequencekeypoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numbersequencekeypoint/</guid><description>The NumberSequenceKeypoint type represents a single keypoint of a NumberSequence.
Overview # Item Kind Description new Constructor Creates a new keypoint. Creates a new keypoint with an envelope. Envelope Property The amount of variance allowed from the Value. Time Property The time location along the sequence. Value Property The base value. __eq Operator Returns whether two NumberSequenceKeypoint values are equal. Constructors # new # NumberSequenceKeypoint.new(time: float, value: float): NumberSequenceKeypoint
The new constructor returns a new NumberSequenceKeypoint, time sets the Time field, and value sets the Value field.</description></item><item><title>Objects</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/objects/</guid><description>type Objects = {Instance}
The Objects type is a list of Instance values.</description></item><item><title>Optional</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/optional/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/optional/</guid><description>type Optional = Optional
The Optional type is an exprim that encapsulates another type, such that the value is either present or not present.
Overview # Item Kind Description none Constructor An Optional with no value. some Constructor An Optional with some value. Constructors # none # Optional.none(type: string): Optional
The none constructor returns an empty Optional exprim of the given type.
model.WorldPivotData = Optional.none(&amp;#34;CFrame&amp;#34;) -- type is Optional&amp;lt;cframe&amp;gt; print(typeof(model.WorldPivotData.Value)) --&amp;amp;gt; nil&amp;lt;/cframe&amp;gt; some # Optional.</description></item><item><title>ParameterDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/parameterdesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/parameterdesc/</guid><description>type ParameterDesc = {Default: string?, Name: string, Type: TypeDesc}
The ParameterDesc type describes a parameter of a function, event, or callback member. It has the following members:
Field Type Description Type TypeDesc The type of the parameter. Name string The name of the parameter. Default string? Describes the default value of the parameter. If nil, then the parameter has no default value.</description></item><item><title>PhysicalProperties</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/physicalproperties/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/physicalproperties/</guid><description>The PhysicalProperties type represents the physical properties of an object.
Overview # Item Kind Description new Constructor Returns properties with density, friction, and elasticity. no content for topic &amp;ldquo;Types/PhysicalProperties:Constructors/new/Weights/Summary&amp;rdquo; Density Property The mass per unit volume. Elasticity Property How much energy is retained after a collision. ElasticityWeight Property The ratio baised towards the object for elasticity calculations. Friction Property The force that opposes lateral motion. FrictionWeight Property The ratio baised towards the object for friction calculations.</description></item><item><title>PropertyDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/propertydesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/propertydesc/</guid><description>type PropertyDesc = {CanLoad: bool, CanSave: bool, Category: string, MemberType: string, Name: string, ReadSecurity: string, Tags: {string}, ValueType: TypeDesc, WriteSecurity: string}
The PropertyDesc type is a table that describes a property member of a class. It has the following fields:
Field Type Description CanLoad string Whether the property is deserialized. CanSave string Whether the property is serialized. MemberType string Indicates the type of member. Always &amp;ldquo;Property&amp;rdquo;. Name string The name of the member.</description></item><item><title>ProtectedString</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/protectedstring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/protectedstring/</guid><description>The ProtectedString type is a string that correctly handles protected data when encoded.</description></item><item><title>Ray</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/ray/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/ray/</guid><description>The Ray type represents a line that extends infinitely in one direction.
Overview # Item Kind Description new Constructor Creates a new Ray. Direction Property The direction of the ray. Origin Property The position of the ray. ClosestPoint Method Returns the nearest point on the ray. Distance Method Returns distance to the nearest point on the ray. __eq Operator Returns whether two Ray values are equal. Constructors # new # Ray.</description></item><item><title>RbxAssetOptions</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/rbxassetoptions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/rbxassetoptions/</guid><description>type RbxAssetOptions = {AssetId: int64, Body: any?, Cookies: Cookies?, Format: FormatSelector}
The RbxAssetOptions type is a table that specifies the options of a request to an asset on the Roblox website. It has the following fields:
Field Type Description AssetId int64 The ID of the asset to request. Cookies Cookies? Optional cookies to send with requests, usually used for authentication. Format FormatSelector The format used to encode or decode an asset.</description></item><item><title>Rect</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/rect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/rect/</guid><description>The Rect type represents an axis-aligned two-dimensional rectangle with a lower and upper boundary.
Overview # Item Kind Description new Constructor Returns a Rect composed by two Vector2s. Returns a Rect composed by boundary components. minX and minY compose the lower bounds, and maxX and maxY compose the upper bounds. Height Property The height of the rectangle. Max Property The upper bounds of the rectangle. Min Property The lower bounds of the rectangle.</description></item><item><title>Region3</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/region3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/region3/</guid><description>The Region3 type represents an axis-aligned three-dimensional rectangular cuboid with a lower and upper boundary.
Overview # Item Kind Description new Constructor Returns Region3 composed by two Vector3s. CFrame Property The center of the region. Size Property The size of the region. ExpandToGrid Method Expands the region to align to a grid. __eq Operator Returns whether two Region3 values are equal. Constructors # new # Region3.new(min: Vector3, max: Vector3): Region3</description></item><item><title>Region3int16</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/region3int16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/region3int16/</guid><description>The Region3 type represents an axis-aligned three-dimensional rectangular cuboid with a lower and upper boundary, with each component having 16-bit integer precision.
Overview # Item Kind Description new Constructor Returns Region3 composed by two Vector3s. Max Property The upper bounds of the region. Min Property The lower bounds of the region. __eq Operator Returns whether two Region3int16 values are equal. Constructors # new # Region3int16.new(min: Vector3int16, max: Vector3int16): Region3int16
The new constructor returns a Region3 composed by two Vector3int16 values, where min is the lower bound of the region, and max is the upper bound.</description></item><item><title>SharedString</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/sharedstring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/sharedstring/</guid><description>The SharedString type is a string that correctly handles shared data when encoded.</description></item><item><title>string</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/string/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/string/</guid><description>The string type is a sequence of bytes. It corresponds directly to the string Lua type.</description></item><item><title>Symbol</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/symbol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/symbol/</guid><description>The Symbol type is a value that is always unique. Symbol values are generally used as an index to fields of particular types.
Symbol values defined by rbxmk are available through the sym library.</description></item><item><title>table</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/table/</guid><description>The table type is an associative array. It corresponds directly to the table Lua type.</description></item><item><title>token</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/token/</guid><description>The token type is a 32-bit integer representing the value of some known enum item.</description></item><item><title>Tuple</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/tuple/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/tuple/</guid><description>The Tuple type represents multiple values, each of any type. A function that receives a Tuple recieves a variable number of arguments. A function that returns a Tuple returns multiple values.</description></item><item><title>TypeDesc</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/typedesc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/typedesc/</guid><description>type TypeDesc = {Category: string, Name: string}
The TypeDesc type is a table that describes a value type. It has the following fields:
Field Type Description Category string The category of the type. Name string The name of the type. Certain categories are treated specially:
Class: Name is the name of a class. A value of the type is expected to be an Instance of the class. Enum: Name is the name of an enum.</description></item><item><title>UDim</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/udim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/udim/</guid><description>The UDim type represents one dimension with a dynamic and constant component.
Overview # Item Kind Description new Constructor Returns a new UDim. Offset Property The constant component. Scale Property The dynamic component. __add Operator The sum of two UDim values. __eq Operator Returns whether two UDim values are equal. __sub Operator The difference between two UDim values. __unm Operator The negation of the UDim. Constructors # new # UDim.new(scale: float, offset: int): UDim</description></item><item><title>UDim2</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/udim2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/udim2/</guid><description>The UDim2 type represents a UDim on two dimensions.
Overview # Item Kind Description fromOffset Constructor Returns a UDim2 from offset components. fromScale Constructor Returns a UDim2 from scale components. new Constructor Returns a UDim2 from components. Returns a UDim2 from UDims. Height Property The height of the UDim2. Width Property The width of the UDim2. X Property The X dimension. Y Property The Y dimension. Lerp Method Lineearly interpolates between two UDim2 values.</description></item><item><title>UniqueId</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/uniqueid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/uniqueid/</guid><description>The UniqueId type represents the value of a unique identifier.
Overview # Item Kind Description new Constructor Generates a new UniqueId. Returns a UniqueId from components. Index Property A sequential value. Random Property A random value. Time Property A time-based value. __eq Operator Returns whether two UniqueId values are equal. Constructors # new # UniqueId.new(): UniqueId
The new constructor returns a new UniqueId generated from an internal source. The method to generate the value is similar to Roblox&amp;rsquo;s implementation.</description></item><item><title>Variant</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/variant/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/variant/</guid><description>The Variant type represents a single value of any type.</description></item><item><title>Vector2</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector2/</guid><description>The Vector2 type represents a two-dimensional Euclidean vector.
Overview # Item Kind Description new Constructor Returns the zero vector. Returns a vector composed by each given coordinate. Magnitude Property The length of the vector. Unit Property The direction of the vector. X Property The X coordinate. Y Property The Y coordinate. Cross Method Returns the cross product of two vectors. Dot Method Returns the dot product of two vectors. Lerp Method Linearly interpolates between two vectors.</description></item><item><title>Vector2int16</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector2int16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector2int16/</guid><description>The Vector2int16 type represents a two-dimensional Euclidean vector with 16-bit integer precision.
Overview # Item Kind Description new Constructor Returns the zero vector. Returns a vector composed by each given coordinate. X Property The X coordinate. Y Property The Y coordinate. __add Operator The sum of two vectors. __div Operator Divides each corresponding component. Divides each component. __eq Operator Returns whether two Vector2int16 values are equal. __mul Operator Multiplies each corresponding component.</description></item><item><title>Vector3</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector3/</guid><description>The Vector3 type represents a three-dimensional Euclidean vector.
Overview # Item Kind Description new Constructor Returns the zero vector. Returns a vector composed by each given coordinate. Magnitude Property The length of the vector. Unit Property The direction of the vector. X Property The X coordinate. Y Property The Y coordinate. Z Property The Z coordinate. Cross Method Returns the cross product of two vectors. Dot Method Returns the dot product of two vectors.</description></item><item><title>Vector3int16</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector3int16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector3int16/</guid><description>The Vector3int16 type represents a three-dimensional Euclidean vector with 16-bit integer precision.
Overview # Item Kind Description new Constructor Returns the zero vector. Returns a vector composed by each given coordinate. X Property The X coordinate. Y Property The Y coordinate. Z Property The Z coordinate. __add Operator The sum of two vectors. __div Operator Divides each corresponding component. Divides each component. __eq Operator Returns whether two Vector3int16 values are equal.</description></item></channel></rss>