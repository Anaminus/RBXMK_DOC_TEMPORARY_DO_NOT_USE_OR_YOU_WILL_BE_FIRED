[{"id":"0","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/array/","permalinkTitle":"Homepage / API reference / Types / Array","title":"Array","content":"The Array type is a list of values.\n"},{"id":"1","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/attrconfig/","permalinkTitle":"Homepage / API reference / Types / AttrConfig","title":"AttrConfig","content":"The AttrConfig type configures how an instance encodes and decodes attributes.\nOverview # Item Kind Description new Constructor Creates a new AttrConfig. Property Property The property that attributes are applied to. Constructors # new # AttrConfig.new(property: string): AttrConfig\nThe new constructor creates a new AttrConfig. property sets the Property field, defaulting to an empty string.\nProperties # Property # AttrConfig.Property: string\nThe Property property determines which property of an Instance attributes are applied to. If an empty string, instances will default to \u0026ldquo;AttributesSerialize\u0026rdquo;.\n"},{"id":"2","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/axes/","permalinkTitle":"Homepage / API reference / Types / Axes","title":"Axes","content":"The Axes type represents a set of orthogonal coordinate axes that are considered active. Corresponds to the Axes type in Roblox.\nOverview # Item Kind Description fromComponents Constructor Creates a new Axes with components set directly from each argument. new Constructor Creates a new Axes with components set from a number of values. Back Property Corresponds to the Z axes. Bottom Property Corresponds to the Y axes. Front Property Corresponds to the Z axes. Left Property Corresponds to the X axes. Right Property Corresponds to the X axes. Top Property Corresponds to the Y axes. X Property Whether the X axis is active. Y Property Whether the Y axis is active. Z Property Whether the Z axis is active. __eq Operator Returns whether two Axes values are equal. Constructors # fromComponents # Axes.fromComponents(x: bool, y: bool, z: bool)\nThe fromComponents constructor returns a new Axes value, with each argument setting the corresponding component.\nnew # Axes.new(...: EnumItem | string | int)\nThe new constructor returns a new Axes value. Each valid argument sets a component of the value, depending on the type:\nEnumItem: Enum name is \u0026quot;Axis\u0026quot;, and item name is \u0026quot;X\u0026quot;, \u0026quot;Y\u0026quot;, or \u0026quot;Z\u0026quot;.\nEnum name is \u0026quot;NormalId\u0026quot;, and item name is one of the following:\n\u0026quot;Right\u0026quot;, \u0026quot;Left\u0026quot;: sets X. \u0026quot;Top\u0026quot;, \u0026quot;Bottom\u0026quot;: sets Y. \u0026quot;Back\u0026quot;, \u0026quot;Front\u0026quot;: sets Z. number: value is one of the following: 0: sets X. 1: sets Y. 2: sets Z. string: value is \u0026quot;X\u0026quot;, \u0026quot;Y\u0026quot;, or \u0026quot;Z\u0026quot;. Properties # Back # Axes.Back: bool [readonly]\nThe Back field returns whether the Z axis is active.\nBottom # Axes.Bottom: bool [readonly]\nThe Bottom field returns whether the Y axis is active.\nFront # Axes.Front: bool [readonly]\nThe Front field returns whether the Z axis is active.\nLeft # Axes.Left: bool [readonly]\nThe Left field returns whether the X axis is active.\nRight # Axes.Right: bool [readonly]\nThe Right field returns whether the X axis is active.\nTop # Axes.Top: bool [readonly]\nThe Top field returns whether the Y axis is active.\nX # Axes.X: bool [readonly]\nThe X field returns whether the X axis is active.\nY # Axes.Y: bool [readonly]\nThe Y field returns whether the Y axis is active.\nZ # Axes.Z: bool [readonly]\nThe Z field returns whether the Z axis is active.\nOperators # __eq # Axes == Axes\nThe equal operator returns true if both operands are Axes, and each corresponding component is equal.\n"},{"id":"3","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/base64/","permalinkTitle":"Homepage / API reference / Formats / base64","title":"base64","content":"The base64 format is defined for encoding strings in the Base64 format.\nDirection Type Description Decode BinaryString Raw binary data. Encode Stringable Any string-like value. Options # Width # Type: int\nDefault: 0\nCauses the encoded result to be wrapped to the given number of characters. Does not wrap if the width is less than 1.\n"},{"id":"4","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/completion/bash/","permalinkTitle":"Homepage / Command reference / completion / bash","title":"bash","content":"rbxmk completion bash\nGenerate the autocompletion script for the bash shell.\nThis script depends on the \u0026lsquo;bash-completion\u0026rsquo; package. If it is not installed already, you can install it via your OS\u0026rsquo;s package manager.\nTo load completions in your current shell session:\nsource \u0026lt;(rbxmk completion bash) To load completions for every new session, execute once:\nLinux:\nrbxmk completion bash \u0026gt; /etc/bash_completion.d/rbxmk macOS:\nrbxmk completion bash \u0026gt; /usr/local/etc/bash_completion.d/rbxmk You will need to start a new shell for this setup to take effect.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\nno-descriptions # --no-descriptions\nDefault: false\nDisables completion descriptions.\n"},{"id":"5","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/bin/","permalinkTitle":"Homepage / API reference / Formats / bin","title":"bin","content":"The bin format encodes string-like values with the assurance that the bytes will be interpreted exactly as-is.\nDirection Type Description Decode BinaryString Raw binary data. Encode Stringable Any string-like value. "},{"id":"6","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/binarystring/","permalinkTitle":"Homepage / API reference / Types / BinaryString","title":"BinaryString","content":"The BinaryString type is a string that correctly handles binary data when encoded.\n"},{"id":"7","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/bool/","permalinkTitle":"Homepage / API reference / Types / bool","title":"bool","content":"type bool = bool\nThe bool type is a binary state that can be true or false. It corresponds directly to the boolean Lua type.\n"},{"id":"8","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/brickcolor/","permalinkTitle":"Homepage / API reference / Types / BrickColor","title":"BrickColor","content":"The BrickColor type represents a color from a predefined collection.\nOverview # Item Kind Description Black Constructor Returns a black color. Blue Constructor Returns a blue color. DarkGray Constructor Returns a dark gray color. Gray Constructor Returns a gray color. Green Constructor Returns a green color. Red Constructor Returns a red color. White Constructor Returns a white color. Yellow Constructor Returns a yellow color. new Constructor Creates a BrickColor from a numeric value. Creates a BrickColor from color components. Creates a BrickColor from a name. Creates a BrickColor from a Color3. palette Constructor Returns a BrickColor from a predefined list of colors. random Constructor Returns a random BrickColor. B Property The blue component. Color Property The Color3 corresponding to the BrickColor. G Property The green component. Name Property The name of the BrickColor. Number Property The numeric value of the BrickColor. R Property The red component. __eq Operator Returns whether two BrickColor values are equal. Constructors # Black # BrickColor.Black(): BrickColor\nThe Black constructor returns the \u0026ldquo;Black\u0026rdquo; brick color.\nBlue # BrickColor.Blue(): BrickColor\nThe Blue constructor returns the \u0026ldquo;Bright blue\u0026rdquo; brick color.\nDarkGray # BrickColor.DarkGray(): BrickColor\nThe DarkGray constructor returns the \u0026ldquo;Dark stone grey\u0026rdquo; brick color.\nGray # BrickColor.Gray(): BrickColor\nThe Gray constructor returns the \u0026ldquo;Medium stone grey\u0026rdquo; brick color.\nGreen # BrickColor.Green(): BrickColor\nThe Green constructor returns the \u0026ldquo;Dark green\u0026rdquo; brick color.\nRed # BrickColor.Red(): BrickColor\nThe Red constructor returns the \u0026ldquo;Bright red\u0026rdquo; brick color.\nWhite # BrickColor.White(): BrickColor\nThe White constructor returns the \u0026ldquo;White\u0026rdquo; brick color.\nYellow # BrickColor.Yellow(): BrickColor\nThe Yellow constructor returns the \u0026ldquo;Bright yellow\u0026rdquo; brick color.\nnew # BrickColor.new(value: int): BrickColor\nThe new constructor returns the BrickColor for which the Number field is equal to value.\nBrickColor.new(r: float, g: float, b: float): BrickColor\nThe new constructor returns the BrickColor that is nearest to the given color components.\nBrickColor.new(name: string): BrickColor\nThe new constructor returns the BrickColor for which the Name field is equal to name.\nBrickColor.new(color: Color3): BrickColor\nThe new constructor returns the BrickColor that is nearest to color.\npalette # BrickColor.palette(index: int): BrickColor\nThe palette constructors returns the BrickColor corresponding to index in a predefined list of 128 colors. An error is thrown if index is not between 0 and 127.\nrandom # BrickColor.random(): BrickColor\nThe random constructor returns a randomly selected BrickColor.\nProperties # B # BrickColor.B: float [readonly]\nThe B field is the blue component of the BrickColor.\nColor # BrickColor.Color: Color3 [readonly]\nThe Color field is the Color3 value corresponding to the BrickColor.\nG # BrickColor.G: float [readonly]\nThe G field is the green component of the BrickColor.\nName # BrickColor.Name: string [readonly]\nThe Name field is a name that describes the BrickColor.\nNumber # BrickColor.Number: int [readonly]\nThe Number field is a numeric value that uniquely identifies the BrickColor.\nR # BrickColor.R: float [readonly]\nThe R field is the red component of the BrickColor.\nOperators # __eq # BrickColor == BrickColor\nThe equal operator returns true if both operands are BrickColor, and their Number fields are equal.\n"},{"id":"9","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/callbackdesc/","permalinkTitle":"Homepage / API reference / Types / CallbackDesc","title":"CallbackDesc","content":"type CallbackDesc = {MemberType: string, Name: string, Parameters: {ParameterDesc}, ReturnType: TypeDesc, Security: string, Tags: {string}}\nThe CallbackDesc type is a table that describes a callback member of a class. It has the following fields:\nField Type Description MemberType string Indicates the type of member. Always \u0026ldquo;Callback\u0026rdquo;. Name string The name of the member. Parameters { ParameterDesc } The parameters of the callback. ReturnType TypeDesc The type of the value returned by the callback. Security string The security context required to set the member. Tags { string } The tags set for the member. "},{"id":"10","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cframe/","permalinkTitle":"Homepage / API reference / Types / CFrame","title":"CFrame","content":"The CFrame type is a matrix representing a combined position and orientation.\nOverview # Item Kind Description Angles Constructor Returns a CFrame composed from angles. fromAxisAngle Constructor Returns a CFrame composed from an axis and angle. fromEulerAnglesXYZ Constructor Returns a CFrame composed from Euler angles. fromEulerAnglesYXZ Constructor Returns a CFrame composed from Euler angles ordered Y, X, Z. fromMatrix Constructor Returns a CFrame from a matrix. fromOrientation Constructor Returns a CFrame composed from orientations. lookAt Constructor Returns a CFrame that points towards a location. new Constructor Returns the default CFrame. Returns a CFrame with a position. Returns a CFrame pointing towards a location while tilted upward. Returns a CFrame with a position from coordinates. Returns a CFrame from a quaternion. Returns a CFrame from raw components. LookVector Property The forward direction. P Property The position of the CFrame. Position Property The position of the CFrame. RightVector Property The right direction. UpVector Property The up direction. X Property The X component of the Position. XVector Property The first row of the rotation matrix. Y Property The Y component of the Position. YVector Property The second row of the rotation matrix. Z Property The Z component of the Position. ZVector Property The third row of the rotation matrix. GetComponents Method Returns the raw components. Inverse Method Returns the inverse CFrame. Lerp Method Linearly interpolates between two CFrames. PointToObjectSpace Method Transforms a Vector3 to local space. PointToWorldSpace Method Transforms a Vector3 to world space. ToAxisAngle Method Returns the orientation as an axis and angle. ToEulerAnglesXYZ Method Returns the orientation as Euler angles. ToEulerAnglesYXZ Method Returns the orientation as Euler angles order Y, X, Z. ToObjectSpace Method Transforms to local space. ToOrientation Method Returns the orientation. ToWorldSpace Method Transforms to world space. VectorToObjectSpace Method Returns a Vector3 rotated to local space. VectorToWorldSpace Method Returns a Vector3 rotated to world space. __add Operator Translates by adding. __eq Operator Returns whether two CFrame values are equal. __mul Operator Composes two CFrames. Transforms to world space. __sub Operator Translates by subtracting. Constructors # Angles # CFrame.Angles(rx: float, ry: float, rz: float): CFrame\nThe Angles constructor returns a CFrame located at the origin, oriented according to the angles ( rx, ry, rz), in radians. Rotations are ordered Z, Y, X.\nfromAxisAngle # CFrame.fromAxisAngle(axis: Vector3, rotation: float): CFrame\nThe fromAxisAngle constructor returns a CFrame located at the origin, rotated rotation radians around axis.\nfromEulerAnglesXYZ # CFrame.fromEulerAnglesXYZ(rx: float, ry: float, rz: float): CFrame\nThe fromEulerAnglesXYZ constructor returns a CFrame located at the origin, oriented according to the angles ( rx, ry, rz), in radians. Rotations are ordered Z, Y, X.\nfromEulerAnglesYXZ # CFrame.fromEulerAnglesYXZ(rx: float, ry: float, rz: float): CFrame\nThe fromEulerAnglesYXZ constructor returns a CFrame located at the origin, oriented according to the angles ( rx, ry, rz), in radians. Rotations are ordered Y, X, Z.\nfromMatrix # CFrame.fromMatrix(position: Vector3, vx: Vector3, vy: Vector3, vz: Vector3): CFrame\nThe fromMatrix constructor returns a CFrame located at position, rotated according to the following rotation matrix:\n[vx.X, vy.X, vz.X] [vx.Y, vy.Y, vz.Y] [vx.Z, vy.Z, vz.Z] If vz is the zero vector, then vz is calculated as the unit of the cross product of vx and vy.\nfromOrientation # CFrame.fromOrientation(rx: float, ry: float, rz: float): CFrame\nThe fromOrientation constructor returns a CFrame located at the origin, oriented according to the angles ( rx, ry, rz), in radians. Rotations are ordered Y, X, Z.\nlookAt # CFrame.lookAt(position: Vector3, lookAt: Vector3, up: Vector3? = Vector3.new(0, 1, 0)): CFrame\nThe lookAt constructor returns a CFrame located at position, facing towards lookAt, with the local upward direction determined by up.\nnew # CFrame.new(): CFrame\nThe new constructor returns a CFrame with the default orientation located at the origin.\nCFrame.new(position: Vector3): CFrame\nThe new constructor returns a CFrame with the default orientation located at position.\nCFrame.new(position: Vector3, lookAt: Vector3): CFrame\nThe new constructor returns a CFrame located at position, facing towards lookAt. The local upward direction is (0, 1, 0).\nCFrame.new(x: float, y: float, z: float): CFrame\nThe new constructor returns a CFrame located at ( x, y, z), with the default orientation.\nCFrame.new(x: float, y: float, z: float, qx: float, qy: float, qz: float, qw: float): CFrame\nThe new constructor returns a CFrame located at ( x, y, z), oriented according to the quaternion ( qx, qy, qz, qw).\nCFrame.new(x: float, y: float, z: float, r00: float, r01: float, r02: float, r10: float, r11: float, r12: float, r20: float, r21: float, r22: float): CFrame\nThe new constructor returns a CFrame located at ( x, y, z), oriented according to the following rotation matrix:\n[r00, r01, r02] [r10, r11, r12] [r20, r21, r22] Properties # LookVector # CFrame.LookVector: Vector3 [readonly]\nThe LookVector field returns the forward-direction, or the negation of the third column of the rotation matrix.\nP # CFrame.P: Vector3 [readonly]\nThe P field returns the position of the CFrame.\nPosition # CFrame.Position: Vector3 [readonly]\nThe Position field returns the position of the CFrame.\nRightVector # CFrame.RightVector: Vector3 [readonly]\nThe RightVector field returns the right-direction, or first column of the rotation matrix.\nUpVector # CFrame.UpVector: Vector3 [readonly]\nThe UpVector field returns the up-direction, or second column of the rotation matrix.\nX # CFrame.X: float [readonly]\nThe X field returns the X component of the Position.\nXVector # CFrame.XVector: Vector3 [readonly]\nThe XVector field returns the first row of the rotation matrix.\nY # CFrame.Y: float [readonly]\nThe Y field returns the Y component of the Position.\nYVector # CFrame.YVector: Vector3 [readonly]\nThe YVector field returns the second row of the rotation matrix.\nZ # CFrame.Z: float [readonly]\nThe Z field returns the Z component of the Position.\nZVector # CFrame.ZVector: Vector3 [readonly]\nThe ZVector field returns the third row of the rotation matrix.\nMethods # GetComponents # CFrame:GetComponents(): (x: float, y: float, z: float, r00: float, r01: float, r02: float, r10: float, r11: float, r12: float, r20: float, r21: float, r22: float)\nThe GetComponents method returns the components of the CFrame\u0026rsquo;s position and rotation matrix.\nInverse # CFrame:Inverse(): CFrame\nThe Inverse method returns the inverse of the CFrame.\nLerp # CFrame:Lerp(goal: CFrame, alpha: float): CFrame\nThe Lerp method returns a CFrame linearly interpolated from the CFrame to goal according to alpha, which has an interval of [0, 1].\nPointToObjectSpace # CFrame:PointToObjectSpace(v: Vector3): Vector3\nThe PointToObjectSpace method returns a Vector3 transformed from world to local space of the CFrame.\nPointToWorldSpace # CFrame:PointToWorldSpace(v: Vector3): Vector3\nThe PointToWorldSpace method returns a Vector3 transformed from local to world space of the CFrame.\nToAxisAngle # CFrame:ToAxisAngle(): (axis: Vector3, rotation: float)\nThe ToAxisAngle method returns the orientation of the CFrame as an angle, in radians, rotated around an axis.\nToEulerAnglesXYZ # CFrame:ToEulerAnglesXYZ(): (rx: float, ry: float, rz: float)\nThe ToEulerAnglesXYZ method returns the approximate angles of the CFrame\u0026rsquo;s orientation, in radians, if ordered Z, Y, X.\nToEulerAnglesYXZ # CFrame:ToEulerAnglesYXZ(): (rx: float, ry: float, rz: float)\nThe ToEulerAnglesYXZ method returns the approximate angles of the CFrame\u0026rsquo;s orientation, in radians, if ordered Y, X, Z.\nToObjectSpace # CFrame:ToObjectSpace(cf: CFrame): CFrame\nThe ToObjectSpace method returns the CFrame transformed from world to local space of cf.\nToOrientation # CFrame:ToOrientation(): (rx: float, ry: float, rz: float)\nThe ToOrientation method returns the approximate angles of the CFrame\u0026rsquo;s orientation, in radians, if ordered Y, X, Z.\nToWorldSpace # CFrame:ToWorldSpace(cf: CFrame): CFrame\nThe ToWorldSpace method returns the CFrame transformed from local to world space of cf.\nVectorToObjectSpace # CFrame:VectorToObjectSpace(v: Vector3): Vector3\nThe VectorToObjectSpace method returns a Vector3 rotated from world to local space of the CFrame.\nVectorToWorldSpace # CFrame:VectorToWorldSpace(v: Vector3): Vector3\nThe VectorToWorldSpace method returns a Vector3 rotated from local to world space of the CFrame.\nOperators # __add # CFrame + Vector3 -\u0026gt; CFrame\nThe add operator returns the CFrame translated in world space by the operand.\n__eq # CFrame == CFrame\nThe equal operator returns true if both operands are CFrame, and each corresponding component is equal.\n__mul # CFrame * CFrame -\u0026gt; CFrame\nThe mul operator returns the composition of two CFrames.\nCFrame * Vector3 -\u0026gt; Vector3\nThe mul operator returns the operand transformed from local to world space of the CFrame.\n__sub # CFrame - Vector3 -\u0026gt; CFrame\nThe sub operator returns the CFrame translated in world space by the negation of the operand.\n"},{"id":"11","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/classdesc/","permalinkTitle":"Homepage / API reference / Types / ClassDesc","title":"ClassDesc","content":"type ClassDesc = {MemoryCategory: string, Name: string, Superclass: string, Tags: {string}}\nThe ClassDesc type is a table that describes a class. It has the following fields:\nField Type Description MemoryCategory string The category of the class. Name string The name of the class. Superclass string The name of the class from which the current class inherits. Tags { string } The tags set for the class. "},{"id":"12","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/client.lua/","permalinkTitle":"Homepage / API reference / Formats / client.lua","title":"client.lua","content":"The client.lua format is an alias for localscript.lua .\nDirection Type Description Decode Instance A LocalScript with a Source property. Encode Stringable Any string-like value. "},{"id":"13","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/client.luau/","permalinkTitle":"Homepage / API reference / Formats / client.luau","title":"client.luau","content":"The client.luau format is an alias for localscript.luau .\nDirection Type Description Decode Instance A LocalScript with a Source property. Encode Stringable Any string-like value. "},{"id":"14","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/color3/","permalinkTitle":"Homepage / API reference / Types / Color3","title":"Color3","content":"The Color3 type represents a color in RGB space.\nOverview # Item Kind Description fromHSV Constructor Returns a Color3 from hue, saturation, and value. fromRGB Constructor Returns a Color3 from 8-bit components. new Constructor Returns the zero Color3. Returns a Color3 from components. B Property The blue component. G Property The green component. R Property The red component. Lerp Method Linearly interpolates between two colors. ToHSV Method Converts to hue, saturation, and value. __eq Operator Returns whether two Color3 values are equal. Constructors # fromHSV # Color3.fromHSV(h: float, s: float, v: float): Color3\nThe fromHSV constructor returns a Color3 from the given hue, saturation, and value.\nfromRGB # Color3.fromRGB(r: int, g: int, b: int): Color3\nThe fromRGB constructor returns a Color3 from the given red, green, and blue components, each having an interval of [0, 255].\nnew # Color3.new(): Color3\nThe new constructor returns the zero value for Color3, with each component being zero, resulting in the color black.\nColor3.new(r: float, g: float, b: float): Color3\nThe new constructor returns a Color3 from the given red, green, and blue components, each having an interval of [0, 1].\nProperties # B # Color3.B: float [readonly]\nThe B field returns the blue component of the color.\nG # Color3.G: float [readonly]\nThe G field returns the green component of the color.\nR # Color3.R: float [readonly]\nThe R field returns the red component of the color.\nMethods # Lerp # Color3:Lerp(goal: Color3, alpha: float): Color3\nThe Lerp method returns a Color3 linearly interpolated from the color to goal according to alpha, which has an interval of [0, 1].\nToHSV # Color3:ToHSV(): (h: float, s: float, v: float)\nThe ToHSV method returns the hue, saturation, and value approximated from the color.\nOperators # __eq # Color3 == Color3\nThe equal operator returns true if both operands are Color3, and each corresponding component is equal.\n"},{"id":"15","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/color3uint8/","permalinkTitle":"Homepage / API reference / Types / Color3uint8","title":"Color3uint8","content":"type Color3uint8 = Color3\nThe Color3uint8 type represents a color with components that have 8-bit precision.\n"},{"id":"16","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/colorsequence/","permalinkTitle":"Homepage / API reference / Types / ColorSequence","title":"ColorSequence","content":"The ColorSequence type represents an interpolated sequence of colors.\nOverview # Item Kind Description new Constructor The new constructor returns a ColorSequence with a single color. Returns a sequence with two colors. Returns a sequence composed of the given keypoints. Keypoints Property The keypoints of the sequence. __eq Operator Returns whether two ColorSequence values are equal. Constructors # new # ColorSequence.new(color: Color3): ColorSequence\nno content for topic \u0026ldquo;Types/ColorSequence:Constructors/new/Single/Description\u0026rdquo; ColorSequence.new(color0: Color3, color1: Color3): ColorSequence\nThe new constructor returns a ColorSequence that interpolates between color0 and color1.\nColorSequence.new(keypoints: {ColorSequenceKeypoint}): ColorSequence\nThe new constructor returns a ColorSequence composed from keypoints. Each keypoint must be ordered ascending by their Time field. The first keypoint must have a Time of 0, and the last keypoint must have a Time of 1.\nProperties # Keypoints # ColorSequence.Keypoints: {ColorSequenceKeypoint} [readonly]\nThe Keypoints field returns the ColorSequenceKeypoints of the sequence.\nOperators # __eq # ColorSequence == ColorSequence\nThe equal operator returns true if both operands are ColorSequence, and each corresponding keypoint is equivalent.\n"},{"id":"17","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/colorsequencekeypoint/","permalinkTitle":"Homepage / API reference / Types / ColorSequenceKeypoint","title":"ColorSequenceKeypoint","content":"The ColorSequenceKeypoint type represents a single keypoint of a ColorSequence.\nOverview # Item Kind Description new Constructor Creates a new keypoint. Creates a new keypoint with an envelope. Envelope Property The amount of variance allowed from the Value. Time Property The time location along the sequence. Value Property The base value. __eq Operator Returns whether two ColorSequenceKeypoint values are equal. Constructors # new # ColorSequenceKeypoint.new(time: float, color: Color3): ColorSequenceKeypoint\nThe new constructor returns a new ColorSequenceKeypoint, time sets the Time field, and color sets the Value field.\nColorSequenceKeypoint.new(time: float, color: Color3, envelope: float): ColorSequenceKeypoint\nThe new constructor returns a new ColorSequenceKeypoint, time sets the Time field, color sets the Value field, and envelope sets the Envelope field.\nProperties # Envelope # ColorSequenceKeypoint.Envelope: float [readonly]\nThe Envelope field returns the amount of variance allowed from the value.\nTime # ColorSequenceKeypoint.Time: float [readonly]\nThe Time field returns the temporal location of the keypoint in the sequence. Has an interval of [0, 1].\nValue # ColorSequenceKeypoint.Value: Color3 [readonly]\nThe Value field returns the base value of the keypoint.\nOperators # __eq # ColorSequenceKeypoint == ColorSequenceKeypoint\nThe equal operator returns true if both operands are ColorSequenceKeypoint, and each corresponding component is equal.\n"},{"id":"18","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/completion/","permalinkTitle":"Homepage / Command reference / completion","title":"completion","content":"rbxmk completion\nThe completion command generates autocompletion scripts for the program. Each sub-command generates a script for a specific shell. See each sub-command\u0026rsquo;s help for details on how to use the generated script.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\nSubcommands # Subcommand Description bash Generate autocompletion script for bash. fish Generate autocompletion script for fish. powershell Generate autocompletion script for powershell. zsh Generate autocompletion script for zsh. "},{"id":"19","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/content/","permalinkTitle":"Homepage / API reference / Types / Content","title":"Content","content":"The Content type is a string that correctly handles a content reference when encoded.\n"},{"id":"20","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cookie/","permalinkTitle":"Homepage / API reference / Types / Cookie","title":"Cookie","content":"The Cookie type contains information about an HTTP cookie.\nFor security reasons, the value of the cookie cannot be accessed.\nCookie is immutable. A Cookie can be created with the Cookie.new constructor. Additionally, Cookies can be fetched from known locations with the Cookie.from function.\nOverview # Item Kind Description from Constructor Gets cookies from a known location. new Constructor Creates a new cookie. Name Property The name of the cookie. __eq Operator Returns whether two Cookie values are equal. Constructors # from # Cookie.from(location: string [\u0026quot;studio\u0026quot;]): (cookies: Cookies)\nThe from constructor retrieves cookies from a known location. location is case-insensitive.\nThe following locations are implemented:\nLocation Description studio Returns the cookies used for authentication when logging into Roblox Studio. Returns nil if no cookies could be retrieved from the location. Throws an error if an unknown location is given.\nnew # Cookie.new(name: string, value: string): Cookie\nThe new constructor creates a new cookie object.\nProperties # Name # Cookie.Name: string [readonly]\nThe Name field is the name of the cookie.\nOperators # __eq # Cookie == Cookie\nThe equal operator returns true if both operands are Cookie values, and their Name properties are equal, and their internal values are equal.\n"},{"id":"21","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/cookies/","permalinkTitle":"Homepage / API reference / Types / Cookies","title":"Cookies","content":"type Cookies = {Cookie}\nThe Cookies type is a list of Cookie values.\n"},{"id":"22","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/csv/","permalinkTitle":"Homepage / API reference / Formats / csv","title":"csv","content":"The csv format decodes comma-separated values into a two-dimensional array.\nDirection Type Description Decode Array An array of arrays of strings. Encode Array An array of arrays of strings. CSV data decodes into a two-dimensional array of strings. For example,\nA,B,C D,E,F G,H,I decodes into\n{ {\u0026#34;A\u0026#34;, \u0026#34;B\u0026#34;, \u0026#34;C\u0026#34;), {\u0026#34;D\u0026#34;, \u0026#34;E\u0026#34;, \u0026#34;F\u0026#34;), {\u0026#34;G\u0026#34;, \u0026#34;H\u0026#34;, \u0026#34;I\u0026#34;), } When encoding, each field must be string-like, but cannot be an Instance.\nWhen decoding, each record must have the same number of fields. When encoding, records do not need to have the same number of fields.\n"},{"id":"23","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/desc/","permalinkTitle":"Homepage / API reference / Types / Desc","title":"Desc","content":"The Desc type describes an entire API.\nOverview # Item Kind Description new Constructor Creates a Desc. Class Method Gets data about a class. ClassTag Method Gets whether a tag is set for a class. Classes Method Gets a list of class names. Copy Method Returns a deep copy of the Desc. Diff Method Gets the difference between two descriptors. Enum Method Gets data about an enum. EnumItem Method Gets data about an enum item. EnumItemTag Method Gets whether a tag is set for an enum item. EnumItems Method Gets a list of item names of an enum. EnumTag Method Gets whether a tag is set for an enum. EnumTypes Method Gets enum values generated from the descriptor. Enums Method Gets a list of enum names. Member Method Gets data about a class member. MemberTag Method Gets whether a tag is set for a class member. Members Method Gets a list of member names of a class. Patch Method Transforms the descriptor. SetClass Method Sets data about a class. SetEnum Method Sets data about an enum. SetEnumItem Method Sets data about an enum item. SetMember Method Sets data about a class member. Constructors # new # Desc.new(): Desc\nThe new constructor creates a new Desc.\nMethods # Class # Desc:Class(class: string): ClassDesc?\nThe Class method returns the class of the API corresponding to the name class, or nil if the class does not exist.\nClassTag # Desc:ClassTag(class: string, tag: string): bool?\nReturns whether tag is set for the class corresponding to the name class. Returns nil if the class does not exist.\nClasses # Desc:Classes(): {string}\nThe Classes method returns a list of names of all the classes of the API.\nCopy # Desc:Copy(): Desc\nThe Copy method returns a deep copy of the Desc.\nDiff # Desc:Diff(next: Desc?): (diff: DescActions)\nThe Diff method compares the root descriptor with another and returns the differences between them. A nil value for next is treated the same as an empty descriptor. The result is a list of actions that describe how to transform the descriptor into next.\nEnum # Desc:Enum(enum: string): EnumDesc?\nThe Enum method returns the enum of the API corresponding to the name enum, or nil if the enum does not exist.\nEnumItem # Desc:EnumItem(enum: string, item: string): EnumItemDesc?\nThe EnumItem method returns the enum item of the API corresponding to the enum name enum and item name item, or nil if the enum or item does not exist.\nEnumItemTag # Desc:EnumItemTag(enum: string, item: string, tag: string): bool?\nReturns whether tag is set for the enum item corresponding to the name item of the enum named enum. Returns nil if the enum or item does not exist.\nEnumItems # Desc:EnumItems(): {string}?\nThe Classes method returns a list of names of all the items of the enum corresponding to the name enum. Returns nil if the enum does not exist.\nEnumTag # Desc:EnumTag(enum: string, tag: string): bool?\nReturns whether tag is set for the enum corresponding to the name enum. Returns nil if the enum does not exist.\nEnumTypes # Desc:EnumTypes(): Enums\nThe EnumTypes method returns a set of enum values generated from the current state of the Desc. These enums are associated with the Desc, and may be used by certain properties, so it is important to generate them before operating on such properties. Additionally, EnumTypes should be called after modifying enum and enum item descriptors, to regenerate the enum values.\nThe API of the resulting enums matches that of Roblox\u0026rsquo;s Enums type. A common pattern is to assign the result of EnumTypes to the \u0026ldquo;Enum\u0026rdquo; variable so that it matches Roblox\u0026rsquo;s API:\nEnum = desc:EnumTypes() print(Enum.NormalId.Front) Enums # Desc:Enums(): {string}\nThe Enums method returns a list of names of all the enums of the API.\nMember # Desc:Member(class: string, member: string): MemberDesc?\nThe Member method returns the class member of the API corresponding to the class name enum and member name item, or nil if the class or member does not exist.\nMemberTag # Desc:MemberTag(class: string, member: string, tag: string): bool?\nReturns whether tag is set for the class member corresponding to the name member of the class named class. Returns nil if the class or member does not exist.\nMembers # Desc:Members(): {string}?\nReturns whether tag is set for the class member corresponding to the name member of the class named class. Returns nil if the class or member does not exist.\nPatch # Desc:Patch(actions: DescActions)\nThe Patch method transforms the root descriptor according to a list of actions. Each action in the list is applied in order. Actions that are incompatible are ignored.\nSetClass # Desc:SetClass(class: string, desc: ClassDesc?): bool\nThe SetClass method sets the fields of the class corresponding to the name class. If the class already exists, then only non-nil fields are set. Fields with the incorrect type are ignored. If desc is nil, then the class is removed.\nReturns false if desc is nil and no class exists. Returns true otherwise.\nSetEnum # Desc:SetEnum(enum: string, desc: EnumDesc?): bool\nThe SetEnum method sets the fields of the enum corresponding to the name enum. If the enum already exists, then only non-nil fields are set. Fields with the incorrect type are ignored. If desc is nil, then the enum is removed.\nReturns false if desc is nil and no enum exists. Returns true otherwise.\nSetEnumItem # Desc:SetEnumItem(enum: string, item: string, desc: EnumItemDesc?): bool?\nThe SetEnumItem method sets the fields of the enum item corresponding to the name item of the enum named enum. If the item already exists, then only non-nil fields are set. Fields with the incorrect type are ignored. If desc is nil, then the enum is removed.\nReturns nil if the enum does not exist. Returns false if desc is nil and no item exists. Returns true otherwise.\nSetMember # Desc:SetMember(class: string, member: string, desc: ClassDesc?): bool?\nThe SetMember method sets the fields of the member corresponding to the name member of the class named class. If the member already exists, then only non-nil fields are set. Fields with the incorrect type are ignored. If desc is nil, then the member is removed.\nReturns nil if the class does not exist. Returns false if desc is nil and no member exists. Returns true otherwise.\n"},{"id":"24","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/desc-patch.json/","permalinkTitle":"Homepage / API reference / Formats / desc-patch.json","title":"desc-patch.json","content":"The desc-patch.json format encodes actions that transform descriptors, in JSON format.\nDirection Type Description Decode DescActions A list of DescAction values. Encode DescActions A list of DescAction values. "},{"id":"25","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/desc.json/","permalinkTitle":"Homepage / API reference / Formats / desc.json","title":"desc.json","content":"The desc.json format encodes a root descriptor file, more commonly known as an \u0026ldquo;API dump\u0026rdquo;, in JSON format.\nDirection Type Description Decode Desc A root descriptor. Encode Desc A root descriptor. "},{"id":"26","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descaction/","permalinkTitle":"Homepage / API reference / Types / DescAction","title":"DescAction","content":"The DescAction type describes a single action that transforms a descriptor.\nA DescAction can be created with the DescAction.new constructor. It is also returned from the Desc.Diff method and the desc-patch.json format.\nOverview # Item Kind Description new Constructor Creates a new DescAction. Element Property The type of element. Primary Property The name of the primary element. Secondary Property The name of the secondary element. Type Property The type of transformation. Field Method Gets a field. Fields Method Gets all fields. SetField Method Sets a field. SetFields Method Sets all fields. Constructors # new # DescAction.new(type: Enum.DescActionType, element: Enum.DescActionElement): DescAction\nThe new constructor returns a new DescAction initialized with a type and an element.\nProperties # Element # DescAction.Element: Enum.DescActionElement\nThe Element property is the type of element to which the action applies.\nPrimary # DescAction.Primary: string\nThe Primary property is the name of the primary element. For example, the class name or enum name.\nSecondary # DescAction.Secondary: string\nThe Secondary property is the name of the secondary element. For example, the name of a class member or enum item. An empty string indicates that the action applies to the primary element.\nType # DescAction.Type: Enum.DescActionType\nThe Type property is the type of transformation performed by the action.\nMethods # Field # DescAction:Field(name: string): any\nThe Field method returns the value of the name field, or nil if the action has no such field.\nFields # DescAction:Fields(): {[string]: DescFields}\nThe Fields method returns a collection of field names mapped to values.\nSetField # DescAction:SetField(name: string, value: any)\nThe SetField method sets the value of the name field to value.\nSetFields # DescAction:SetFields(fields: {[string]: any})\nThe SetFields method replaces all fields of the action with fields.\n"},{"id":"27","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descactions/","permalinkTitle":"Homepage / API reference / Types / DescActions","title":"DescActions","content":"type DescActions = {DescAction}\nThe DescActions type is a list of DescAction values.\n"},{"id":"28","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/descfields/","permalinkTitle":"Homepage / API reference / Types / DescFields","title":"DescFields","content":"type DescFields = {[string]: any}\nThe DescFields type is a collection of DescAction fields. Each element is a pair that maps a field name to a value.\nThe following value types are allowed:\nType Notes bool number string TypeDesc Table must contain \u0026ldquo;Category\u0026rdquo; and \u0026ldquo;Name\u0026rdquo; fields. ParameterDesc Field name must be \u0026ldquo;Parameters\u0026rdquo;. {string} Field name must be \u0026ldquo;Tags\u0026rdquo;. "},{"id":"29","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/dictionary/","permalinkTitle":"Homepage / API reference / Types / Dictionary","title":"Dictionary","content":"The Dictionary type is an associative array that maps strings to values.\n"},{"id":"30","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/direntry/","permalinkTitle":"Homepage / API reference / Types / DirEntry","title":"DirEntry","content":"type DirEntry = {IsDir: bool, Name: string}\nThe DirEntry type is a table that contains a file entry of a directory. It has the following fields:\nField Type Description Name string The base name of the file. IsDir boolean Whether the file is a directory. "},{"id":"31","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/doc/","permalinkTitle":"Homepage / Command reference / doc","title":"doc","content":"rbxmk doc REFERENCE The doc command displays documentation for a given API or topic.\nTopics are stored in a tree, where each topic may have sub-topics. A \u0026ldquo;reference\u0026rdquo;, similar to a file path, can refer to a topic, or a section within a topic. The presence of a : separator causes the reference to begin drilling into the sections of the topic to the left of the separator. The topic portion of a reference is case-insensitive, while the section portion is case-sensitive.\nFor example,\nrbxmk doc types/Instance:Methods/FindFirstChild This reference will start at the top-level \u0026ldquo;types\u0026rdquo; topic, then drill into the \u0026ldquo;Instance\u0026rdquo; sub-topic, then drill into the \u0026ldquo;Method\u0026rdquo; section, then the \u0026ldquo;FindFirstChild\u0026rdquo; sub-section. The doc command will then display the content of this sub-section only.\nIf the referred topic has no content, but has sub-topics, then these sub-topics are listed instead (see --list). If no reference is specified, then all top-level topics are listed.\nThe following top-level topics are available:\ncommands example flags formats interactive libraries messages types usage Flags # export # --export\nDefault: false\nEnsure that content is formatted for output, rather than for display in the terminal. Applies to the \u0026ldquo;terminal\u0026rdquo; format.\nformat # -f, --format string\nDefault: \u0026quot;terminal\u0026quot;\nSets the output format of the produced fragment. Available formats are \u0026ldquo;terminal\u0026rdquo;, \u0026ldquo;html\u0026rdquo;.\nhelp # -h, --help\nDefault: false\nDisplays help for the command.\nlist # -l, --list\nDefault: false\nReturns a list of sub-topics and sub-sections for the given reference. If no reference is specified, then all top-level topics are listed.\nEach item in the list is a reference relative to the given reference. The top-level sections of a topic will be prefixed with \u0026ldquo;:\u0026rdquo;. Sub-topics and sub-sections of sections will be prefixed with \u0026ldquo;/\u0026rdquo;. In effect, the whole name of a listed item, including the prefix, can be appended to the current reference to query that item.\nrecursive # -r, --recursive\nDefault: false\nList references recursively. Implies \u0026ndash;list.\nwidth # -w, --width int\nDefault: 0\nWhen possible, render formatted fragments with the given width, wrapping text around. If 0, then no wrapping is applied. If less than 0, then the width is based on the current context (for example, the \u0026ldquo;terminal\u0026rdquo; format renders with the current width of the terminal).\n"},{"id":"32","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/double/","permalinkTitle":"Homepage / API reference / Types / double","title":"double","content":"The double type is a number with 64-bit floating-point precision.\n"},{"id":"33","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/download-asset/","permalinkTitle":"Homepage / Command reference / download-asset","title":"download-asset","content":"rbxmk download-asset [ FLAGS ] --id INT [ PATH ] The download-asset command downloads an asset from the roblox website.\nThe --id flag, which is required, specifies the ID of the asset to download.\nThe first non-flag argument is the path to a file to write to. If not specified, then the file will be written to standard output.\nEach cookie flag appends to the list of cookies that will be sent with the request. Such flags can be specified any number of times.\nFlags # cookie-var # --cookie-var var\nAppend a cookie from environment variable `var`. The content is formatted as a number of Set-Cookie headers. Can be given any number of times.\ncookies-file # --cookies-file path\nAppend cookies from the file located at `path`. The file is formatted as a number of Set-Cookie headers. Can be given any number of times.\ncookies-from # --cookies-from location\nAppend cookies from a known `location`. See the documentation of Cookie.from for a list of locations. Can be given any number of times.\nfile-format # --file-format string\nThe format to encode the file as. Defaults to \u0026ndash;format.\nformat # --format string\nDefault: \u0026quot;bin\u0026quot;\nThe format to decode the asset as.\nhelp # -h, --help\nDefault: false\nDisplays help for the command.\nid # --id int64\nDefault: 0\nThe ID of the asset to download (required).\n"},{"id":"34","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/dump/","permalinkTitle":"Homepage / Command reference / dump","title":"dump","content":"rbxmk dump FORMAT The dump command dumps the API of the rbxmk Lua environment in a specified format.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\nSubcommands # Subcommand Description fragments List of document fragment paths. json General JSON format. plugin Run a dump format plugin. selene Selene TOML format. "},{"id":"35","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enum/","permalinkTitle":"Homepage / API reference / Types / Enum","title":"Enum","content":"The Enum type is a set of named values.\nOverview # Item Kind Description GetEnumItems Method Returns the items of the enum. __index Operator Gets an item by name. Methods # GetEnumItems # Enum:GetEnumItems(): {EnumItem}\nThe GetEnumItems method returns a list of items of the enum.\nOperators # __index # Enum[name: string]: EnumItem\nThe index operator returns an item of the enum indexed by name.\n"},{"id":"36","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumdesc/","permalinkTitle":"Homepage / API reference / Types / EnumDesc","title":"EnumDesc","content":"type EnumDesc = {Name: string, Tags: {string}}\nThe EnumDesc type is a table that describes an enum. It has the following fields:\nField Type Description Name string The name of the enum. Tags { string } The tags set for the enum. "},{"id":"37","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumitem/","permalinkTitle":"Homepage / API reference / Types / EnumItem","title":"EnumItem","content":"The EnumItem type represents a single item of an Enum.\nOverview # Item Kind Description EnumType Property The Enum of the item. Name Property no content for topic \u0026ldquo;Types/EnumItem:Properties/Name/Summary\u0026rdquo; Value Property no content for topic \u0026ldquo;Types/EnumItem:Properties/Value/Summary\u0026rdquo; IsA Method Returns whether the item belongs to an enum. Properties # EnumType # EnumItem.EnumType: Enum [readonly]\nThe EnumType field returns the Enum of the item.\nName # EnumItem.Name: string [readonly]\nThe Name field returns the name of the item.\nValue # EnumItem.Value: int [readonly]\nThe Value field returns the value of the item.\nMethods # IsA # EnumItem:IsA(enumName: string): bool\nThe IsA method returns whether the item belongs to an enum of the name enumName.\n"},{"id":"38","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enumitemdesc/","permalinkTitle":"Homepage / API reference / Types / EnumItemDesc","title":"EnumItemDesc","content":"type EnumItemDesc = {Index: int?, Name: string, Tags: {string}, Value: int}\nThe EnumitemDesc type is a table that describes an item of an enum. It has the following fields:\nField Type Description Index int Hints the order of the item.. Name string The name of the item. Tags { string } The tags set for the item. Value int The numeric value of the item. "},{"id":"39","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/enums/","permalinkTitle":"Homepage / API reference / Types / Enums","title":"Enums","content":"The Enums type is a collection of Enum values.\nOverview # Item Kind Description GetEnums Method Returns a list of Enum values. __index Operator Gets an Enum by name. Methods # GetEnums # Enums:GetEnums(): {Enum}\nThe GetEnums method returns a list of Enum values in the collection.\nOperators # __index # Enums[name: string]: Enum\nThe index operator returns an enum in the collection indexed by name.\n"},{"id":"40","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/eventdesc/","permalinkTitle":"Homepage / API reference / Types / EventDesc","title":"EventDesc","content":"type EventDesc = {MemberType: string, Name: string, Parameters: {ParameterDesc}, Security: string, Tags: {string}}\nThe EventDesc type is a table that describes a event member of a class. It has the following fields:\nField Type Description MemberType string Indicates the type of member. Always \u0026ldquo;Event\u0026rdquo;. Name string The name of the member. Parameters { ParameterDesc } The parameters of the event. Security string The security context required to get the member. Tags { string } The tags set for the member. "},{"id":"41","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/faces/","permalinkTitle":"Homepage / API reference / Types / Faces","title":"Faces","content":"The Faces type represents a set of directions, on three orthogonal axes, that are considered active. Corresponds to the Faces type in Roblox.\nOverview # Item Kind Description fromComponents Constructor Creates a new Faces with components set directly from each argument. new Constructor Creates a new Faces with components set from a number of values. Back Property Whether the back face is active. Bottom Property Whether the bottom face is active. Front Property Whether the front face is active. Left Property Whether the left face is active. Right Property Whether the right face is active. Top Property Whether the top face is active. __eq Operator Returns whether two Faces values are equal. Constructors # fromComponents # Faces.fromComponents(right: bool, top: bool, back: bool, left: bool, bottom: bool, front: bool)\nThe fromComponents constructor returns a new Faces value, with each argument setting the corresponding component.\nnew # Faces.new(...: EnumItem | string | int)\nThe new constructor returns a new Faces value. Each valid argument sets a component of the value, depending on the type:\nEnumItem: Enum name is \u0026quot;Axis\u0026quot;, and item name is one of the following:\n\u0026quot;X\u0026quot;: sets Right and Left. \u0026quot;Y\u0026quot;: sets Top and Bottom. \u0026quot;Z\u0026quot;: sets Back and Front. Enum name is \u0026quot;NormalId\u0026quot;, and item name is \u0026quot;Right\u0026quot;, \u0026quot;Top\u0026quot;, \u0026quot;Back\u0026quot;, \u0026quot;Left\u0026quot;, \u0026quot;Bottom\u0026quot;, or \u0026quot;Front\u0026quot;.\nnumber: value is one of the following: 0: sets Right. 1: sets Top. 2: sets Back. 3: sets Left. 4: sets Bottom. 5: sets Front. string: value is \u0026quot;Right\u0026quot;, \u0026quot;Top\u0026quot;, \u0026quot;Back\u0026quot;, \u0026quot;Left\u0026quot;, \u0026quot;Bottom\u0026quot;, or \u0026quot;Front\u0026quot;. Properties # Back # Faces.Back: bool [readonly]\nThe Back field returns whether the back face is active.\nBottom # Faces.Bottom: bool [readonly]\nThe Bottom field returns whether the bottom face is active.\nFront # Faces.Front: bool [readonly]\nThe Front field returns whether the front face is active.\nLeft # Faces.Left: bool [readonly]\nThe Left field returns whether the left face is active.\nRight # Faces.Right: bool [readonly]\nThe Right field returns whether the right face is active.\nTop # Faces.Top: bool [readonly]\nThe Top field returns whether the top face is active.\nOperators # __eq # Faces == Faces\nThe equal operator returns true if both operands are Faces, and each corresponding component is equal.\n"},{"id":"42","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/fileinfo/","permalinkTitle":"Homepage / API reference / Types / FileInfo","title":"FileInfo","content":"type FileInfo = {IsDir: bool, ModTime: int64, Name: string, Size: int64}\nThe FileInfo type is a table that contains metadata about a file. It has the following fields:\nField Type Description Name string The base name of the file. IsDir boolean Whether the file is a directory. Size number The size of the file, in bytes. ModTime number The modification time of the file, in Unix time. "},{"id":"43","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/completion/fish/","permalinkTitle":"Homepage / Command reference / completion / fish","title":"fish","content":"rbxmk completion fish\nGenerate the autocompletion script for the fish shell.\nTo load completions in your current shell session:\nrbxmk completion fish | source To load completions for every new session, execute once:\nrbxmk completion fish \u0026gt; ~/.config/fish/completions/rbxmk.fish You will need to start a new shell for this setup to take effect.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\nno-descriptions # --no-descriptions\nDefault: false\nDisables completion descriptions.\n"},{"id":"44","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/float/","permalinkTitle":"Homepage / API reference / Types / float","title":"float","content":"The double type is a number with 32-bit floating-point precision.\n"},{"id":"45","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/font/","permalinkTitle":"Homepage / API reference / Types / Font","title":"Font","content":"The Font type represents the description of a font.\nOverview # Item Kind Description new Constructor Creates a new Font. CachedFaceId Property A sequential value. Family Property Path to a font family. Style Property Whether the text is italic. Weight Property The weight of font text. __eq Operator Returns whether two Font values are equal. Constructors # new # Font.new(family: Content, weight: int, style: int): Font\nThe new constructor returns a Font composed of the components from each argument.\nProperties # CachedFaceId # Font.CachedFaceId: Content [readonly]\nThe CachedFaceId property is an internal value representing a path to resolved font data.\nFamily # Font.Family: Content [readonly]\nThe Family property points to a font file.\nStyle # Font.Style: int [readonly]\nThe Style property determines whether the text is italic. 0 means normal, and 1 means italic.\nWeight # Font.Weight: int [readonly]\nThe Weight property determines the thickness of the text. The value is a standard OpenType\nweight value , where 400 is regular, 700 is bold, 100 is thin, and 900 is heavy.\nOperators # __eq # Font == Font\nThe equal operator returns true if both operands are Font, and each corresponding component is equal.\n"},{"id":"46","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/formatselector/","permalinkTitle":"Homepage / API reference / Types / FormatSelector","title":"FormatSelector","content":"type FormatSelector = string|{[string]: any, Format: string}\nThe FormatSelector type selects a format , and optionally configures the format.\nIf a table, then the Format field indicates the name of the format to use, and remaining fields are options that configure the format, which depend on the format specified. All such fields are optional.\nIf a string, it is the name of the format to use, and specifies no options.\n"},{"id":"47","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/dump/fragments/","permalinkTitle":"Homepage / Command reference / dump / fragments","title":"fragments","content":"rbxmk dump fragments\nThe fragments dump format lists the fragment references made by the program.\nA fragment is a chunk of text that documents some particular element. Internally, fragments are represented by a collection of files. A fragment reference is a combination of a file path, which drills into the file tree, and a \u0026ldquo;section\u0026rdquo; path, which drills into the sections of the referred file.\nThe following top-level directories are defined:\nLibraries: Descriptions of items within libraries. Types: Descriptions of data types. Commands: Descriptions of sub-commands. DumpFormats: Descriptions of dump formats (like this one). Flags: Descriptions of flags that apply to multi sub-commands. Note that only fragments referred to by the program are listed. For a complete list of all fragments, use the following command:\nrbxmk doc --recursive Flags # help # -h, --help\nDefault: false\nDisplays help for the command.\n"},{"id":"48","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/functiondesc/","permalinkTitle":"Homepage / API reference / Types / FunctionDesc","title":"FunctionDesc","content":"type FunctionDesc = {MemberType: string, Name: string, Parameters: {ParameterDesc}, ReturnType: TypeDesc, Security: string, Tags: {string}}\nThe FunctionDesc type is a table that describes a function member of a class. It has the following fields:\nField Type Description MemberType string Indicates the type of member. Always \u0026ldquo;Function\u0026rdquo;. Name string The name of the member. ReturnType TypeDesc The type of the value returned by the function. Security string The security context required to set the member. Parameters { ParameterDesc } The parameters of the function. Tags { string } The tags set for the member. "},{"id":"49","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/help/","permalinkTitle":"Homepage / Command reference / help","title":"help","content":"rbxmk help [ COMMAND ] The help command displays help for a command, or general help if no command is given.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\n"},{"id":"50","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpheaders/","permalinkTitle":"Homepage / API reference / Types / HttpHeaders","title":"HttpHeaders","content":"type HttpHeaders = {[string]: string|{string}}\nThe HttpHeaders type is a table that specifies the headers of an HTTP request or response. Each entry consists of a header name mapped to a string value. If a header requires multiple values, the name may be mapped to an array of values instead.\nFor response headers, a header is always mapped to an array, and each array will have at least one value.\n"},{"id":"51","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpoptions/","permalinkTitle":"Homepage / API reference / Types / HttpOptions","title":"HttpOptions","content":"type HttpOptions = {Body: any?, Cookies: Cookies?, Headers: HttpHeaders?, Method: string?, RequestFormat: FormatSelector?, ResponseFormat: FormatSelector?, URL: string}\nThe HttpOptions type is a table that specifies how an HTTP request is made. It has the following fields:\nField Type Description URL string The URL to make to request to. Method string ? The HTTP method. Defaults to GET. RequestFormat FormatSelector ? The format used to encode the request body. ResponseFormat FormatSelector ? The format used to decode the response body. Headers HttpHeaders ? The HTTP headers to include with the request. Cookies Cookies ? Cookies to append to the Cookie header. Body any ? The body of the request, to be encoded by the specified format. If RequestFormat is unspecified, then no request body is sent. If ResponseFormat is unspecified, then no response body is returned.\nUse of the Cookies field ensures that cookies sent with the request are well-formed, and is preferred over setting the Cookie header directly.\n"},{"id":"52","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httprequest/","permalinkTitle":"Homepage / API reference / Types / HttpRequest","title":"HttpRequest","content":"The HttpRequest type represents a pending HTTP request.\nOverview # Item Kind Description Cancel Method Cancels the pending request. Resolve Method Returns the response to the request. Methods # Cancel # HttpRequest:Cancel()\nThe Cancel method cancels the pending request.\nResolve # HttpRequest:Resolve(): (resp: HttpResponse)\nThe Resolve method blocks until the request has finished, and returns the response. Throws an error if a problem occurred while resolving the request.\n"},{"id":"53","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/httpresponse/","permalinkTitle":"Homepage / API reference / Types / HttpResponse","title":"HttpResponse","content":"type HttpResponse = {Body: Variant?, Cookies: Cookies, Headers: HttpHeaders, StatusCode: int, StatusMessage: string, Success: bool}\nThe HttpResponse type is a table that contains the response of a request. It has the following fields:\nField Type Description Success bool Whether the request succeeded. True if StatusCode between 200 and 299. StatusCode int The HTTP status code of the response. StatusMessage string A readable message corresponding to the StatusCode. Headers HttpHeaders A set of response headers. Cookies Cookies Cookies parsed from the Set-Cookie header. Body any? The decoded body of the response. "},{"id":"54","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/instance/","permalinkTitle":"Homepage / API reference / Types / Instance","title":"Instance","content":"The Instance type represents the content of a Roblox instance. It provides a similar API to that of Roblox.\nSee the Instances section for details on the implementation of Instances.\nOverview # Item Kind Description new Constructor Creates a new Instance. ClassName Property The class of the instance. Name Property A name identifying the instance. Parent Property The parent instance. sym.AttrConfig Symbol The AttrConfig used by the instance. sym.Desc Symbol The descriptor used by the instance. sym.IsService Symbol Whether the instance is a service. sym.Metadata Symbol Gets metadata of the DataModel. sym.Properties Symbol All properties of the instance. sym.RawAttrConfig Symbol The direct AttrConfig of the instance. sym.RawDesc Symbol The direct descriptor of the instance. sym.Reference Symbol A reference to the instance. ClearAllChildren Method Remove each child of the instance. Clone Method Creates a copy of the instance. Descend Method Gets a descendant by name. Destroy Method Removes an instance. FindFirstAncestor Method Gets an ancestor by name. FindFirstAncestorOfClass Method Gets an ancestor by class name. FindFirstAncestorWhichIsA Method Gets an ancestor by inherited class name. FindFirstChild Method Gets a child by name. FindFirstChildOfClass Method Gets a child by class name. FindFirstChildWhichIsA Method Gets a child by inherited class name. GetAttribute Method Gets an attribute. GetAttributes Method Gets all attributes. GetChildren Method Gets the children. GetDescendants Method Gets all descendants. GetFullName Method Gets a name according to the ancestors of the instance. GetService Method Gets a service instance from the tree. IsA Method Gets whether the class inherits from a given class name. IsAncestorOf Method Gets whether the instance is an ancestor. IsDescendantOf Method Gets whether the instance is an descendant. SetAttribute Method Sets an attribute. SetAttributes Method Sets all attributes. __index Operator Gets a property. __newindex Operator Sets a property. Constructors # new # Instance.new(className: string, parent: Instance?, descriptor: (Desc | bool)?): Instance\nThe new constructor returns a new Instance of the given class. className sets the ClassName property of the instance. If parent is specified, it sets the Parent property.\nIf desc is specified, then it sets the sym.Desc member. Additionally, new will throw an error if the class does not exist. If no descriptor is specified, then any class name will be accepted.\nIf className is \u0026ldquo;DataModel\u0026rdquo;, then parent must be nil.\nProperties # ClassName # Instance.ClassName: string\nThe ClassName property gets or sets the class of the instance.\nClassName can be modified, except when the class is \u0026ldquo;DataModel\u0026rdquo;. Changing the class of an instance has no additional effects; properties are not transformed to conform to any descriptors of the class.\nName # Instance.Name: string\nThe Name property gets or sets a name identifying the instance.\nParent # Instance.Parent: Instance?\nThe Parent property gets or sets the parent of the instance, which may be nil.\nSymbols # sym.AttrConfig # Instance[sym.AttrConfig]: AttrConfig | bool | nil\nThe AttrConfig symbol is the AttrConfig being used by the instance. AttrConfig is inherited, the behavior of which is described in the Value inheritance section.\nsym.Desc # Instance[sym.Desc]: Desc | bool | nil\nThe Desc symbol is the descriptor being used by the instance. Desc is inherited, the behavior of which is described in the Value inheritance section.\nsym.IsService # Instance[sym.IsService]: bool\nThe IsService symbol indicates whether the instance is a service, such as Workspace or Lighting. This is used by some formats to determine how to encode and decode the instance.\nsym.Metadata # Instance[sym.Metadata]: Dictionary\nThis member only exists if the instance is of class DataModel.\nThe Metadata symbol gets or sets the metadata associated with the DataModel. This metadata is used by certain formats (e.g. ExplicitAutoJoints).\nsym.Properties # Instance[sym.Properties]: Dictionary\nThe Properties symbol gets or sets all properties of the instance. Each entry in the table is a property name mapped to the value of the property.\nWhen getting, properties that would produce an error are ignored.\nWhen setting, properties in the instance that are not in the table are removed. If any property could not be set, then an error is thrown, and no properties are set or removed.\nsym.RawAttrConfig # Instance[sym.RawAttrConfig]: AttrConfig | bool | nil\nThe RawAttrConfig symbol is the raw member corresponding to to sym.AttrConfig . It is similar to AttrConfig, except that it considers only the direct value of the current instance. The exact behavior of RawAttrConfig is described in the Value inheritance section.\nsym.RawDesc # Instance[sym.RawDesc]: Desc | bool | nil\nThe RawDesc symbol is the raw member corresponding to to sym.Desc . It is similar to Desc, except that it considers only the direct value of the current instance. The exact behavior of RawDesc is described in the Value inheritance section.\nsym.Reference # Instance[sym.Reference]: string\nThe Reference symbol is a string used to refer to the instance from within an instance tree. Certain formats use this to encode a reference to an instance. For example, the RBXMX format will generate random UUIDs for its references (e.g. \u0026ldquo;RBX8B658F72923F487FAE2F7437482EF16D\u0026rdquo;).\nA reference should not be expected to persist when being encoded or decoded.\nMethods # ClearAllChildren # Instance:ClearAllChildren()\nThe ClearAllChildren method sets the Parent of each child of the instance to nil.\nUnlike in Roblox, ClearAllChildren does not affect descendants.\nClone # Instance:Clone(): Instance\nThe Clone method returns a copy of the instance.\nUnlike in Roblox, Clone does not ignore an instance if its Archivable property is set to false.\nDescend # Instance:Descend(...: string): Instance?\nThe Descend method returns a descendant of the instance by recursively searching for each name in succession according to FindFirstChild . Returns nil if a child could not be found. Throws an error if no arguments are given.\nDescend provides a safe alternative to indexing the children of an instance, which is not implemented by rbxmk.\nlocal face = game:Descend(\u0026#34;Workspace\u0026#34;, \u0026#34;Noob\u0026#34;, \u0026#34;Head\u0026#34;, \u0026#34;face\u0026#34;) Destroy # Instance:Destroy()\nThe Destroy method sets the Parent of the instance to nil.\nUnlike in Roblox, the Parent of the instance remains unlocked. Destroy also does not affect descendants.\nFindFirstAncestor # Instance:FindFirstAncestor(name: string): Instance?\nThe FindFirstAncestor method returns the first ancestor whose Name equals name, or nil if no such instance was found.\nFindFirstAncestorOfClass # Instance:FindFirstAncestorOfClass(className: string): Instance?\nThe FindFirstAncestorOfClass method returns the first ancestor of the instance whose ClassName equals className, or nil if no such instance was found.\nFindFirstAncestorWhichIsA # Instance:FindFirstAncestorWhichIsA(className: string): Instance?\nThe FindFirstAncestorWhichIsA method returns the first ancestor of the instance whose ClassName inherits className according to the instance\u0026rsquo;s descriptor, or nil if no such instance was found. If the instance has no descriptor, then the ClassName is compared directly.\nFindFirstChild # Instance:FindFirstChild(name: string, recurse: bool?): Instance?\nThe FindFirstChild method returns the first child of the instance whose Name equals name, or nil if no such instance was found. If recurse is true, then descendants are also searched, top-down.\nFindFirstChildOfClass # Instance:FindFirstChildOfClass(className: string, recurse: bool?): Instance?\nThe FindFirstChildOfClass method returns the first child of the instance whose ClassName equals className, or nil if no such instance was found. If recurse is true, then descendants are also searched, top-down.\nFindFirstChildWhichIsA # Instance:FindFirstChildWhichIsA(className: string, recurse: bool?): Instance?\nThe FindFirstChildWhichIsA method returns the first child of the instance whose ClassName inherits className, or nil if no such instance was found. If the instance has no descriptor, then the ClassName is compared directly. If recurse is true, then descendants are also searched, top-down.\nGetAttribute # Instance:GetAttribute(attribute: string): any?\nThe GetAttribute method returns the value of attribute, or nil if the attribute is not found.\nThis function uses the instance\u0026rsquo;s sym.AttrConfig to select the property to decode from, which is expected to be string-like. An error is thrown if the data could not be decoded.\nSee the rbxattr format for a list of possible attribute value types.\nThe Attributes section provides a more general description of attributes.\nGetAttributes # Instance:GetAttributes(): Dictionary\nThe GetAttributes method returns a dictionary of attribute names mapped to values.\nThis function uses the instance\u0026rsquo;s sym.AttrConfig to select the property to decode from, which is expected to be string-like. An error is thrown if the data could not be decoded.\nSee the rbxattr format for a list of possible attribute value types.\nThe Attributes section provides a more general description of attributes.\nGetChildren # Instance:GetChildren(): Objects\nThe GetChildren method returns a list of children of the instance.\nGetDescendants # Instance:GetDescendants(): Objects\nThe GetDescendants method returns a list of descendants of the instance.\nGetFullName # Instance:GetFullName(): string\nThe GetFullName method returns the concatenation of the Name of each ancestor of the instance and the instance itself, separated by . characters. If an ancestor is a DataModel, it is not included.\nGetService # Instance:GetService(name: string): Instance\nThis member only exists if the instance is of class DataModel.\nThe GetService method returns the first child of the DataModel whose ClassName equals className. If no such child exists, then a new instance of className is created. The Name of the instance is set to className, sym.IsService is set to true, and Parent is set to the DataModel.\nIf the DataModel has a descriptor, then GetService will throw an error if the created class\u0026rsquo;s descriptor does not have the \u0026ldquo;Service\u0026rdquo; tag set.\nIsA # Instance:IsA(className: string): bool\nThe IsA method returns whether the ClassName inherits from className, according to the instance\u0026rsquo;s descriptor. If the instance has no descriptor, then IsA returns whether ClassName equals className.\nIsAncestorOf # Instance:IsAncestorOf(descendant: Instance?): bool\nThe IsAncestorOf method returns whether the instance of an ancestor of descendant.\nIsDescendantOf # Instance:IsDescendantOf(ancestor: Instance?): bool\nThe IsDescendantOf method returns whether the instance of a descendant of ancestor.\nSetAttribute # Instance:SetAttribute(attribute: string, value: Variant?)\nThe SetAttribute method sets attribute to value. If value is nil, then the attribute is removed.\nThis function uses the instance\u0026rsquo;s sym.AttrConfig to select the property to decode from, which is expected to be string-like. This function decodes the serialized attributes, sets the given value, then re-encodes the attributes. An error is thrown if the data could not be decoded or encoded.\nSee the rbxattr format for a list of possible attribute value types.\nThe Attributes section provides a more general description of attributes.\nSetAttributes # Instance:SetAttributes(attributes: Dictionary)\nThe SetAttributes method replaces all attributes with the content of attributes, which contains attribute names mapped to values.\nThis function uses the instance\u0026rsquo;s sym.AttrConfig to select the property to encode to. An error is thrown if the data could not be encoded.\nSee the rbxattr format for a list of possible attribute value types.\nThe Attributes section provides a more general description of attributes.\nOperators # __index # Instance[property: string]: any?\nThe index operator gets the value of a property of the instance. If the instance has a descriptor, then the the properties are enforced by the descriptor. Otherwise, any property can be any type of value.\n__newindex # Instance[property: string] -\u0026gt; (value: any?)\nThe newindex operator sets the value of a property of the instance. If the instance has a descriptor, then the the properties are enforced by the descriptor. Otherwise, any property can be set to any value.\n"},{"id":"55","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/int/","permalinkTitle":"Homepage / API reference / Types / int","title":"int","content":"The int type is a signed 32-bit integer.\n"},{"id":"56","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/int64/","permalinkTitle":"Homepage / API reference / Types / int64","title":"int64","content":"The int64 type is a signed 64-bit integer.\n"},{"id":"57","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/interactive/","permalinkTitle":"Homepage / Command reference / interactive","title":"interactive","content":"rbxmk interactive\nAliases: i\nThe interactive command enters interactive mode. Each prompt executes a chunk of Lua code.\nIf a prompt begins with =, then the comma-separated list of expressions that follow are evaluated and printed to standard output.\nThe environment contains the os.exit function. When called, interactive mode is terminated, and the program exits.\nWithin supported terminals, the following shortcuts are available:\nShortcut Description Ctrl+A, Home Move cursor to beginning of line. Ctrl+E, End Move cursor to end of line Ctrl+B, Left Move cursor one character left. Ctrl+F, Right Move cursor one character right. Ctrl+Left, Alt+B Move cursor to previous word. Ctrl+Right, Alt+F Move cursor to next word Ctrl+D, Del If line is not empty, delete character under cursor. Ctrl+D If line is empty, end of file. Ctrl+C Reset input (create new empty prompt). Ctrl+L Clear screen (line is unmodified). Ctrl+T Transpose previous character with current character. Ctrl+H, BackSpace Delete character before cursor. Ctrl+W, Alt+BackSpace Delete word leading up to cursor. Alt+D Delete word following cursor. Ctrl+K Delete from cursor to end of line. Ctrl+U Delete from start of line to cursor. Ctrl+P, Up Previous match from history. Ctrl+N, Down Next match from history. Ctrl+R Reverse Search history ( Ctrl+S forward, Ctrl+G cancel). Ctrl+Y Paste from Yank buffer ( Alt+Y to paste next yank instead). Tab Next completion. Shift+Tab (after Tab) Previous completion. The --desc-* flags set the rbxmk.globalDesc field. They also set the Enum global variable to the enums generated from the descriptor.\nFlags # allow-insecure-paths # --allow-insecure-paths\nDefault: false\nDisable path restrictions, allowing scripts to access any path in the file system.\ndebug # --debug\nDefault: false\nDisplay stack traces when an error occurs.\ndesc-file # --desc-file path\nInclude the file located at `path` as a global descriptor. May be specified any number of times. Multiple descriptors are merged in the order specified.\ndesc-latest # --desc-latest\nDefault: false\nDownload and start with the latest API dump as the global descriptor.\ndesc-patch # --desc-patch path\nInclude the file located at `path` as a patch to the global descriptor. May be specified any number of times. Multiple patches are applied in the order specified.\nhelp # -h, --help\nDefault: false\nDisplays help for the command.\ninclude-root # --include-root path\nDefault: []\nMark a `path` as an accessible root directory. May be specified any number of times.\nlibraries # --libraries list\nDefault: []\nA comma-separated `list` of libraries to include or exclude. A name prefixed with \u0026ldquo;+\u0026rdquo; or nothing is included, and a name prefixed with \u0026ldquo;-\u0026rdquo; is excluded. If the name is \u0026ldquo;*\u0026rdquo;, then the state is applied to all libraries. States are applied in order.\n"},{"id":"58","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/json/","permalinkTitle":"Homepage / API reference / Formats / json","title":"json","content":"The json format is defined for encoding general data in JSON format.\nDirection Type Description Decode nil A JSON null. Decode boolean A JSON boolean. Decode number The nearest representation of a JSON number. Decode string A JSON string. Decode Array An JSON array. Decode Dictionary A JSON object. Encode nil A Lua nil. Encode boolean A Lua boolean. Encode number A Lua number. Encode string A Lua string. Encode Array An array-like table, having a non-zero length. Encode Dictionary A dictionary-like table, having a length of zero. Other value types are encoded as null.\nOptions # Indent # Type: string\nDefault: \u0026quot;\\t\u0026quot;\nDetermines the indentation of encoded content. If an empty string, then the content is minified.\n"},{"id":"59","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/dump/json/","permalinkTitle":"Homepage / Command reference / dump / json","title":"json","content":"rbxmk dump json\nThe json dump format describes the API of the Lua environment in JSON format.\nThe top-level value is a JSON object. The Version field is a number that signals the structure of the JSON format, and will be present in all versions of the format.\nRun rbxmk doc \u0026quot;Commands/dump/json:Structure\u0026quot; for a detailed description of the structure.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\nindent # --indent string\nDefault: \u0026quot;\\t\u0026quot;\nSpecifies the spacing used to indent the JSON output. If empty, the output will be minified (use \u0026ndash;indent=\u0026quot;\u0026quot; to specify an empty string).\nStructure # The following top-level fields are specified:\nFields Type Description Version number Reserved for indicating different versions of the structure. Always 0. Libraries object? A collection of libraries available in the Lua environment. Maps a library name to a Library object. Types object? A collection of globally defined data types. Maps a type name to a TypeDef object. Enums object? A collection of globally defined enums. Maps an enum name to an Enum object. Formats object? A collection of globally defined formats. Maps a type name to a Format object. Program object A Command object describing the top-level program command. Command # A Command object describes a program command. It has the following fields:\nField Type Description Aliases array? An array of strings listing available aliases of the command. Hidden bool? Whether the command is hidden. Summary string? A fragment reference pointing to a short summary of the command. Description string? A fragment reference pointing to a detailed description of the command. Flags object? Describes the flags of the command. Maps a flag name to a Flag object. Commands object? Describes the sub-commands of the command. Maps a command name to a Command object. Flag # A Flag object describes a flag of a program command. It has the following fields:\nField Type Description Type string Indicates the value type of the flag. Default string? Indicates the default value for the flag. Shorthand string? Indicates a one-letter abbreviation for the flag. Hidden bool? Indicates whether the flag is hidden. Persistent bool? Indicates whether the flag is inherited by subcommands. Description string? A fragment reference pointing to a description of the flag. Deprecated string? Indicates whether the flag is deprecated, and if so, the new flag to use. ShorthandDeprecated string? Indicates whether the shorthand of the flag is deprecated, and if so, the new flag to use. Enum # An Enum object describes an enum. It has the following fields:\nField Type Description Summary string A fragment reference pointing to a short summary of the enum. Description string A fragment reference pointing to a detailed description of the enum. Items object Describes the items of the enum. Maps an item name to an EnumItem object. EnumItem # An EnumItem object describes an enum item. It has the following fields:\nField Type Description Value number The value of the item. Summary string? A fragment reference pointing to a short summary of the item. Description string? A fragment reference pointing to a detailed description of the item. Format # A Format is an object that describes a format. It has the following fields:\nField Type Description Summary string? A fragment reference to a short summary of the format. Description string? A fragment reference to a detailed description of the format. Options object? The options of the format. Maps an option name to a FormatOption object. FormatOption # A FormatOption is an object that describes an option of a format. It has the following fields:\nField Type Description Type object A Type object that describes the value type of the option. Default string A string describing the default value of the option. Description string? A fragment reference to a description of the option. Function # A Function is an object that describes a function. It has the following fields:\nField Type Description CanError bool? Whether the function may throw an error, excluding type errors from received arguments. Summary string? A fragment reference to a short summary of the function. Description string? A fragment reference to a detailed description of the function. Parameters array Describes the values received by the function. Each element is a Parameter object. Returns array Describes the values returned by the function. Each element is a Parameter object. Parameter # A Parameter object describes the parameter of a function.\nField Type Description Name string? The name of the parameter. Type object A Type object that describes the type of the parameter. Default string? The default value if the type is optional. Always omitted for return values. Enums array? Literal values that can be passed to the parameter. Each element is a string. Library # A Library is an object that describes a library. It has the following fields:\nField Type Description Priority int The priority that determines the order in which the library is loaded. Libraries are loaded by ascending priority. Import array A path indicating where the library is merged. Each element is a string representing an element of the path. If empty, the library is merged into the global environment. Types object? A collection of data types defined by the library. Maps a type name to a TypeDef object. Enums object? A collection of enums defined by the library. Maps an enum name to an Enum object. Struct object? A Struct object that describes the contents of the library. Operators # An Operators object describes the operators of a type. It has the following fields:\nField Type Description Add array An array of Binop objects that describes signatures for the __add operator. Sub array An array of Binop objects that describes signatures for the __sub operator. Mul array An array of Binop objects that describes signatures for the __mul operator. Div array An array of Binop objects that describes signatures for the __div operator. Mod array An array of Binop objects that describes signatures for the __mod operator. Pow array An array of Binop objects that describes signatures for the __pow operator. Concat array An array of Binop objects that describes signatures for the __concat operator. Eq object? A Cmpop object that describes the signature for the __eq operator, if defined. Le object? A Cmpop object that describes the signature for the __le operator, if defined. Lt object? A Cmpop object that describes the signature for the __lt operator, if defined. Len object? A Unop object that describes the signature for the __len operator, if defined. Unm object? A Unop object that describes the signature for the __unm operator, if defined. Call object? A Function object that describes the signature for the __call operator, if defined. Index object? A Function object that describes the signature for the __index operator, if defined. Newindex object? A Function object that describes the signature for the __newindex operator, if defined. Binop # A Binop object describes a binary operator. It has the following fields:\nField Type Description Operand object The Type of the right operand. Result object The Type of the result of the operation. Summary string? A fragment reference pointing to a short summary of the operator. Description string? A fragment reference pointing to a detailed description of the operator. Cmpop # A Cmpop object describes a comparison operator. It has the following fields:\nField Type Description Summary string? A fragment reference pointing to a short summary of the operator. Description string? A fragment reference pointing to a detailed description of the operator. Unop # A Unop object describes a unary operator.\nField Type Description Result object The Type of the result of the operation. Summary string? A fragment reference pointing to a short summary of the operator. Description string? A fragment reference pointing to a detailed description of the operator. Property # A Property describes a single value within a structure. It has the following fields.\nField Type Description ValueType object A Type object that describes the value type of the property. ReadOnly bool? Whether the property can be written. Summary string? A fragment reference to a short summary of the property. Description string? A fragment reference to a detailed description of the property. Struct # A Struct is an object that describes a table-like value that has a number of constant fields. It has the following fields.\nField Type Description Summary string? A fragment reference to a short summary of the structure. Description string? A fragment reference to a detailed description of the structure. Fields object The fields of the structure. Maps a field name to a Field object. Field # A Field is an object that describes the field of a Struct . A struct field may have one of a number of kinds of type, so the Field object has exactly one field, where the key indicates the kind, and the value describes type. The following kinds are possible:\nKind Value type Description Enum object Describes an enum. Value is an Enum object. Function object Describes a function. Value is a Function object. MultiFunction array Describes a function with multiple signatures. Each element is a Function object. Property object Describes a property. Value is a Property object. Struct object Describes a struct. Value is a Struct object. TypeDef # A TypeDef object describes the definition of a type. It has the following fields:\nField Type Description Category string? Describes the category of the type. Underlying object? A Type object that describes the underlying type, if any. Requires array? An array of strings, listing the names of types that the type depends on. Summary string A fragment reference pointing to a short summary of the type. Description string A fragment reference pointing to a detailed description of the type. Constructors object? Describes constructor functions that create the type. Maps a constructor name to an array of Function objects. Properties object? Describes the properties defined on the type. Maps a property name to a Property object. Symbols object? Describes the symbols defined on the type. Maps a symbol name to a Property object. Methods object? Describes the methods defined on the type. Maps a method name to a Function object. Operators object? An Operators object that describes the operators defined on the type. Enums object? Describes enums related to the type. Maps an enum name to an Enum object. Type # A Type object describes the type of a value. It has the Sig field, which is a string-representation of the type formatted as a Luau type definition.\nThe object has exactly one additional field, where the key indicates the kind of type, and the value describes the kind. The following fields are possible:\narray # Type: Type The array kind indicates an array of elements, each element having the inner type.\ndictionary # Type: Type The dictionary kind describes a table where each element maps a string to a value. The inner type object indicates the type of each value in the map.\nfunction # Type: object\nThe function kind describes the signature of a function. It has the following fields:\nField Type Description Parameters array? The values received by the function. Each element is a Parameter object. If unspecified, the function has no parameters. Returns array? The values returned by the function. Each element is a Parameter object. If unspecified, the function returns no values. functions # Type: object\nThe functions kind indicates a function with multiple signatures. It has no fields.\ngroup # Type: Type The group kind groups the inner type.\nmap # Type: object\nThe map kind describes a table where each element maps a key to a value. It has the following fields:\nField Type Description Key object A Type object indicating the type of each key. Value object A Type object indicating the type of each value. optional # Type: Type The optional kind describes a type that can also be nil.\nor # Type: array\nThe or kind describes a union of two or more types. Each element of the array is a Type object.\nprimitive # Type: string\nThe primitive kind indicates the type of a primitive value.\nstruct # Type: object\nThe struct kind describes a table with a number of named fields. Each field maps a name to a Type object.\ntable # Type: object\nThe table kind describes a table with both a map part and a struct part. It has the following additional fields:\nField Type Description Key object A Type object indicating the type of each key. Value object A Type object indicating the type of each value. Fields object The fields of the table. Maps a field name to a Type object. "},{"id":"60","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonoperation/","permalinkTitle":"Homepage / API reference / Types / JsonOperation","title":"JsonOperation","content":"type JsonOperation = {from: string?, op: string, path: string, value: JsonValue?}\nno content for topic \u0026ldquo;Types/JsonOperation:Description\u0026rdquo;\n"},{"id":"61","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonpatch/","permalinkTitle":"Homepage / API reference / Types / JsonPatch","title":"JsonPatch","content":"type JsonPatch = {JsonOperation}\nno content for topic \u0026ldquo;Types/JsonPatch:Description\u0026rdquo;\n"},{"id":"62","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/jsonvalue/","permalinkTitle":"Homepage / API reference / Types / JsonValue","title":"JsonValue","content":"type JsonValue = nil | bool | number | string | Array | Dictionary\nno content for topic \u0026ldquo;Types/JsonValue:Description\u0026rdquo;\n"},{"id":"63","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/l10n.csv/","permalinkTitle":"Homepage / API reference / Formats / l10n.csv","title":"l10n.csv","content":"The l10n.csv format decodes comma-separated localization data into a LocalizationTable instance, where the data is assigned to the Contents property.\nDirection Type Description Decode Instance A LocalizationTable with a Contents property. Encode Stringable Any string-like value. Decoded data is a string in JSON format with the following structure:\n[ { \u0026#34;key\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;context\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;examples\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;source\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;values\u0026#34;: { \u0026#34;locale\u0026#34;: \u0026#34;string\u0026#34;, ... }, }, ... ] Well-formed data has certain constraints, which are described in the LocalizationTable page of the DevHub. rbxmk applies these same constraints when encoding and decoding. To avoid data loss, they are applied more strictly. Rather than discarding data, any conflict that arises will throw an error that describes the conflict in detail.\n"},{"id":"64","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/localscript.lua/","permalinkTitle":"Homepage / API reference / Formats / localscript.lua","title":"localscript.lua","content":"The localscript.lua format is a shortcut for decoding Lua code into a LocalScript instance, where the content is assigned to the Source property.\nDirection Type Description Decode Instance A LocalScript with a Source property. Encode Stringable Any string-like value. "},{"id":"65","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/localscript.luau/","permalinkTitle":"Homepage / API reference / Formats / localscript.luau","title":"localscript.luau","content":"The localscript.luau format is a shortcut for decoding Luau code into a LocalScript instance, where the content is assigned to the Source property.\nDirection Type Description Decode Instance A LocalScript with a Source property. Encode Stringable Any string-like value. "},{"id":"66","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/lua/","permalinkTitle":"Homepage / API reference / Formats / lua","title":"lua","content":"The lua format is an alias for modulescript.lua .\nDirection Type Description Decode Instance A ModuleScript with a Source property. Encode Stringable Any string-like value. "},{"id":"67","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/luau/","permalinkTitle":"Homepage / API reference / Formats / luau","title":"luau","content":"The lua format is an alias for modulescript.lua .\nDirection Type Description Decode Instance A ModuleScript with a Source property. Encode Stringable Any string-like value. "},{"id":"68","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/memberdesc/","permalinkTitle":"Homepage / API reference / Types / MemberDesc","title":"MemberDesc","content":"type MemberDesc = PropertyDesc | FunctionDesc | EventDesc | CallbackDesc\nThe MemberDesc is one of any of the class member descriptor types.\n"},{"id":"69","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/modulescript.lua/","permalinkTitle":"Homepage / API reference / Formats / modulescript.lua","title":"modulescript.lua","content":"The modulescript.lua format is a shortcut for decoding Lua code into a ModuleScript instance, where the content is assigned to the Source property.\nDirection Type Description Decode Instance A ModuleScript with a Source property. Encode Stringable Any string-like value. "},{"id":"70","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/modulescript.luau/","permalinkTitle":"Homepage / API reference / Formats / modulescript.luau","title":"modulescript.luau","content":"The modulescript.luau format is a shortcut for decoding Luau code into a ModuleScript instance, where the content is assigned to the Source property.\nDirection Type Description Decode Instance A ModuleScript with a Source property. Encode Stringable Any string-like value. "},{"id":"71","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/nil/","permalinkTitle":"Homepage / API reference / Types / nil","title":"nil","content":"The nil type indicates the absence of a value. It corresponds directly to the nil Lua type.\n"},{"id":"72","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/number/","permalinkTitle":"Homepage / API reference / Types / number","title":"number","content":"The number type is a numeric value. It corresponds directly to the number Lua type.\n"},{"id":"73","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numberrange/","permalinkTitle":"Homepage / API reference / Types / NumberRange","title":"NumberRange","content":"The NumberRange type represents a range of numbers between a minimum and maximum.\nOverview # Item Kind Description new Constructor Returns a range with a single value. Returns a range with between two values. Max Property The maximum value. Min Property The minimum value. __eq Operator Returns whether two NumberRange values are equal. Constructors # new # NumberRange.new(value: float): NumberRange\nThe new constructor returns a NumberRange where value is both the minimum and maximum.\nNumberRange.new(minimum: float, maxmimum: float): NumberRange\nThe new constructor returns a NumberRange where minimum is the minimum value and maximum is the maximum value. Throws an error if minimum is greater than maximum.\nProperties # Max # NumberRange.Max: float [readonly]\nThe Max field returns the maximum possible value in the range.\nMin # NumberRange.Min: float [readonly]\nThe Min field returns the minimum possible value in the range.\nOperators # __eq # NumberRange == NumberRange\nThe equal operator returns true if both operands are NumberRange, and each corresponding component is equal.\n"},{"id":"74","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numbersequence/","permalinkTitle":"Homepage / API reference / Types / NumberSequence","title":"NumberSequence","content":"The NumberSequence type represents an interpolated sequence of numbers.\nOverview # Item Kind Description new Constructor The new constructor returns a NumberSequence with a single number. Returns a sequence with two numbers. Returns a sequence composed of the given keypoints. Keypoints Property The keypoints of the sequence. __eq Operator Returns whether two NumberSequence values are equal. Constructors # new # NumberSequence.new(value: float): NumberSequence\nno content for topic \u0026ldquo;Types/NumberSequence:Constructors/new/Single/Description\u0026rdquo; NumberSequence.new(value0: float, value1: float): NumberSequence\nThe new constructor returns a NumberSequence that interpolates between value0 and value1.\nNumberSequence.new(keypoints: {NumberSequenceKeypoint}): NumberSequence\nThe new constructor returns a NumberSequence composed from keypoints. Each keypoint must be ordered ascending by their Time field. The first keypoint must have a Time of 0, and the last keypoint must have a Time of 1.\nProperties # Keypoints # NumberSequence.Keypoints: {NumberSequenceKeypoint} [readonly]\nThe Keypoints field returns the NumberSequenceKeypoints of the sequence.\nOperators # __eq # NumberSequence == NumberSequence\nThe equal operator returns true if both operands are NumberSequence, and each corresponding keypoint is equivalent.\n"},{"id":"75","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/numbersequencekeypoint/","permalinkTitle":"Homepage / API reference / Types / NumberSequenceKeypoint","title":"NumberSequenceKeypoint","content":"The NumberSequenceKeypoint type represents a single keypoint of a NumberSequence.\nOverview # Item Kind Description new Constructor Creates a new keypoint. Creates a new keypoint with an envelope. Envelope Property The amount of variance allowed from the Value. Time Property The time location along the sequence. Value Property The base value. __eq Operator Returns whether two NumberSequenceKeypoint values are equal. Constructors # new # NumberSequenceKeypoint.new(time: float, value: float): NumberSequenceKeypoint\nThe new constructor returns a new NumberSequenceKeypoint, time sets the Time field, and value sets the Value field.\nNumberSequenceKeypoint.new(time: float, value: float, envelope: float): NumberSequenceKeypoint\nThe new constructor returns a new NumberSequenceKeypoint, time sets the Time field, value sets the Value field, and envelope sets the Envelope field.\nProperties # Envelope # NumberSequenceKeypoint.Envelope: float [readonly]\nThe Envelope field returns the amount of variance allowed from the value.\nTime # NumberSequenceKeypoint.Time: float [readonly]\nThe Time field returns the temporal location of the keypoint in the sequence. Has an interval of [0, 1].\nValue # NumberSequenceKeypoint.Value: float [readonly]\nThe Value field returns the base value of the keypoint.\nOperators # __eq # NumberSequenceKeypoint == NumberSequenceKeypoint\nThe equal operator returns true if both operands are NumberSequenceKeypoint, and each corresponding component is equal.\n"},{"id":"76","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/objects/","permalinkTitle":"Homepage / API reference / Types / Objects","title":"Objects","content":"type Objects = {Instance}\nThe Objects type is a list of Instance values.\n"},{"id":"77","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/optional/","permalinkTitle":"Homepage / API reference / Types / Optional","title":"Optional","content":"type Optional = Optional\nThe Optional type is an exprim that encapsulates another type, such that the value is either present or not present.\nOverview # Item Kind Description none Constructor An Optional with no value. some Constructor An Optional with some value. Constructors # none # Optional.none(type: string): Optional\nThe none constructor returns an empty Optional exprim of the given type.\nmodel.WorldPivotData = Optional.none(\u0026#34;CFrame\u0026#34;) -- type is Optional\u0026lt;cframe\u0026gt; print(typeof(model.WorldPivotData.Value)) --\u0026amp;gt; nil\u0026lt;/cframe\u0026gt; some # Optional.some(value: Variant): Optional\nThe some constructor returns an Optional exprim with the type of value, that encapsulates value.\nlocal value = CFrame.new(1,2,3) model.WorldPivotData = Optional.some(value) -- type is Optional\u0026lt;cframe\u0026gt; print(typeof(model.WorldPivotData.Value)) --\u0026amp;gt; CFrame\u0026lt;/cframe\u0026gt; "},{"id":"78","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/parameterdesc/","permalinkTitle":"Homepage / API reference / Types / ParameterDesc","title":"ParameterDesc","content":"type ParameterDesc = {Default: string?, Name: string, Type: TypeDesc}\nThe ParameterDesc type describes a parameter of a function, event, or callback member. It has the following members:\nField Type Description Type TypeDesc The type of the parameter. Name string The name of the parameter. Default string ? Describes the default value of the parameter. If nil, then the parameter has no default value. "},{"id":"79","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/patch.json/","permalinkTitle":"Homepage / API reference / Formats / patch.json","title":"patch.json","content":"The patch.json format is defined for encoding JSON patches as defined by RFC 6902 .\nDirection Type Description Decode JsonPatch List of JsonOperation values. Encode JsonPatch List of JsonOperation values. Options # Indent # Type: string\nDefault: \u0026quot;\\t\u0026quot;\nDetermines the indentation of encoded content. If an empty string, then the content is minified.\n"},{"id":"80","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/physicalproperties/","permalinkTitle":"Homepage / API reference / Types / PhysicalProperties","title":"PhysicalProperties","content":"The PhysicalProperties type represents the physical properties of an object.\nOverview # Item Kind Description new Constructor Returns properties with density, friction, and elasticity. no content for topic \u0026ldquo;Types/PhysicalProperties:Constructors/new/Weights/Summary\u0026rdquo; Density Property The mass per unit volume. Elasticity Property How much energy is retained after a collision. ElasticityWeight Property The ratio baised towards the object for elasticity calculations. Friction Property The force that opposes lateral motion. FrictionWeight Property The ratio baised towards the object for friction calculations. Constructors # new # PhysicalProperties.new(density: float, friction: float, elasticity: float): PhysicalProperties\nThe new constructor returns a new PhysicalProperties value. density sets the Density field, friction sets the Friction field, and elasticity sets the Elasticity field.\nPhysicalProperties.new(density: float, friction: float, elasticity: float, frictionWeight: float, elasticityWeight: float): PhysicalProperties\nThe new constructor returns a new PhysicalProperties value. density sets the Density field, friction sets the Friction field, elasticity sets the Elasticity field, frictionWeight sets the FrictionWeight field, and elasticityWeight sets the ElasticityWeight field.\nProperties # Density # PhysicalProperties.Density: float [readonly]\nThe Density field returns the mass for unit volume of the object.\nElasticity # PhysicalProperties.Elasticity: float [readonly]\nThe Elasticity field returns how much energy is retained after a collision. A value of 1 means the same energy is retained.\nElasticityWeight # PhysicalProperties.ElasticityWeight: float [readonly]\nThe ElasticityWeight field returns how much the ratio of an elasticity calculation is baised towards the object during a collision.\nFriction # PhysicalProperties.Friction: float [readonly]\nThe Friction field returns how much force is used to oppose lateral motion between two contacting surfaces.\nFrictionWeight # PhysicalProperties.FrictionWeight: float [readonly]\nThe FrictionWeight field returns how much the ratio of a friction calculation is baised towards the object during a collision.\n"},{"id":"81","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/dump/plugin/","permalinkTitle":"Homepage / Command reference / dump / plugin","title":"plugin","content":"rbxmk dump plugin FILE The plugin command enables the generation of a custom dump format. The command receives a file to be executed as a Lua script.\nrbxmk dump plugin script.lua If - is given as the file, then the script will be read from standard input instead.\necho \u0026#39;print(\u0026#34;hello world!\u0026#34;)\u0026#39; | rbxmk dump plugin - The script receives as arguments a table and a function.\nlocal dump, write = ... The table contains a complete description of the rbxmk Lua environment. The structure of the table matches the structure of the json dump format.\nThe function is used to build the output. It receives any number of values, converts them to strings, and concatenates them directly to the result.\n-- List all libraries. local dump, write = ... for _, library in ipairs(dump.Libraries) do write(library.Name, \u0026#34;\\n\u0026#34;) end After the script finishes, the result is written to standard output.\nUnlike the run command, the script runs in a limited environment that includes only the following libraries:\nbase program math string table Flags # help # -h, --help\nDefault: false\nDisplays help for the command.\n"},{"id":"82","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/completion/powershell/","permalinkTitle":"Homepage / Command reference / completion / powershell","title":"powershell","content":"rbxmk completion powershell\nGenerate the autocompletion script for powershell.\nTo load completions in your current shell session:\nrbxmk completion powershell | Out-String | Invoke-Expression To load completions for every new session, add the output of the above command to your powershell profile.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\nno-descriptions # --no-descriptions\nDefault: false\nDisables completion descriptions.\n"},{"id":"83","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/propertydesc/","permalinkTitle":"Homepage / API reference / Types / PropertyDesc","title":"PropertyDesc","content":"type PropertyDesc = {CanLoad: bool, CanSave: bool, Category: string, MemberType: string, Name: string, ReadSecurity: string, Tags: {string}, ValueType: TypeDesc, WriteSecurity: string}\nThe PropertyDesc type is a table that describes a property member of a class. It has the following fields:\nField Type Description CanLoad string Whether the property is deserialized. CanSave string Whether the property is serialized. MemberType string Indicates the type of member. Always \u0026ldquo;Property\u0026rdquo;. Name string The name of the member. ReadSecurity string The security context required to get the member. Tags { string } The tags set for the member. ValueType TypeDesc The type of the value of the property. WriteSecurity string The security context required to set the member. "},{"id":"84","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/protectedstring/","permalinkTitle":"Homepage / API reference / Types / ProtectedString","title":"ProtectedString","content":"The ProtectedString type is a string that correctly handles protected data when encoded.\n"},{"id":"85","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/ray/","permalinkTitle":"Homepage / API reference / Types / Ray","title":"Ray","content":"The Ray type represents a line that extends infinitely in one direction.\nOverview # Item Kind Description new Constructor Creates a new Ray. Direction Property The direction of the ray. Origin Property The position of the ray. ClosestPoint Method Returns the nearest point on the ray. Distance Method Returns distance to the nearest point on the ray. __eq Operator Returns whether two Ray values are equal. Constructors # new # Ray.new(origin: Vector3, direction: Vector3): Ray\nThe new constructor returns a Ray, where origin sets the Origin, and direction sets the Direction.\nProperties # Direction # Ray.Direction: Vector3 [readonly]\nThe Direction field returns the direction of the ray.\nOrigin # Ray.Origin: Vector3 [readonly]\nThe Origin field returns the position of the ray.\nMethods # ClosestPoint # Ray:ClosestPoint(point: Vector3): Vector3\nThe ClosestPoint method returns the position on the ray that is nearest to point.\nDistance # Ray:Distance(point: Vector3): float\nThe Distance method returns the distance between point and the point on the ray nearest to point.\nOperators # __eq # Ray == Ray\nThe equal operator returns true if both operands are Ray, and each corresponding component is equal.\n"},{"id":"86","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/rbxassetoptions/","permalinkTitle":"Homepage / API reference / Types / RbxAssetOptions","title":"RbxAssetOptions","content":"type RbxAssetOptions = {AssetId: int64, Body: any?, Cookies: Cookies?, Format: FormatSelector}\nThe RbxAssetOptions type is a table that specifies the options of a request to an asset on the Roblox website. It has the following fields:\nField Type Description AssetId int64 The ID of the asset to request. Cookies Cookies ? Optional cookies to send with requests, usually used for authentication. Format FormatSelector The format used to encode or decode an asset. Body any? The body of an asset, to be encoded by the specified format. "},{"id":"87","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/rbxattr/","permalinkTitle":"Homepage / API reference / Formats / rbxattr","title":"rbxattr","content":"The rbxattr format is defined for serializing instance attributes, encoding a Dictionary of attribute values.\nDirection Type Description Decode Dictionary A dictionary of attribute names mapped to values. Encode Dictionary A dictionary of attribute names mapped to values. The following value types are encoded and decoded:\nstring bool float double UDim UDim2 BrickColor Color3 Vector2 Vector3 CFrame NumberSequence ColorSequence NumberRange Rect Additionally, any Stringable value is encoded as a string, and any Numberable value is encoded as a double.\n"},{"id":"88","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/rbxl/","permalinkTitle":"Homepage / API reference / Formats / rbxl","title":"rbxl","content":"The rbxl format encodes Instances in the Roblox binary place format.\nDirection Type Description Decode Instance A DataModel instance. Encode Instance A single instance. If not a DataModel, it is interpreted as a child to a DataModel. Encode Objects A list of Instances, interpreted as children to a DataModel. Options # Desc # Type: Desc | bool | nil\nDefault: nil\nSets the descriptor to be used when encoding or decoding. If false, then no descriptor is used. Otherwise, the descriptor of the root instance is used with all descendants, falling back to globalDesc .\nDescMode # Type: string\nDefault: \u0026quot;NonStrict\u0026quot;\nDetermines how deviations from the descriptor are handled. \u0026quot;NonStrict\u0026quot; causes deviations to be ignored. \u0026quot;Strict\u0026quot; causes an error to be thrown for the first deviation. \u0026quot;Preserve\u0026quot; tries to retain as much information as possible, usually by behaving as if no descriptor is set.\n"},{"id":"89","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/rbxlx/","permalinkTitle":"Homepage / API reference / Formats / rbxlx","title":"rbxlx","content":"The rbxlx format encodes Instances in the Roblox XML place format.\nDirection Type Description Decode Instance A DataModel instance. Encode Instance A single instance. If not a DataModel, it is interpreted as a child to a DataModel. Encode Objects A list of Instances, interpreted as children to a DataModel. Options # Desc # Type: Desc | bool | nil\nDefault: nil\nSets the descriptor to be used when encoding or decoding. If false, then no descriptor is used. Otherwise, the descriptor of the root instance is used with all descendants, falling back to globalDesc .\nDescMode # Type: string\nDefault: \u0026quot;NonStrict\u0026quot;\nDetermines how deviations from the descriptor are handled. \u0026quot;NonStrict\u0026quot; causes deviations to be ignored. \u0026quot;Strict\u0026quot; causes an error to be thrown for the first deviation. \u0026quot;Preserve\u0026quot; tries to retain as much information as possible, usually by behaving as if no descriptor is set.\n"},{"id":"90","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/rbxm/","permalinkTitle":"Homepage / API reference / Formats / rbxm","title":"rbxm","content":"The rbxm format encodes Instances in the Roblox binary model format.\nDirection Type Description Decode Instance A DataModel instance. Encode Instance A single instance. If not a DataModel, it is interpreted as a child to a DataModel. Encode Objects A list of Instances, interpreted as children to a DataModel. Options # Desc # Type: Desc | bool | nil\nDefault: nil\nSets the descriptor to be used when encoding or decoding. If false, then no descriptor is used. Otherwise, the descriptor of the root instance is used with all descendants, falling back to globalDesc .\nDescMode # Type: string\nDefault: \u0026quot;NonStrict\u0026quot;\nDetermines how deviations from the descriptor are handled. \u0026quot;NonStrict\u0026quot; causes deviations to be ignored. \u0026quot;Strict\u0026quot; causes an error to be thrown for the first deviation. \u0026quot;Preserve\u0026quot; tries to retain as much information as possible, usually by behaving as if no descriptor is set.\n"},{"id":"91","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/rbxmx/","permalinkTitle":"Homepage / API reference / Formats / rbxmx","title":"rbxmx","content":"The rbxmx format encodes Instances in the Roblox XML model format.\nDirection Type Description Decode Instance A DataModel instance. Encode Instance A single instance. If not a DataModel, it is interpreted as a child to a DataModel. Encode Objects A list of Instances, interpreted as children to a DataModel. Options # Desc # Type: Desc | bool | nil\nDefault: nil\nSets the descriptor to be used when encoding or decoding. If false, then no descriptor is used. Otherwise, the descriptor of the root instance is used with all descendants, falling back to globalDesc .\nDescMode # Type: string\nDefault: \u0026quot;NonStrict\u0026quot;\nDetermines how deviations from the descriptor are handled. \u0026quot;NonStrict\u0026quot; causes deviations to be ignored. \u0026quot;Strict\u0026quot; causes an error to be thrown for the first deviation. \u0026quot;Preserve\u0026quot; tries to retain as much information as possible, usually by behaving as if no descriptor is set.\n"},{"id":"92","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/rect/","permalinkTitle":"Homepage / API reference / Types / Rect","title":"Rect","content":"The Rect type represents an axis-aligned two-dimensional rectangle with a lower and upper boundary.\nOverview # Item Kind Description new Constructor Returns a Rect composed by two Vector2s. Returns a Rect composed by boundary components. minX and minY compose the lower bounds, and maxX and maxY compose the upper bounds. Height Property The height of the rectangle. Max Property The upper bounds of the rectangle. Min Property The lower bounds of the rectangle. Width Property The width of the rectangle. __eq Operator Returns whether two Rect values are equal. Constructors # new # Rect.new(min: Vector2, max: Vector2): Rect\nThe new constructor returns a Rect composed by two Vector2s. min is the lower bounds, and max is the upper bounds.\nRect.new(minX: float, minY: float, maxX: float, maxY: float): Rect\nThe new constructor returns a Rect composed by boundary components.\nProperties # Height # Rect.Height: float [readonly]\nThe Height field returns the height of the rectangle, or the difference between the upper and lower bounds on the Y axis.\nMax # Rect.Max: Vector2 [readonly]\nThe Max field returns the upper bounds of the rectangle.\nMin # Rect.Min: Vector2 [readonly]\nThe Min field returns the lower bounds of the rectangle.\nWidth # Rect.Width: float [readonly]\nThe Width field returns the width of the rectangle, or the difference between the upper and lower bounds on the X axis.\nOperators # __eq # Rect == Rect\nThe equal operator returns true if both operands are Rect, and each corresponding component is equal.\n"},{"id":"93","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/region3/","permalinkTitle":"Homepage / API reference / Types / Region3","title":"Region3","content":"The Region3 type represents an axis-aligned three-dimensional rectangular cuboid with a lower and upper boundary.\nOverview # Item Kind Description new Constructor Returns Region3 composed by two Vector3s. CFrame Property The center of the region. Size Property The size of the region. ExpandToGrid Method Expands the region to align to a grid. __eq Operator Returns whether two Region3 values are equal. Constructors # new # Region3.new(min: Vector3, max: Vector3): Region3\nThe new constructor returns a Region3 composed by two Vector3 values, where min is the lower bound of the region, and max is the upper bound.\nProperties # CFrame # Region3.CFrame: CFrame [readonly]\nThe CFrame field returns a CFrame with its Position located at the center of the region.\nSize # Region3.Size: Vector3 [readonly]\nThe Size returns the size of the region.\nMethods # ExpandToGrid # Region3:ExpandToGrid(resolution: float): Region3\nThe ExpandToGrid method returns the region expanded so that is lower and upper bounds align to resolution. If resolution is 0, the region is returned unchanged.\nOperators # __eq # Region3 == Region3\nThe equal operator returns true if both operands are Region3, and each corresponding component is equal.\n"},{"id":"94","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/region3int16/","permalinkTitle":"Homepage / API reference / Types / Region3int16","title":"Region3int16","content":"The Region3 type represents an axis-aligned three-dimensional rectangular cuboid with a lower and upper boundary, with each component having 16-bit integer precision.\nOverview # Item Kind Description new Constructor Returns Region3 composed by two Vector3s. Max Property The upper bounds of the region. Min Property The lower bounds of the region. __eq Operator Returns whether two Region3int16 values are equal. Constructors # new # Region3int16.new(min: Vector3int16, max: Vector3int16): Region3int16\nThe new constructor returns a Region3 composed by two Vector3int16 values, where min is the lower bound of the region, and max is the upper bound.\nProperties # Max # Region3int16.Max: Vector3int16 [readonly]\nThe Max field returns the upper bounds of the region.\nMin # Region3int16.Min: Vector3int16 [readonly]\nThe Min field returns the lower bounds of the region.\nOperators # __eq # Region3int16 == Region3int16\nThe equal operator returns true if both operands are Region3int16, and each corresponding component is equal.\n"},{"id":"95","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/run/","permalinkTitle":"Homepage / Command reference / run","title":"run","content":"rbxmk run [ FLAGS ] FILE [ VALUE... ] The run command receives a file to be executed as a Lua script.\nrbxmk run script.lua If - is given as the file, then the script will be read from standard input instead.\necho \u0026#39;print(\u0026#34;hello world!\u0026#34;)\u0026#39; | rbxmk run - The remaining arguments are Lua values to be passed to the file. Numbers, bools, and nil are parsed into their respective types in Lua, and any other value is interpreted as a string.\nrbxmk run script.lua true 3.14159 hello! Including a bare `\u0026ndash;` will cause the run command to stop interpreting flags, enabling them to be passed to the script. Note that such flags will be passed as regular strings.\nrbxmk run script.lua -- --help # Passes \u0026#34;--help\u0026#34; string. Within the script, these arguments can be received from the ... operator.\nlocal arg1, arg2, arg3 = ... The --desc-* flags set the rbxmk.globalDesc field. They also set the Enum global variable to the enums generated from the descriptor.\nFlags # allow-insecure-paths # --allow-insecure-paths\nDefault: false\nDisable path restrictions, allowing scripts to access any path in the file system.\ndebug # --debug\nDefault: false\nDisplay stack traces when an error occurs.\ndesc-file # --desc-file path\nInclude the file located at `path` as a global descriptor. May be specified any number of times. Multiple descriptors are merged in the order specified.\ndesc-latest # --desc-latest\nDefault: false\nDownload and start with the latest API dump as the global descriptor.\ndesc-patch # --desc-patch path\nInclude the file located at `path` as a patch to the global descriptor. May be specified any number of times. Multiple patches are applied in the order specified.\nhelp # -h, --help\nDefault: false\nDisplays help for the command.\ninclude-root # --include-root path\nDefault: []\nMark a `path` as an accessible root directory. May be specified any number of times.\nlibraries # --libraries list\nDefault: []\nA comma-separated `list` of libraries to include or exclude. A name prefixed with \u0026ldquo;+\u0026rdquo; or nothing is included, and a name prefixed with \u0026ldquo;-\u0026rdquo; is excluded. If the name is \u0026ldquo;*\u0026rdquo;, then the state is applied to all libraries. States are applied in order.\n"},{"id":"96","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/script.lua/","permalinkTitle":"Homepage / API reference / Formats / script.lua","title":"script.lua","content":"The script.lua format is a shortcut for decoding Lua code into a Script instance, where the content is assigned to the Source property.\nDirection Type Description Decode Instance A Script with a Source property. Encode Stringable Any string-like value. "},{"id":"97","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/script.luau/","permalinkTitle":"Homepage / API reference / Formats / script.luau","title":"script.luau","content":"The script.luau format is a shortcut for decoding Luau code into a Script instance, where the content is assigned to the Source property.\nDirection Type Description Decode Instance A Script with a Source property. Encode Stringable Any string-like value. "},{"id":"98","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/dump/selene/","permalinkTitle":"Homepage / Command reference / dump / selene","title":"selene","content":"rbxmk dump selene\nThe selene dump format produces a TOML-formatted configuration file for the selene linter that lints the rbxmk Lua environment.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\n"},{"id":"99","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/server.lua/","permalinkTitle":"Homepage / API reference / Formats / server.lua","title":"server.lua","content":"The server.lua format is an alias for script.lua .\nDirection Type Description Decode Instance A Script with a Source property. Encode Stringable Any string-like value. "},{"id":"100","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/server.luau/","permalinkTitle":"Homepage / API reference / Formats / server.luau","title":"server.luau","content":"The server.luau format is an alias for script.luau .\nDirection Type Description Decode Instance A Script with a Source property. Encode Stringable Any string-like value. "},{"id":"101","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/sharedstring/","permalinkTitle":"Homepage / API reference / Types / SharedString","title":"SharedString","content":"The SharedString type is a string that correctly handles shared data when encoded.\n"},{"id":"102","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/string/","permalinkTitle":"Homepage / API reference / Types / string","title":"string","content":"The string type is a sequence of bytes. It corresponds directly to the string Lua type.\n"},{"id":"103","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/symbol/","permalinkTitle":"Homepage / API reference / Types / Symbol","title":"Symbol","content":"The Symbol type is a value that is always unique. Symbol values are generally used as an index to fields of particular types.\nSymbol values defined by rbxmk are available through the sym library.\n"},{"id":"104","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/table/","permalinkTitle":"Homepage / API reference / Types / table","title":"table","content":"The table type is an associative array. It corresponds directly to the table Lua type.\n"},{"id":"105","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/token/","permalinkTitle":"Homepage / API reference / Types / token","title":"token","content":"The token type is a 32-bit integer representing the value of some known enum item.\n"},{"id":"106","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/tuple/","permalinkTitle":"Homepage / API reference / Types / Tuple","title":"Tuple","content":"The Tuple type represents multiple values, each of any type. A function that receives a Tuple recieves a variable number of arguments. A function that returns a Tuple returns multiple values.\n"},{"id":"107","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/txt/","permalinkTitle":"Homepage / API reference / Formats / txt","title":"txt","content":"The txt format encodes UTF-8 text.\nDirection Type Description Decode string UTF-8 text. Encode Stringable Any string-like value. This format has no options.\n"},{"id":"108","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/typedesc/","permalinkTitle":"Homepage / API reference / Types / TypeDesc","title":"TypeDesc","content":"type TypeDesc = {Category: string, Name: string}\nThe TypeDesc type is a table that describes a value type. It has the following fields:\nField Type Description Category string The category of the type. Name string The name of the type. Certain categories are treated specially:\nClass: Name is the name of a class. A value of the type is expected to be an Instance of the class. Enum: Name is the name of an enum. A value of the type is expected to be an enum item of the enum. "},{"id":"109","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/udim/","permalinkTitle":"Homepage / API reference / Types / UDim","title":"UDim","content":"The UDim type represents one dimension with a dynamic and constant component.\nOverview # Item Kind Description new Constructor Returns a new UDim. Offset Property The constant component. Scale Property The dynamic component. __add Operator The sum of two UDim values. __eq Operator Returns whether two UDim values are equal. __sub Operator The difference between two UDim values. __unm Operator The negation of the UDim. Constructors # new # UDim.new(scale: float, offset: int): UDim\nThe new constructor returns a new UDim. scale sets the Scale component, and offset sets the Offset component.\nProperties # Offset # UDim.Offset: int [readonly]\nThe Offset field returns the constant component of the UDim.\nScale # UDim.Scale: float [readonly]\nThe Scale field returns the dynamic component of the UDim.\nOperators # __add # UDim + UDim -\u0026gt; UDim\nThe add operator returns a UDim where each corresponding component of the two operands are summed.\n__eq # UDim == UDim\nThe equal operator returns true if both operands are UDim, and each corresponding component is equal.\n__sub # UDim - UDim -\u0026gt; UDim\nThe sub operator returns a UDim where each corresponding component of the two operands are subtracted.\n__unm # -UDim -\u0026gt; UDim\nThe unm operator returns a UDim where each component is negated.\n"},{"id":"110","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/udim2/","permalinkTitle":"Homepage / API reference / Types / UDim2","title":"UDim2","content":"The UDim2 type represents a UDim on two dimensions.\nOverview # Item Kind Description fromOffset Constructor Returns a UDim2 from offset components. fromScale Constructor Returns a UDim2 from scale components. new Constructor Returns a UDim2 from components. Returns a UDim2 from UDims. Height Property The height of the UDim2. Width Property The width of the UDim2. X Property The X dimension. Y Property The Y dimension. Lerp Method Lineearly interpolates between two UDim2 values. __add Operator The sum of two UDim2 values. __eq Operator Returns whether two UDim2 values are equal. __sub Operator The difference between two UDim values. __unm Operator The negation of the UDim2. Constructors # fromOffset # UDim2.fromOffset(x: int, y: int): UDim2\nThe fromOffset constructor returns a UDim2 that sets the offset components of each dimension.\nfromScale # UDim2.fromScale(x: float, y: float): UDim2\nThe fromScale constructor returns a UDim2 that sets the scale components of each dimension.\nnew # UDim2.new(xScale: float, xOffset: int, yScale: float, yOffset: int): UDim2\nThe new constructor returns a UDim2 composed from the components of each UDim.\nUDim2.new(x: UDim, y: UDim): UDim2\nThe new constructor returns a UDim2 composed from two UDim values.\nProperties # Height # UDim2.Height: UDim [readonly]\nThe Height field returns the Y dimension of the UDim2.\nWidth # UDim2.Width: UDim [readonly]\nThe Width field returns the X dimension of the UDim2.\nX # UDim2.X: UDim [readonly]\nThe X field returns the X dimension of the UDim2.\nY # UDim2.Y: UDim [readonly]\nThe Y field returns the Y dimension of the UDim2.\nMethods # Lerp # UDim2:Lerp(goal: UDim2, alpha: float): UDim2\nThe Lerp method returns a UDim2 linearly interpolated from the UDim2 to goal according to alpha, which has an interval of [0, 1].\nOperators # __add # UDim2 + UDim2 -\u0026gt; UDim2\nThe add operator returns a UDim2 where each corresponding component of the two operands are summed.\n__eq # UDim2 == UDim2\nThe equal operator returns true if both operands are UDim2, and each corresponding component is equal.\n__sub # UDim2 - UDim2 -\u0026gt; UDim2\nThe sub operator returns a UDim2 where each corresponding component of the two operands are subtracted.\n__unm # -UDim2 -\u0026gt; UDim2\nThe unm operator returns a UDim2 where each component is negated.\n"},{"id":"111","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/uniqueid/","permalinkTitle":"Homepage / API reference / Types / UniqueId","title":"UniqueId","content":"The UniqueId type represents the value of a unique identifier.\nOverview # Item Kind Description new Constructor Generates a new UniqueId. Returns a UniqueId from components. Index Property A sequential value. Random Property A random value. Time Property A time-based value. __eq Operator Returns whether two UniqueId values are equal. Constructors # new # UniqueId.new(): UniqueId\nThe new constructor returns a new UniqueId generated from an internal source. The method to generate the value is similar to Roblox\u0026rsquo;s implementation.\nUniqueId.new(random: int64, time: int64, index: int64): UniqueId\nThe new constructor returns a UniqueId composed of the components from each argument.\nProperties # Index # UniqueId.Index: int64 [readonly]\nThe Index property represents the sequential portion of the unique identifier. This value is generated such that it is almost certain to be unique, but is also predictable.\nRandom # UniqueId.Random: int64 [readonly]\nThe Random property represents the random portion of the unique identifier. This value is generated from a pseudo-random source.\nTime # UniqueId.Time: int64 [readonly]\nThe Time property represents the time portion of the unique identifier. This value generated based on the time.\nOperators # __eq # UniqueId == UniqueId\nThe equal operator returns true if both operands are UniqueId, and each corresponding component is equal.\n"},{"id":"112","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/upload-asset/","permalinkTitle":"Homepage / Command reference / upload-asset","title":"upload-asset","content":"rbxmk upload-asset [ FLAGS ] [ --id INT ] PATH The upload-asset command uploads an asset to the roblox website.\nThe --id flag specifies the ID of the asset to upload. If not specified, then a new asset will be created, and the ID of the asset will be returned.\nThe first non-flag argument is the path to a file to read from, which is required. If the path is \u0026ldquo;-\u0026rdquo;, then the file will be read from standard input.\nEach cookie flag appends to the list of cookies that will be sent with the request. Such flags can be specified any number of times.\nFlags # cookie-var # --cookie-var var\nAppend a cookie from environment variable `var`. The content is formatted as a number of Set-Cookie headers. Can be given any number of times.\ncookies-file # --cookies-file path\nAppend cookies from the file located at `path`. The file is formatted as a number of Set-Cookie headers. Can be given any number of times.\ncookies-from # --cookies-from location\nAppend cookies from a known `location`. See the documentation of Cookie.from for a list of locations. Can be given any number of times.\nfile-format # --file-format string\nThe format to decode the file as. Defaults to \u0026ndash;format.\nformat # --format string\nDefault: \u0026quot;bin\u0026quot;\nThe format to encode the asset as.\nhelp # -h, --help\nDefault: false\nDisplays help for the command.\nid # --id int64\nDefault: 0\nThe ID of the asset to download (required).\n"},{"id":"113","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/variant/","permalinkTitle":"Homepage / API reference / Types / Variant","title":"Variant","content":"The Variant type represents a single value of any type.\n"},{"id":"114","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector2/","permalinkTitle":"Homepage / API reference / Types / Vector2","title":"Vector2","content":"The Vector2 type represents a two-dimensional Euclidean vector.\nOverview # Item Kind Description new Constructor Returns the zero vector. Returns a vector composed by each given coordinate. Magnitude Property The length of the vector. Unit Property The direction of the vector. X Property The X coordinate. Y Property The Y coordinate. Cross Method Returns the cross product of two vectors. Dot Method Returns the dot product of two vectors. Lerp Method Linearly interpolates between two vectors. __add Operator The sum of two vectors. __div Operator Divides each corresponding component. Divides each component. __eq Operator Returns whether two Vector2 values are equal. __mul Operator Multiplies each corresponding component. Multiplies each component. __sub Operator The difference between two vectors. __unm Operator The negation of the vector. Constructors # new # Vector2.new(): Vector2\nThe new constructor returns the origin vector, where each coordinate is 0.\nVector2.new(x: float, y: float): Vector2\nThe new constructor returns a vector composed by each given component.\nProperties # Magnitude # Vector2.Magnitude: float [readonly]\nThe Magnitude field returns the length of the vector.\nUnit # Vector2.Unit: Vector2 [readonly]\nThe Unit field returns a vector with the same direction, but a length of 1.\nX # Vector2.X: float [readonly]\nThe X field returns the X coordinate of the vector.\nY # Vector2.Y: float [readonly]\nThe Y field returns the Y coordinate of the vector.\nMethods # Cross # Vector2:Cross(op: Vector2): float\nThe Cross method returns the cross product of the vector and op extended into three dimensions with Z coordinates of 0.\nDot # Vector2:Dot(op: Vector2): float\nThe Dot method returns the dot product of the vector and op.\nLerp # Vector2:Lerp(goal: Vector2, alpha: float): Vector2\nThe Lerp method returns a vector linearly interpolated from the vector to goal according to alpha, which has an interval of [0, 1].\nOperators # __add # Vector2 + Vector2 -\u0026gt; Vector2\nThe add operator returns a vector where each corresponding component of the two operands are summed.\n__div # Vector2 / Vector2 -\u0026gt; Vector2\nThe div operator returns a vector where each corresponding component of the two operands are divided.\nVector2 / number -\u0026gt; Vector2\nThe div operator returns a vector where each component of the first operand is divided by the second operand.\n__eq # Vector2 == Vector2\nThe equal operator returns true if both operands are Vector2, and each corresponding component is equal.\n__mul # Vector2 * Vector2 -\u0026gt; Vector2\nThe mul operator returns a vector where each corresponding component of the two operands are multiplied.\nVector2 * number -\u0026gt; Vector2\nThe mul operator returns a vector where each component of the first operand is multiplied by the second operand.\n__sub # Vector2 - Vector2 -\u0026gt; Vector2\nThe sub operator returns a vector where each corresponding component of the two operands are subtracted.\n__unm # -Vector2 -\u0026gt; Vector2\nThe unm operator returns a vector where each component is negated.\n"},{"id":"115","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector2int16/","permalinkTitle":"Homepage / API reference / Types / Vector2int16","title":"Vector2int16","content":"The Vector2int16 type represents a two-dimensional Euclidean vector with 16-bit integer precision.\nOverview # Item Kind Description new Constructor Returns the zero vector. Returns a vector composed by each given coordinate. X Property The X coordinate. Y Property The Y coordinate. __add Operator The sum of two vectors. __div Operator Divides each corresponding component. Divides each component. __eq Operator Returns whether two Vector2int16 values are equal. __mul Operator Multiplies each corresponding component. Multiplies each component. __sub Operator The difference between two vectors. __unm Operator The negation of the vector. Constructors # new # Vector2int16.new(): Vector2int16\nThe new constructor returns the origin vector, where each coordinate is 0.\nVector2int16.new(x: int, y: int): Vector2int16\nThe new constructor returns a vector composed by each given component.\nProperties # X # Vector2int16.X: int [readonly]\nThe X field returns the X coordinate of the vector.\nY # Vector2int16.Y: int [readonly]\nThe Y field returns the Y coordinate of the vector.\nOperators # __add # Vector2int16 + Vector2int16 -\u0026gt; Vector2int16\nThe add operator returns a vector where each corresponding component of the two operands are summed.\n__div # Vector2int16 / Vector2int16 -\u0026gt; Vector2int16\nThe div operator returns a vector where each corresponding component of the two operands are divided.\nVector2int16 / number -\u0026gt; Vector2int16\nThe div operator returns a vector where each component of the first operand is divided by the second operand.\n__eq # Vector2int16 == Vector2int16\nThe equal operator returns true if both operands are Vector2int16, and each corresponding component is equal.\n__mul # Vector2int16 * Vector2int16 -\u0026gt; Vector2int16\nThe mul operator returns a vector where each corresponding component of the two operands are multiplied.\nVector2int16 * number -\u0026gt; Vector2int16\nThe mul operator returns a vector where each component of the first operand is multiplied by the second operand.\n__sub # Vector2int16 - Vector2int16 -\u0026gt; Vector2int16\nThe sub operator returns a vector where each corresponding component of the two operands are subtracted.\n__unm # -Vector2int16 -\u0026gt; Vector2int16\nThe unm operator returns a vector where each component is negated.\n"},{"id":"116","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector3/","permalinkTitle":"Homepage / API reference / Types / Vector3","title":"Vector3","content":"The Vector3 type represents a three-dimensional Euclidean vector.\nOverview # Item Kind Description new Constructor Returns the zero vector. Returns a vector composed by each given coordinate. Magnitude Property The length of the vector. Unit Property The direction of the vector. X Property The X coordinate. Y Property The Y coordinate. Z Property The Z coordinate. Cross Method Returns the cross product of two vectors. Dot Method Returns the dot product of two vectors. FuzzyEq Method Returns whether two vectors are approximately equal. Lerp Method Linearly interpolates between two vectors. __add Operator The sum of two vectors. __div Operator Divides each corresponding component. Divides each component. __eq Operator Returns whether two Vector3 values are equal. __mul Operator Multiplies each corresponding component. Multiplies each component. __sub Operator The difference between two vectors. __unm Operator The negation of the vector. Constructors # new # Vector3.new(): Vector3\nThe new constructor returns the origin vector, where each coordinate is 0.\nVector3.new(x: float, y: float, z: float): Vector3\nThe new constructor returns a vector composed by each given component.\nProperties # Magnitude # Vector3.Magnitude: float [readonly]\nThe Magnitude field returns the length of the vector.\nUnit # Vector3.Unit: Vector3 [readonly]\nThe Unit field returns a vector with the same direction, but a length of 1.\nX # Vector3.X: float [readonly]\nThe X field returns the X coordinate of the vector.\nY # Vector3.Y: float [readonly]\nThe Y field returns the Y coordinate of the vector.\nZ # Vector3.Z: float [readonly]\nThe Z field returns the Z coordinate of the vector.\nMethods # Cross # Vector3:Cross(op: Vector3): Vector3\nThe Cross method returns the cross product of the vector and op.\nDot # Vector3:Dot(op: Vector3): float\nThe Dot method returns the dot product of the vector and op.\nFuzzyEq # Vector3:FuzzyEq(op: Vector3, epsilon: float): bool\nThe FuzzyEq method returns whether the distance between the vector and op is less than or equal to epsilon.\nLerp # Vector3:Lerp(goal: Vector3, alpha: float): Vector3\nThe Lerp method returns a vector linearly interpolated from the vector to goal according to alpha, which has an interval of [0, 1].\nOperators # __add # Vector3 + Vector3 -\u0026gt; Vector3\nThe add operator returns a vector where each corresponding component of the two operands are summed.\n__div # Vector3 / Vector3 -\u0026gt; Vector3\nThe div operator returns a vector where each corresponding component of the two operands are divided.\nVector3 / number -\u0026gt; Vector3\nThe div operator returns a vector where each component of the first operand is divided by the second operand.\n__eq # Vector3 == Vector3\nThe equal operator returns true if both operands are Vector3, and each corresponding component is equal.\n__mul # Vector3 * Vector3 -\u0026gt; Vector3\nThe mul operator returns a vector where each corresponding component of the two operands are multiplied.\nVector3 * number -\u0026gt; Vector3\nThe mul operator returns a vector where each component of the first operand is multiplied by the second operand.\n__sub # Vector3 - Vector3 -\u0026gt; Vector3\nThe sub operator returns a vector where each corresponding component of the two operands are subtracted.\n__unm # -Vector3 -\u0026gt; Vector3\nThe unm operator returns a vector where each component is negated.\n"},{"id":"117","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/vector3int16/","permalinkTitle":"Homepage / API reference / Types / Vector3int16","title":"Vector3int16","content":"The Vector3int16 type represents a three-dimensional Euclidean vector with 16-bit integer precision.\nOverview # Item Kind Description new Constructor Returns the zero vector. Returns a vector composed by each given coordinate. X Property The X coordinate. Y Property The Y coordinate. Z Property The Z coordinate. __add Operator The sum of two vectors. __div Operator Divides each corresponding component. Divides each component. __eq Operator Returns whether two Vector3int16 values are equal. __mul Operator Multiplies each corresponding component. Multiplies each component. __sub Operator The difference between two vectors. __unm Operator The negation of the vector. Constructors # new # Vector3int16.new(): Vector3int16\nThe new constructor returns the origin vector, where each coordinate is 0.\nVector3int16.new(x: int, y: int, z: int): Vector3int16\nThe new constructor returns a vector composed by each given component.\nProperties # X # Vector3int16.X: int [readonly]\nThe X field returns the X coordinate of the vector.\nY # Vector3int16.Y: int [readonly]\nThe Y field returns the Y coordinate of the vector.\nZ # Vector3int16.Z: int [readonly]\nThe Z field returns the Z coordinate of the vector.\nOperators # __add # Vector3int16 + Vector3int16 -\u0026gt; Vector3int16\nThe add operator returns a vector where each corresponding component of the two operands are summed.\n__div # Vector3int16 / Vector3int16 -\u0026gt; Vector3int16\nThe div operator returns a vector where each corresponding component of the two operands are divided.\nVector3int16 / number -\u0026gt; Vector3int16\nThe div operator returns a vector where each component of the first operand is divided by the second operand.\n__eq # Vector3int16 == Vector3int16\nThe equal operator returns true if both operands are Vector3int16, and each corresponding component is equal.\n__mul # Vector3int16 * Vector3int16 -\u0026gt; Vector3int16\nThe mul operator returns a vector where each corresponding component of the two operands are multiplied.\nVector3int16 * number -\u0026gt; Vector3int16\nThe mul operator returns a vector where each component of the first operand is multiplied by the second operand.\n__sub # Vector3int16 - Vector3int16 -\u0026gt; Vector3int16\nThe sub operator returns a vector where each corresponding component of the two operands are subtracted.\n__unm # -Vector3int16 -\u0026gt; Vector3int16\nThe unm operator returns a vector where each component is negated.\n"},{"id":"118","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/version/","permalinkTitle":"Homepage / Command reference / version","title":"version","content":"rbxmk version\nThe version command displays the current version of rbxmk. The result is formatted according to semantic versioning .\nFlags # format # -f, --format string\nDefault: \u0026quot;text\u0026quot;\nFormat of the version output. Available formats are \u0026ldquo;text\u0026rdquo;, \u0026ldquo;json\u0026rdquo;.\nhelp # -h, --help\nDefault: false\nDisplays help for the command.\nverbose # -v, --verbose\nDefault: 0\nIncrease verbosity level by 1 for each time the flag is specified. Default is level 0. Each level appends the following information:\nLevel Description 0 Includes program version. 1 Includes basic build information. 2 Includes detailed build information. 3 Includes module information. "},{"id":"119","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/completion/zsh/","permalinkTitle":"Homepage / Command reference / completion / zsh","title":"zsh","content":"rbxmk completion zsh\nGenerate the autocompletion script for the zsh shell.\nIf shell completion is not already enabled in your environment you will need to enable it. You can execute the following once:\necho \u0026#34;autoload -U compinit; compinit\u0026#34; \u0026gt;\u0026gt; ~/.zshrc To load completions for every new session, execute once:\nLinux:\nrbxmk completion zsh \u0026gt; \u0026#34;${fpath[1]}/_rbxmk\u0026#34; macOS:\nrbxmk completion zsh \u0026gt; /usr/local/share/zsh/site-functions/_rbxmk You will need to start a new shell for this setup to take effect.\nFlags # help # -h, --help\nDefault: false\nDisplays help for the command.\nno-descriptions # --no-descriptions\nDefault: false\nDisables completion descriptions.\n"},{"id":"120","rootTitleIndex":"1","rootTitle":"Quick start","rootTitleIcon":"fas fa-power-off fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/quickstart/","rootTitleTitle":"Homepage / Quick start","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/quickstart/","permalinkTitle":"Homepage / Quick start","title":"Quick start","content":"This page provides steps for quickly getting started with rbxmk.\nSteps # Give a classic place a fresh look.\nThese steps use Windows for their examples. See the Installation page for instructions on how to install rbxmk for other operating systems.\n1) Install rbxmk # Not yet implemented. Download the latest Windows installer , then open it and follow the prompts. This will install rbxmk to your computer, and make it possible to run from a terminal.\n2) Get a terminal going # rbxmk is a command-line program, which requires to a terminal to run.\nClick the Start menu. In the menu\u0026rsquo;s search box, type cmd, then press the Enter key. A Command Prompt window will appear. This is a terminal that will let you run commands.\nIt is recommended that you are familar with the command-line interface (CLI). The following video provides an introduction:\nCommand Line Interface (CLI) For Beginners If desired, your preferred terminal can be used instead.\n3) Verify the installation # In the terminal, type the following command:\nrbxmk version If rbxmk was installed correctly, running this command will print the installed version of rbxmk. For example, the latest version is 0.9.1.\n4) Find a suitable place to work # Direct the terminal to work in a new folder created on the desktop with the terminal\u0026rsquo;s mkdir and cd commands:\nmkdir %USERPROFILE%\\Desktop\\ExampleProject cd %USERPROFILE%\\Desktop\\ExampleProject The mkdir command creates the \u0026ldquo;ExampleProject\u0026rdquo; folder on the desktop. The cd command changes the working directory of the terminal to the created folder.\n5) Create a new script # The terminal\u0026rsquo;s echo command will output its input. The \u0026gt; operator will write the output of a command to a file. Use these to create a new script file:\necho print(\u0026#34;Hello, world!\u0026#34;) \u0026gt; script.lua 6) Run the script # rbxmk\u0026rsquo;s run command is used to run scripts.\nrbxmk run script.lua The text Hello, world! will appear in the terminal.\n7) Download the latest descriptors # Not yet implemented. Using the latest Descriptors from Roblox will allow rbxmk to be used more easily.\nrbxmk update-descriptors 8) Download some assets to work on # Use the download-asset command to get some assets from the Roblox website.\nrbxmk download-asset --id 1818 Crossroads.rbxl rbxmk download-asset --id 185687363 Tower.rbxm This will download the Crossroads place, and the Observation Tower model.\n9) Edit the script # Not yet implemented: Pivot API. Use your preferred editor to edit script.lua. Write a script that adds the tower model to the place:\n-- Load the place. local game = fs.read(\u0026#34;Crossroads.rbxl\u0026#34;) -- Remove the old model. local Workspace = game:GetService(\u0026#34;Workspace\u0026#34;) local oldTower = Workspace:FindFirstChild(\u0026#34;Tower\u0026#34;) if oldTower then oldTower:Destroy() end -- Insert the new model. local tower = fs.read(\u0026#34;Tower.rbxm\u0026#34;) tower:PivotTo(CFrame.new(-80, 1.2, -80)) tower.Parent = Workspace -- Save the place. fs.write(\u0026#34;NewCrossroads.rbxl\u0026#34;, game) 10) Run the edited script # Back in the terminal, run the script again:\nrbxmk run script.lua This will create the NewCrossroads.rbxl file, which is the same as the downloaded place, but has the old tower model replaced with the downloaded tower model.\nGoing forward # The Overview page provides an overview of the rbxmk project and related concepts.\nThe Command reference pages provide information about the rbxmk executable, and the commands that can be run.\nThe API reference pages provide documentation of the API available in rbxmk\u0026rsquo;s Lua environment.\nThe Guide pages provide information about performing specific tasks with rbxmk.\n"},{"id":"121","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/extensions/","permalinkTitle":"Homepage / Overview / Descriptors / Extensions","title":"Extensions","content":" Stub # Not yet implemented. "},{"id":"122","rootTitleIndex":"2","rootTitle":"Installation","rootTitleIcon":"fas fa-download fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/installation/","rootTitleTitle":"Homepage / Installation","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/installation/","permalinkTitle":"Homepage / Installation","title":"Installation","content":" Instructions # The current version of rbxmk is v0.9.1.\nSelect the tab corresponding to your operating system:\nWindows\rNot yet implemented. These are instructions for installing rbxmk on Windows .\nTo install rbxmk:\nDownload the Windows installer . Open the installer and follow the prompts. After installing, any open command prompts will need to be reopened so that they reflect changes to the environment made by the installer.\nNext, verify that rbxmk is installed:\nClick the Start menu. In the menu\u0026rsquo;s search box, type cmd, then press the Enter key. In the Command Prompt windows that appears, type the following command: rbxmk version Confirm that the command prints the installed version of rbxmk. Mac\rNot yet implemented: \u0026#34;portable\u0026#34; qualifier. Not yet implemented: ARM architecture. These are instructions for installing rbxmk on macOS .\nSelect the download that corresponds to your operating system\u0026rsquo;s architecture:\n64-bit ARM The executable is contained in a zip archive. After extracting, the executable should be placed in a location that is in the system PATH .\nNext, verify that rbxmk is installed:\nClick the Launchpad icon in the Dock. Type Terminal in the search field, then click Terminal. Alternatively, the Terminal can be found in the /Applications/Utilities folder. In the Terminal window that appears, type the following command: rbxmk version Confirm that the command prints the installed version of rbxmk. Linux\rNot yet implemented: \u0026#34;portable\u0026#34; qualifier. These are instructions for installing rbxmk on Linux .\nSelect the download that corresponds to your operating system\u0026rsquo;s architecture:\n64-bit 32-bit The executable is contained in a zip archive. After extracting, the executable should be placed in a location that is in the system PATH .\nNext, verify that rbxmk is installed:\nOpen a terminal, and type the following command: rbxmk version Confirm that the command prints the installed version of rbxmk. Linux Debian\rNot yet implemented. These are instructions for installing rbxmk on Linux for Debian -based distributions.\nSelect the download that corresponds to your operating system\u0026rsquo;s architecture:\n64-bit 32-bit If your distribution supports installing .deb files directly, use that to install the downloaded file. Otherwise, dpkg can be used. For example, from a terminal:\ndpkg --install ~/Downloads/rbxmk-v0.9.1-linux-amd64.deb This will install rbxmk, or upgrade if a previous version was installed.\nNext, verify that rbxmk is installed:\nOpen a terminal, and type the following command: rbxmk version Confirm that the command prints the installed version of rbxmk. Linux RPM\rNot yet implemented. These are instructions for installing rbxmk on Linux through the RPM Package manager .\nSelect the download that corresponds to your operating system\u0026rsquo;s architecture:\n64-bit 32-bit If your distribution supports installing .rpm files directly, use that to install the downloaded file. Otherwise, rpm can be used. For example, from a terminal:\nrpm --upgrade ~/Downloads/rbxmk-v0.9.1-linux-amd64.rpm This will install rbxmk, or upgrade if a previous version was installed.\nNext, verify that rbxmk is installed:\nOpen a terminal, and type the following command: rbxmk version Confirm that the command prints the installed version of rbxmk. rbxmk is fully featured, but thorough testing of all features is still a work in progress. Please practice redundancy and use backups to reduce the risk of data loss. Be sure to report issues as you encounter them! All downloads # Not yet implemented. Windows # Installer Portable (64-bit) Portable (32-bit) macOS # Portable Portable (M1) Linux # Portable (64-bit) Portable (32-bit) Debian package (64-bit) Debian package (32-bit) RPM package (64-bit) RPM package (32-bit) Not yet implemented. List of checksums rbxmk may also be compiled from source. See the Compiling from source page for more information.\n"},{"id":"123","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/instances/","permalinkTitle":"Homepage / Overview / Instances","title":"Instances","content":"A major difference between Roblox and rbxmk is what an instance represents. In Roblox, an instance is a live object that acts and reacts. In rbxmk, an instance represents data, and only data.\nConsider the RBXL file format. Files of this format contain information used to reconstruct the instances that make up a place or model. Such files are static: they contain only data, but are difficult to manipulate in-place. Instances in rbxmk are like this, except that they are also interactive: the user can freely modify data and move it around.\nBecause of this, there are several differences between the Roblox API and the rbxmk API. By default, any kind of class can be created. Instances are just data, including the class name. The ClassName property can even be assigned to.\nlocal foobar = Instance.new(\u0026#34;Foobar\u0026#34;) foobar.ClassName = \u0026#34;FizzBuzz\u0026#34; -- allowed Properties # Instances also have no defined properties by default. A value of any type can be assigned to any property. Likewise, properties that are not explicitly assigned effectively do not exist.\nlocal part = Instance.new(\u0026#34;Part\u0026#34;) part.Foobar = 42 -- allowed print(part.Position) --\u0026gt; nil That said, even though it is possible for rbxmk to create arbitrary classes with arbitrary properties, this does not mean such instances will be interpreted in any meaningful way when sent over to Roblox. The most convenient way to enforce the correctness of instances is to use descriptors .\nAlternatively, the rbxmk.get and rbxmk.set functions can be used to get and set properties with type information defined manually.\nlocal value = Instance.new(\u0026#34;IntValue\u0026#34;) value.Value = 42 -- Set as double. rbxmk.set(value, \u0026#34;Value\u0026#34;, 42, \u0026#34;int\u0026#34;) -- Set as int. Behaviors # Not yet implemented: Behavior descriptors. In addition to getting and setting properties, rbxmk implements various behaviors on instances. Many behaviors are applied to all instances, and others depend on the class. Even though instances in rbxmk represent only data, behaviors are made available to make certain tasks easier.\nThrough behavior descriptors , all behaviors are fully configurable by the user, to be applied to certain classes and fields, or removed entirely. The Behaviors page lists each behavior, and how they are configured by default. The API reference page on instances provides a complete reference for all available behaviors.\nEssential methods # The methods for navigating instance trees are available on all instances, which includes Parent , FindFirstChild , GetChildren , and so on.\nConvenience methods like Clone , ClearAllChildren , Destroy , and GetFullName are implemented.\nWith descriptors specified, other methods like IsA and FindFirstChildWhichIsA become fully functional.\nChild indexing # Another notable difference between Roblox and rbxmk is that children cannot be directly indexed by name. Without a descriptor, all properties are considered valid, so there would be no room to interpret an index as a child.\nlocal tree = workspace.TreeModel --\u0026gt; nil; property \u0026#34;TreeModel\u0026#34; has not been assigned to. More generally, child indexing has been proven to have poor forward compatibility. New properties are added to Roblox\u0026rsquo;s API all the time, and every such change has the potential to cause a script to break, because the script expected a child and got the new property instead.\nNot yet implemented: IndexChildren. rbxmk moves past this problem by disabling child indexing by default. It can be re-enabled with the IndexChildren descriptor config. However, the Instance.Descend method is introduced to provide a convenient and safe alternative.\nAttributes # Instances in Roblox and rbxmk have attributes, which are similar to custom properties. Roblox serializes all attributes into a single property in a binary format. In rbxmk, this is implemented by the rbxattr format .\nrbxmk provides the same API as Roblox for manipulating attributes:\nGetAttribute GetAttributes SetAttribute Additionally, rbxmk provides the SetAttributes method for setting all the attributes of an instance more efficiently. Instead of decoding, updating, and encoding the attributes property each time, this will set all attributes in one go.\nTags # Not yet implemented. Instances also have tags which, like attributes, are serialized into a single property. rbxmk provides the rbxmk.tags object for managing the tags of all instances. In addition, an instance with the CollectionService class will have methods that operate on the tags within the tree that the instance is a part of:\nAddTag GetAllTags GetTagged GetTags HasTag RemoveTag Pivots # Not yet implemented. The pivots feature of rbxmk comprises a number of features related to the position and orientation of 3D objects. Principally, this is the GetPivot and PivotTo methods, which allow entire models to be moved around in 3D space.\nAdditionally, the GetBoundingBox , GetPrimaryPartCFrame , and SetPrimaryPartCFrame methods are available on instances with the Model class.\nMoreover, rbxmk implements certain properties whose values are derived from other properties. For example, on BaseParts, the Position and Orientation are derived from the CFrame property.\n"},{"id":"124","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/","permalinkTitle":"Homepage / API reference / Libraries","title":"Libraries","content":"The Lua environment provided by rbxmk is packaged as a list of libraries.\nIn rbxmk, a library is most accurately described as a set of modifications to the Lua environment. Some libraries group functions under a single table as normally expected, while others add a number of functions directly to the global table. Some libraries add a number of tables, and others merge with tables that already exist. Libraries are loaded in ascending order by their priority value.\nThe following libraries are available:\nLibrary Description base The Lua 5.1 standard library, abridged. program Values related to the running program. rbxmk An interface to the rbxmk engine, and the rbxmk environment. roblox An environment emulating the Roblox Lua API. clipboard An interface to the clipboard. fs An interface to the file system. http An interface to resources via HTTP. json Operations for handling JSON data. math Extensions to the standard math library. os Extensions to the standard os library. path Handles file paths. rbxassetid An interface to Roblox assets. string Extensions to the standard string library. sym Symbols for accessing instance metadata. table Extensions to the standard table library. Filtering # The run and interactive commands have a --libraries flag, which allows the user to include and exclude libraries.\nA library can have a number of types as dependencies. When the library is included, it will pull these types into the environment. For example, The roblox library depends on the CFrame type, so including it will also include the CFrame table into the global environment.\nConversely, if no included libraries depend on a type, then that type will not be included.\n"},{"id":"125","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/configs/","permalinkTitle":"Homepage / Overview / Descriptors / Configs","title":"Configs","content":"Not yet implemented. The following configs are defined by rbxmk:\nConfig Description ClassName Set the field of Instances that determines the class of the instance. IndexChildren Set whether instances have child indexing behavior. ClassName # TODO\nIndexChildren # TODO\n"},{"id":"126","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/","permalinkTitle":"Homepage / Overview / Descriptors","title":"Descriptors","content":"By default, rbxmk has no knowledge of the classes, members, and enums that are defined by Roblox. As such, instances can be of any class, properties can be of any type, and there are no constant enum values. By not explicitly requiring such information, rbxmk can remain relatively forward-compatible with future updates to Roblox. It also allows the user to construct values outside the constraints of the Roblox API.\nHowever, most of the time, the user will be using rbxmk to process values specifically for Roblox. It\u0026rsquo;s often less convenient for the user to specify type information manually; the API is different from that of Roblox, and is therefore less familiar. It would be great if this type information could be defined and enforced automatically.\nThe solution to this is descriptors. A descriptor contains information about what classes exist, the properties that exist on each class, what enums are defined, and so on.\nDesc objects # The Desc type represents the set of descriptors for an API. This contains a complete description of the classes and enums of an entire API, as well as supplementary information.\nAn Instance can have a Desc assigned to it, and this state will be inherited by any descendant instances. See sym.Desc for more information.\nAdditionally, the rbxmk.globalDesc field may be used to apply a Desc globally. When globalDesc is set, any instance that wouldn\u0026rsquo;t otherwise inherit a descriptor will use this global descriptor.\nWhen an instance has a descriptor, several behaviors are enforced:\nWhen the global descriptor is set, Instance.new errors if the given class name does not exist. A property will throw an error if it does not exist for the class. Getting an uninitialized property will throw an error. Getting a property that currently has an incorrect type will throw an error. Setting a property to a value of the incorrect type will throw an error. A property of the \u0026ldquo;Class\u0026rdquo; type category will throw an error if the assigned value is not an instance of the expected class. The value assigned to a property of the \u0026ldquo;Enum\u0026rdquo; type category will be coerced into a token. The value can be an enum item of the expected enum, or a number or string of the correct value. The class of an instance created from GetService must have the \u0026ldquo;Service\u0026rdquo; tag. The Desc type has methods to get and set information on the fly. Descriptors for a particular API element are represented by a dictionary that contains the fields of the element. The following types are related:\nType Description CallbackDesc Describes a callback class member. ClassDesc Describes a class. EnumDesc Describes an enum. EnumItemDesc Describes an enum item. EventDesc Describes an event class member. FunctionDesc Describes a function class member. MemberDesc A sum of the defined member types. ParameterDesc Describes a parameter of a function, event, or callback. PropertyDesc Describes a property class member. TypeDesc Describes the type of a value. Diffing and Patching # Descriptors can be compared and patched with the Desc.Diff and Desc.Patch methods. Diff returns a list of DescAction values, which describe how to transform the first descriptor into the second. Patch can be used to apply this transformation.\n-- List differences. local diff = prevDesc:Diff(nextDesc) -- Transform prev into next. prevDesc:Patch(diff) Patching is used primarily to augment some pregenerated descriptor with elements that aren\u0026rsquo;t present. For example, Roblox\u0026rsquo;s API dump does not include the BinaryStringValue.Value member. This can be patched with an action that adds the member, allowing it to be used as normal.\nMore generally, patching allows any version of an API dump to be used, while maintaining a separate, constant set of additional API elements.\nThe dump.desc-patch.json file is a handcrafted patch to Roblox\u0026rsquo;s API dump that includes missing items. This aids in proper conversion of binary formats to XML formats.\nAuxiliary data # Not yet implemented. The descriptor data format is based off of the format of Roblox\u0026rsquo;s API dump, which enables API dumps to be used directly as descriptors. However, these dumps paint an incomplete picture of the API.\nrbxmk allows descriptors to include supplementary information. This comes in the form of fields that have the $rbxmk prefix. They are kept separate to ensure forward-compatibility with the API dump format.\nExtensions # Not yet implemented. List of extensions\nDescriptor extensions directly augment elements in the base format with additional data. Extensions are specified under the $rbxmkExtensions field.\nWhile extensions can be specified by the user, rbxmk reserves all extension names to define and use for its own functionality. For customized use of extensions, it is recommended that the name be namespaced to avoid conflicts with rbxmk and with other scripts. For example, instead of using \u0026ldquo;Attributes\u0026rdquo;, try \u0026ldquo;yourname_Attributes\u0026rdquo;. The Extensions page lists and describes the extensions implemented by rbxmk.\nConfigs # Not yet implemented. List of configs\nDescriptor configurations are similar to extensions, except that the data does not have to be bound to any particular element. Configs are specified under the $rbxmkConfig field.\nWhile any config can be specified by the user, rbxmk reserves all config names to define and use for its own functionality. For customized use of configs, it is recommended that the name be namespaced to avoid conflicts with rbxmk and with other scripts. For example, instead of using \u0026ldquo;BrickColors\u0026rdquo;, try \u0026ldquo;yourname_BrickColors\u0026rdquo;. The Configurations page lists and describes the configs implemented by rbxmk.\nBehaviors # Not yet implemented. List of behaviors\nThe base functionality of the Instance type is to get and set properties. rbxmk extends instances with additional behaviors based on the class of the instance and the indexed field. In the interest of forward compatibilty, which behaviors apply to a class and field can be reconfigured by behavior descriptors.\nBehaviors are specified under the $rbxmkBehavior field, which is an object with the following fields:\nField Type Description Classes object Maps class names to behavior definitions. A behavior definition is an object with the following fields:\nField Type Description Inheritable bool Whether the behavior definition also applies to subclasses of the mapped class. Defaults to true. Behaviors object Map of field names to behaviors. In the Behaviors map, each key is the name of a field that indexes an instance of the mapped class. The field need not exist, or have a corresponding descriptor. Including the \u0026ldquo;sym.\u0026rdquo; prefix requires the field to be a symbol instead of a string. Each value is the name of a predefined behavior. The Behaviors page lists and describes each behavior implemented by rbxmk.\nExamples # The following descriptor will redefine attributes to be stored in the \u0026ldquo;Foobar\u0026rdquo; property instead of the default \u0026ldquo;AttributesSerialize\u0026rdquo;:\n{ \u0026#34;$rbxmkBehavior\u0026#34;: { \u0026#34;Classes\u0026#34;: { \u0026#34;Instance\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;Foobar\u0026#34;: \u0026#34;Instance.AttributesSerialize\u0026#34; } } } } } The following descriptor will remove the Descend method from instances:\n{ \u0026#34;$rbxmkBehavior\u0026#34;: { \u0026#34;Classes\u0026#34;: { \u0026#34;Instance\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;Descend\u0026#34;: \u0026#34;\u0026#34; } } } } } The following descriptor will cause the \u0026ldquo;Foobar\u0026rdquo; class to be used as the service for managing tags instead of CollectionService:\n{ \u0026#34;$rbxmkBehavior\u0026#34;: { \u0026#34;Classes\u0026#34;: { \u0026#34;CollectionService\u0026#34;: { \u0026#34;AddTag\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;GetAllTags\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;GetTagged\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;GetTags\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;HasTag\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;RemoveTag\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;Foobar\u0026#34;: { \u0026#34;AddTag\u0026#34;: \u0026#34;CollectionService.AddTag\u0026#34;, \u0026#34;GetAllTags\u0026#34;: \u0026#34;CollectionService.GetAllTags\u0026#34;, \u0026#34;GetTagged\u0026#34;: \u0026#34;CollectionService.GetTagged\u0026#34;, \u0026#34;GetTags\u0026#34;: \u0026#34;CollectionService.GetTags\u0026#34;, \u0026#34;HasTag\u0026#34;: \u0026#34;CollectionService.HasTag\u0026#34;, \u0026#34;RemoveTag\u0026#34;: \u0026#34;CollectionService.RemoveTag\u0026#34; } } } } The following descriptor describes how all behaviors are applied by default:\n{ \u0026#34;$rbxmkBehavior\u0026#34;: { \u0026#34;Classes\u0026#34;: { \u0026#34;Instance\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;Name\u0026#34;: \u0026#34;Instance.Name\u0026#34;, \u0026#34;Parent\u0026#34;: \u0026#34;Instance.Parent\u0026#34;, \u0026#34;ClearAllChildren\u0026#34;: \u0026#34;Instance.ClearAllChildren\u0026#34;, \u0026#34;Clone\u0026#34;: \u0026#34;Instance.Clone\u0026#34;, \u0026#34;Destroy\u0026#34;: \u0026#34;Instance.Destroy\u0026#34;, \u0026#34;FindFirstAncestor\u0026#34;: \u0026#34;Instance.FindFirstAncestor\u0026#34;, \u0026#34;FindFirstAncestorOfClass\u0026#34;: \u0026#34;Instance.FindFirstAncestorOfClass\u0026#34;, \u0026#34;FindFirstAncestorWhichIsA\u0026#34;: \u0026#34;Instance.FindFirstAncestorWhichIsA\u0026#34;, \u0026#34;FindFirstChild\u0026#34;: \u0026#34;Instance.FindFirstChild\u0026#34;, \u0026#34;FindFirstChildOfClass\u0026#34;: \u0026#34;Instance.FindFirstChildOfClass\u0026#34;, \u0026#34;FindFirstChildWhichIsA\u0026#34;: \u0026#34;Instance.FindFirstChildWhichIsA\u0026#34;, \u0026#34;GetChildren\u0026#34;: \u0026#34;Instance.GetChildren\u0026#34;, \u0026#34;GetDescendants\u0026#34;: \u0026#34;Instance.GetDescendants\u0026#34;, \u0026#34;GetFullName\u0026#34;: \u0026#34;Instance.GetFullName\u0026#34;, \u0026#34;IsA\u0026#34;: \u0026#34;Instance.IsA\u0026#34;, \u0026#34;IsAncestorOf\u0026#34;: \u0026#34;Instance.IsAncestorOf\u0026#34;, \u0026#34;IsDescendantOf\u0026#34;: \u0026#34;Instance.IsDescendantOf\u0026#34;, \u0026#34;Descend\u0026#34;: \u0026#34;rbxmk.Descend\u0026#34;, \u0026#34;sym.Desc\u0026#34;: \u0026#34;rbxmk.Desc\u0026#34;, \u0026#34;sym.IsService\u0026#34;: \u0026#34;rbxmk.IsService\u0026#34;, \u0026#34;sym.Properties\u0026#34;: \u0026#34;rbxmk.Properties\u0026#34;, \u0026#34;sym.RawDesc\u0026#34;: \u0026#34;rbxmk.RawDesc\u0026#34;, \u0026#34;sym.Reference\u0026#34;: \u0026#34;rbxmk.Reference\u0026#34;, \u0026#34;AttributesSerialize\u0026#34;: \u0026#34;Instance.AttributesSerialize\u0026#34;, \u0026#34;GetAttribute\u0026#34;: \u0026#34;Instance.GetAttribute\u0026#34;, \u0026#34;GetAttributes\u0026#34;: \u0026#34;Instance.GetAttributes\u0026#34;, \u0026#34;SetAttribute\u0026#34;: \u0026#34;Instance.SetAttribute\u0026#34;, \u0026#34;SetAttributes\u0026#34;: \u0026#34;Instance.SetAttributes\u0026#34;, \u0026#34;Tags\u0026#34;: \u0026#34;Instance.Tags\u0026#34;, } }, \u0026#34;DataModel\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;GetService\u0026#34;: \u0026#34;ServiceProvider.GetService\u0026#34;, \u0026#34;sym.Metadata\u0026#34;: \u0026#34;rbxmk.Metadata\u0026#34; } }, \u0026#34;CollectionService\u0026#34;: { \u0026#34;AddTag\u0026#34;: \u0026#34;CollectionService.AddTag\u0026#34;, \u0026#34;GetAllTags\u0026#34;: \u0026#34;CollectionService.GetAllTags\u0026#34;, \u0026#34;GetTagged\u0026#34;: \u0026#34;CollectionService.GetTagged\u0026#34;, \u0026#34;GetTags\u0026#34;: \u0026#34;CollectionService.GetTags\u0026#34;, \u0026#34;HasTag\u0026#34;: \u0026#34;CollectionService.HasTag\u0026#34;, \u0026#34;RemoveTag\u0026#34;: \u0026#34;CollectionService.RemoveTag\u0026#34; }, \u0026#34;PVInstance\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;GetPivot\u0026#34;: \u0026#34;PVInstance.GetPivot\u0026#34;, \u0026#34;PivotTo\u0026#34;: \u0026#34;PVInstance.PivotTo\u0026#34; } }, \u0026#34;Model\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;WorldPivotData\u0026#34;: \u0026#34;Model.WorldPivotData\u0026#34;, \u0026#34;WorldPivot\u0026#34;: \u0026#34;Model.WorldPivot\u0026#34;, \u0026#34;PrimaryPart\u0026#34;: \u0026#34;Model.PrimaryPart\u0026#34;, \u0026#34;GetPrimaryPartCFrame\u0026#34;: \u0026#34;Model.GetPrimaryPartCFrame\u0026#34;, \u0026#34;SetPrimaryPartCFrame\u0026#34;: \u0026#34;Model.SetPrimaryPartCFrame\u0026#34;, \u0026#34;GetBoundingBox\u0026#34;: \u0026#34;Model.GetBoundingBox\u0026#34; } }, \u0026#34;BasePart\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;CFrame\u0026#34;: \u0026#34;BasePart.CFrame\u0026#34;, \u0026#34;Orientation\u0026#34;: \u0026#34;BasePart.Orientation\u0026#34;, \u0026#34;Position\u0026#34;: \u0026#34;BasePart.Position\u0026#34;, \u0026#34;Rotation\u0026#34;: \u0026#34;BasePart.Rotation\u0026#34;, \u0026#34;Size\u0026#34;: \u0026#34;BasePart.Size\u0026#34; } }, \u0026#34;Attachment\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;CFrame\u0026#34;: \u0026#34;Attachment.CFrame\u0026#34;, \u0026#34;Axis\u0026#34;: \u0026#34;Attachment.Axis\u0026#34;, \u0026#34;Orientation\u0026#34;: \u0026#34;Attachment.Orientation\u0026#34;, \u0026#34;Position\u0026#34;: \u0026#34;Attachment.Position\u0026#34;, \u0026#34;SecondaryAxis\u0026#34;: \u0026#34;Attachment.SecondaryAxis\u0026#34;, \u0026#34;WorldAxis\u0026#34;: \u0026#34;Attachment.WorldAxis\u0026#34;, \u0026#34;WorldCFrame\u0026#34;: \u0026#34;Attachment.WorldCFrame\u0026#34;, \u0026#34;WorldOrientation\u0026#34;: \u0026#34;Attachment.WorldOrientation\u0026#34;, \u0026#34;WorldPosition\u0026#34;: \u0026#34;Attachment.WorldPosition\u0026#34;, \u0026#34;WorldSecondaryAxis\u0026#34;: \u0026#34;Attachment.WorldSecondaryAxis\u0026#34; } }, \u0026#34;Bone\u0026#34;: { \u0026#34;Behaviors\u0026#34;: { \u0026#34;Transform\u0026#34;: \u0026#34;Bone.Transform\u0026#34;, \u0026#34;TransformedCFrame\u0026#34;: \u0026#34;Bone.TransformedCFrame\u0026#34;, \u0026#34;TransformedWorldCFrame\u0026#34;: \u0026#34;Bone.TransformedWorldCFrame\u0026#34; } }, } } } "},{"id":"127","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","permalinkTitle":"Homepage / Overview","title":"Overview","content":" What is Roblox? # From the Roblox website :\nRoblox’s mission is to bring the world together through play. We enable anyone to imagine, create, and have fun with friends as they explore millions of immersive 3D experiences, all built by a global community of developers.\nWhat is Lua? # From the Lua website :\nLua is a powerful, efficient, lightweight, embeddable scripting language. It supports procedural programming, object-oriented programming, functional programming, data-driven programming, and data description.\nWhat is rbxmk? # rbxmk is a command-line tool for processing data to aid with the game development workflow, tailored specifically for Roblox. rbxmk has full capability for reading and writing Roblox\u0026rsquo;s proprietary file formats, including rbxl, rbxlx, rbxm, and rbxmx. It also provides operations for moving data through a number of interfaces, such as the file system, the clipboard, the Roblox website, or any generic network resource.\nCommon interface # rbxmk is built as an executable program to be run within a command-line interface (CLI). A CLI is preferred because it is cross-platform; every operating system under the sun provides one. In addition to enabling manual work and one-off snippets, this also makes rbxmk suitable for automated tasks, such as continuous integration and build automation.\nCommand reference\nFamiliar environment # Most of rbxmk\u0026rsquo;s behavior is facilitated through Lua scripts. Lua was chosen because it enables an environment that is familiar to developers on Roblox.\nAPI reference\nInstance management # rbxmk provides an API for managing instances that closely resembles Roblox\u0026rsquo;s instances. In addition to getting and setting properties, the usual methods for navigating instance trees are implemented, including Parent, FindFirstChild, and GetChildren.\nNot yet implemented: tags, pivots. Also implemented are supplementary operations for handling attributes and tags. Additionally, rbxmk implements Roblox\u0026rsquo;s pivot system, which enables easy placement of 3D models.\nInstances\nForward-compatible # Roblox\u0026rsquo;s API is always changing. To keep up with these changes, rbxmk is designed to be flexible, adaptable, and customizable.\nThere are no assumptions: The rbxmk API is able to function without any knowledge of Roblox. However, to improve convenience and familiarity, descriptors can be applied to augment the rbxmk environment. The official API dumps provided by Roblox can be used to make rbxmk more Roblox-like, or the user can supply their own descriptors, customized to suit their needs.\nDescriptors\nConfigurable # Not yet implemented. Configuration files can be used to control the behavior of rbxmk. Files are read and merged at various scopes: per computer, per user, per project, and more.\nConfiguration\nSafe and secure # Not yet implemented. rbxmk provides a detailed permissions system that can reduce or eliminate the impact of malicious third-party scripts, while remaining adaptable to the user\u0026rsquo;s needs, and curating a trustworthy ecosystem.\nPermissions\nFirst-party integration # Not yet implemented. Sub-projects for integrating rbxmk into your DevOps workflow are available:\nsetup-rbxmk for GitHub Actions. setup-rbxmk for GitLab CI. Automation\nRelated projects # Rojo : Syncing between Roblox Studio and the file system. The rojo.rbxmk.lua script can be used to build Rojo projects with rbxmk. Not yet implemented. Remodel : Scriptable Roblox multitool. The rbxmk vs Remodel page compares the two projects. "},{"id":"128","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/types/","permalinkTitle":"Homepage / API reference / Types","title":"Types","content":" Roblox types # Axes BinaryString BrickColor CFrame Color3 Color3uint8 ColorSequence ColorSequenceKeypoint Content Enum EnumItem Enums Faces Font Instance NumberRange NumberSequence NumberSequenceKeypoint Objects PhysicalProperties ProtectedString Ray Rect Region3 Region3int16 SharedString UDim UDim2 UniqueId Vector2 Vector2int16 Vector3 Vector3int16 token rbxmk types # AttrConfig CallbackDesc ClassDesc Cookie Cookies Desc DescAction DescActions DescFields DirEntry EnumDesc EnumItemDesc EventDesc FileInfo FormatSelector FunctionDesc HttpHeaders HttpOptions HttpRequest HttpResponse JsonOperation JsonPatch JsonValue MemberDesc ParameterDesc PropertyDesc RbxAssetOptions Symbol TypeDesc Primitive types # bool double float int int64 nil number string Group types # Array Dictionary Optional Tuple Variant table "},{"id":"129","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/behaviors/","permalinkTitle":"Homepage / Overview / Descriptors / Behaviors","title":"Behaviors","content":"Not yet implemented. This page lists and describes the available behavior descriptors .\nEach behavior has a corresponding class and field. That is, when the combination of class and field has no definition, that behavior is used as the default. A behavior can be explicitly unset by setting the behavior to an empty string.\nBasic # Behavior Description Instance.ClearAllChildren Returns ClearAllChildren method. Instance.Clone Returns Clone method. Instance.Destroy Returns Destroy method. Instance.FindFirstAncestor Returns FindFirstAncestor method. Instance.FindFirstAncestorOfClass Returns FindFirstAncestorOfClass method. Instance.FindFirstAncestorWhichIsA Returns FindFirstAncestorWhichIsA method. Instance.FindFirstChild Returns FindFirstChild method. Instance.FindFirstChildOfClass Returns FindFirstChildOfClass method. Instance.FindFirstChildWhichIsA Returns FindFirstChildWhichIsA method. Instance.GetChildren Returns GetChildren method. Instance.GetDescendants Returns GetDescendants method. Instance.GetFullName Returns GetFullName method. Instance.IsA Returns IsA method. Instance.IsAncestorOf Returns IsAncestorOf method. Instance.IsDescendantOf Returns IsDescendantOf method. Instance.Name Property used by methods that query the name of an instance. Instance.Parent Property used to get or set parent instance. Symbols # Behavior Description rbxmk.Desc Gets or sets the inherited descriptor of the instance. rbxmk.IsService Gets or sets whether the instance is a service. rbxmk.Properties Gets or sets all the properties of the instance at once. rbxmk.RawDesc Gets or sets the actual descriptor of the instance. rbxmk.Reference Gets or sets the string identifying the instance for serialization. Descend # Behavior Description rbxmk.Descend Returns Descend method. DataModel # Behavior Description DataModel.Metadata Gets or sets root metadata for serialization. ServiceProvider.GetService Returns GetService method. Attributes # Behavior Description Instance.AttributesSerialize Property used to serialize attributes. Instance.GetAttribute Returns GetAttribute method. Instance.GetAttributes Returns GetAttributes method. Instance.SetAttribute Returns SetAttribute method. Instance.SetAttributes Returns SetAttributes method. Tags # Behavior Description CollectionService.AddTag Returns AddTag method. CollectionService.GetAllTags Returns GetAllTags method. CollectionService.GetTagged Returns GetTagged method. CollectionService.GetTags Returns GetTags method. CollectionService.HasTag Returns HasTag method. CollectionService.RemoveTag Returns RemoveTag method. Instance.Tags Property used to serialize tags. Pivots # Behavior Description Attachment.Axis Property used as the local primary axis, derived from the CFrame property. Attachment.CFrame The primary property from which other Attachment properties are derived. Attachment.Orientation Property used as the local orientatation, derived from the CFrame property. Attachment.Position Property used as the local position, derived from the CFrame property. Attachment.SecondaryAxis Property used as the local secondary axis, derived from the CFrame property. Attachment.WorldAxis Property used as the primary world axis, derived from the CFrame property. Attachment.WorldCFrame Property used as the world CFrame property, derived from the CFrame property. Attachment.WorldOrientation Property used as the world orientatation, derived from the CFrame property. Attachment.WorldPosition Property used as the world position, derived from the CFrame property. Attachment.WorldSecondaryAxis Property used as the world secondary axis, derived from the CFrame property. BasePart.CFrame The primary property from which other CFrame properties are derived. BasePart.Orientation Property used as the orientation, derived from the CFrame property. BasePart.Position Property used as the position, derived from the CFrame property. BasePart.Rotation Property used as the rotation, derived from the CFrame property. BasePart.Size Property used to indicate the size of the BasePart. Model.GetBoundingBox Returns GetBoundingBox method. Model.GetPrimaryPartCFrame Returns GetPrimaryPartCFrame method. Model.PrimaryPart Property used to indicate the primary part of a model. Model.SetPrimaryPartCFrame Returns SetPrimaryPartCFrame method. Model.WorldPivot Property used as the pivot of the model. Model.WorldPivotData Property used to store the pivot of the model. PVInstance.GetPivot Returns GetPivot method. PVInstance.PivotTo Returns PivotTo method. "},{"id":"130","rootTitleIndex":"4","rootTitle":"Command reference","rootTitleIcon":"fas fa-terminal fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","rootTitleTitle":"Homepage / Command reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/command/","permalinkTitle":"Homepage / Command reference","title":"Command reference","content":" rbxmk is currently in version 0. This means that changes between minor versions are backwards-incompatible. To aid with migrating to new versions, any incompatible changes will be listed in the changelog. The following commands are available:\nCommand Description completion Generate an autocompletion script. doc Display API documentation. download-asset Download an asset. dump Dump the script API. help Display help. interactive Enter interactive mode. run Execute a script. upload-asset Upload an asset. version Display the version. "},{"id":"131","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/configuration/","permalinkTitle":"Homepage / Overview / Configuration","title":"Configuration","content":"Not yet implemented. Stub # "},{"id":"132","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/formats/","permalinkTitle":"Homepage / API reference / Formats","title":"Formats","content":"The following formats are available:\nbase64 bin client.lua client.luau csv desc-patch.json desc.json json l10n.csv localscript.lua localscript.luau lua luau modulescript.lua modulescript.luau patch.json rbxattr rbxl rbxlx rbxm rbxmx script.lua script.luau server.lua server.luau txt Details # A format is capable of encoding a value to raw bytes, or decoding raw bytes into a value. A format can be accessed at a low level through the rbxmk.encodeFormat and rbxmk.decodeFormat functions.\nThe name of a format corresponds to the extension of a file name. For example, the lua format corresponds to the .lua file extension. When determining a format from a file extension, format names are greedy; if a file extension is .server.lua, this will select the server.lua format before the lua format. For convenience, in places where a format name is received, the name may have an optional leading . character.\nAPIs that require a format receive a FormatSelector . A selector is usually a string that specifies the name of the format to use. A selector can instead be a table, where the \u0026ldquo;Format\u0026rdquo; field specifies the name, and a number of additional options can be configured for the format. The options available depend on the format.\nA format can decode into a number of certain types, and encode a number of certain types.\nSome formats may only encode or only decode.\nDefined for this documentation, a format that can encode a Stringable type accepts any type that can be converted to a string. Additionally, an Instance will be accepted as a Stringable when it has a particular ClassName , with a selected property that has a Stringlike value. In this case, the property is encoded. The following instances are Stringable:\nClassName Property LocalizationTable Contents LocalScript Source ModuleScript Source Script Source A format that can encode a Numberable type accepts any type that can be converted to a floating-point number. An Intable is similar, converting to an integer instead.\n"},{"id":"133","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","permalinkTitle":"Homepage / API reference","title":"API reference","content":"API: Application Programming Interface\nrbxmk is currently in version 0. This means that changes between minor versions are backwards-incompatible. To aid with migrating to new versions, any incompatible changes will be listed in the changelog. Lua scripts are used to perform actions in rbxmk. By convention only, scripts run with rbxmk have the .rbxmk.lua extension.\nThe Lua API for rbxmk is designed to closely resemble Roblox\u0026rsquo;s Lua API. The current Lua implementation is based on 5.1.\nThe API can be divided into the following categories:\nLibrary : A set of modifications to the Lua environment. Type : The type of a value. Format : A method of encoding and decoding types. "},{"id":"134","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/permissions/","permalinkTitle":"Homepage / Overview / Permissions system","title":"Permissions system","content":"Not yet implemented. Stub # "},{"id":"135","rootTitleIndex":"6","rootTitle":"Guides","rootTitleIcon":"fas fa-map fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/guides/","rootTitleTitle":"Homepage / Guides","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/guides/","permalinkTitle":"Homepage / Guides","title":"Guides","content":"This page lists guides for specific tasks involving rbxmk.\nCLI autocompletion How to set up autocompletion for various shells. ...Read more rbxmk vs Remodel A comparision between the APIs of rbxmk and Remodel. ...Read more Selene configuration How to generate a configuration file for the selene linter. ...Read more "},{"id":"136","rootTitleIndex":"3","rootTitle":"Overview","rootTitleIcon":"fas fa-book fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/","rootTitleTitle":"Homepage / Overview","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/automation/","permalinkTitle":"Homepage / Overview / Automation","title":"Automation","content":"Not yet implemented. Stub # "},{"id":"137","rootTitleIndex":"7","rootTitle":"Changelog","rootTitleIcon":"fas fa-feather-pointed fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/changelog/","rootTitleTitle":"Homepage / Changelog","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/changelog/","permalinkTitle":"Homepage / Changelog","title":"Changelog","content":"This page describes changes between versions of rbxmk. The imperative branch is the latest unreleased version.\nimperative # Incompatibilities\nIdentifiers with uppercase acronyms are renamed to lowercase to improve familiarity with Roblox\u0026rsquo;s API. The following APIs are affected: HTTPHeaders → HttpHeaders HTTPOptions → HttpOptions HTTPRequest → HttpRequest HTTPResponse → HttpResponse RBXAssetOptions → RbxAssetOptions RbxAssetOptions.AssetID → RbxAssetOptions.AssetId The RootDesc type is renamed to Desc . RootDesc.new is now Desc.new The Optional functions under the type library are moved to constructors of the Optional type. types.none is now Optional.none . types.some is now Optional.some . Highlights:\nAdd plugin dump format, which enables custom dump formats. Runs a Lua script in a limited environment. Receives a table that describes the Lua environment, and a function to write output. Add \u0026ldquo;Priority\u0026rdquo; field to libraries in dump format. See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.9.1 # Highlights:\nAdd support for .luau extension. Add luau format . Add client.luau format . Add localscript.luau format . Add modulescript.luau format . Add script.luau format . Add server.luau format . When a descriptor is set while encoding or decoding an instance, the service status is determined by the Service tag from instance\u0026rsquo;s class descriptor instead of the instance\u0026rsquo;s IsService field. This improves conversion from XML Roblox formats to binary Roblox formats. Add support for Optional types. If a descriptor is set, optional properties are handled transparently by accepting either nil (for None), or a value of the optional\u0026rsquo;s type (for Some). Add types.none to create an empty Optional exprim. Add types.some to create an Optional exprim that contains a value. Currently, this only affects the \u0026ldquo;Model.WorldPivotData\u0026rdquo; property, which is an optional CFrame. Add support for UniqueId type. Improve interface of the doc command. Frag mode is the default. List mode is enabled with the --list flag. Add RootDesc.Copy method. Fixes:\nFix descriptor IsA checks failing when superclass matches current class. Fix encoding of PhysicalProperties type in rbxl format. Fix options not working for the rbx formats . Fix SetAttribute throwing an error when setting an attribute to nil. Fix SetAttributes pulling wrong argument for dictionary. Fix nondeterministic order of encoded SharedStrings in rbxl format . Internal:\nSwitch to cobra for handling CLI. When the program is executed from a GUI, a message is displayed indicating that it is a command-line tool. Adds completion command for generating autocompletion scripts for various shells. See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.9.0 # Botched release. See v0.9.1.\nv0.8.0 # Incompatibilities\nRemove DataModel.new in favor of Instance.new(\u0026ldquo;DataModel\u0026rdquo;) . Move os library functions to path library . Move os.clean to path.clean Move os.expand to path.expand Move os.join to path.join Move os.split to path.split os.getenv is unchanged. Refactor descriptors. Element types are represented as dictionaries containing the fields of the element. Add RootDesc.new for creating new RootDesc types. Remove rbxmk.newDesc. All operations to get and set descriptor information are contained in RootDesc . The methods of RootDesc are updated to reflect this change. Move rbxmk.diffDesc function to RootDesc.Diff method. Move rbxmk.patchDesc function to RootDesc.Patch method. Move rbxmk.newCookie to Cookie.new . Move rbxmk.cookiesFrom to Cookie.from . Move rbxmk.newAttrConfig to AttrConfig.new . Highlights:\nImprove handling of values in the rbx formats . Add \u0026ldquo;Desc\u0026rdquo; option to the rbx formats to set a descriptor used when encoding or decoding. Add \u0026ldquo;DescMode\u0026rdquo; option to the rbx formats to set how deviations from the descriptor are handled. Including --desc-* flags causes the \u0026ldquo;Enum\u0026rdquo; global variable to be set to the enums generated from the resulting descriptor. Implement members for the DescAction type. Add DescAction.new constructor. xpcall can receive extra arguments that are passed to the called function. Add path.clean function to clean file paths. Add Enum field to rbxmk library to contain enums defined by rbxmk. Note that there are currently no such enums. Fixes:\nFix missing properties from sym.Properties when instance has a descriptor. Fix unexpected conversion failures when getting certain property types while an instance has descriptor. Fix type conversion error when encoding desc-patch.json format . Fix type conversion error when encoding Objects with rbx formats . Fix encoding of SharedStrings in rbxlx/rbxmx formats . Fix incorrect use of CDATA sections in rbxlx/rbxmx formats . Fix interactive command not having descriptor flags. Fix Cookie.from returning incorrect values when no cookies are found. Fix Instance.new handling DataModel incorrectly. Fix Instance.ClassName being settable to \u0026ldquo;DataModel\u0026rdquo;. Fix typeof returning \u0026ldquo;userdata\u0026rdquo; for Symbol values. Fix incorrect behavior when select is called with index 0. Fix Envelope field being printed as Time field when ColorSequenceKeypoint or NumberSequenceKeypoint is converted to a string. Fix bounds error when calling ColorSequence.new or NumberSequence.new. Fix ColorSequence.new and NumberSequence.new not verifying order of keypoints. Fix NumberRange.new not verifying interval. See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.7.2 # Fixes:\nFix fragments failing to resolve due to case-sensitivity. See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.7.1 # Highlights:\nAdd Instance[sym.Properties] to get or set all properties of an instance at once. Add rbxmk i command to enter an interactive prompt. Add flags to run command that preset a global descriptor. The --desc-latest flag uses the latest API dump from Roblox. The --desc-file flag uses a file in the descriptor format (API dump). The --desc-patch flag uses a file in the descriptor patch format. Add --libraries flag to run and i to include and exclude libraries. Fixes:\nFix download-asset flags not working. Fix error handling in download-asset . Fix error when getting certain string exprim types. Fix path security error when running a file outside of working directory. Fix runtime error produced by os.split . See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.7.0 # Botched release. See v0.7.1.\nv0.6.2 # Highlights:\nAdd rbxmk download-asset command to quickly download an asset from the Roblox website. Add rbxmk upload-asset command to quickly upload an asset to the Roblox website. Add rbxmk dump command to dump the rbxmk Lua API in various formats. Supports generic JSON and minified JSON format. Supports selene TOML format. Add Instance.Descend as an alternative to child indexing, which rbxmk deliberately does not implement. Add --include-root flag to run command to include paths as root directories. Add --allow-insecure-paths flag to run command to disable path restrictions. Add CFrame.lookAt constructor. Implementations of Axes.new and Faces.new match Roblox API. Previous implementations exist as Axes.fromComponents and Faces.fromComponents . Implement face fields on Axes , matching Roblox API. Rename AttrConfig.new to rbxmk.newAttrConfig . Improve speed of table.clear . Entries returned by fs.dir contain only Name and IsDir fields. For large directories, getting files is much faster. Use fs.stat to get full metadata of a file. Fixes:\nFix version displayed by rbxmk. Fix error when assigning a property to a DataModel . Fix type of BrickColor properties decoded by Roblox XML formats . Fixes to encoding of Roblox file formats . Fix RBXAssetOptions.Cookies not being optional. Fix missing properties encoded by Roblox binary formats in certain cases. Fix Instance.FindFirstAncestor behaving as FindFirstAncestorOfClass. Fix equality of Enums , Enum , and EnumItem types. Fix tostring of Enums , Enum , and EnumItem types. Fix handling of nil Instance properties. Fix Instance properties not checking inherited classes. Fix handling of nil PhysicalProperties properties. Fix handling of arguments in fs.mkdir , fs.remove , and fs.rename . Fix FormatSelectors being received incorrectly in clipboard.read and clipboard.write . Fix userdata caching. Immutable types like Vector3 which were equal would incorrectly produce the same userdata. Makes creation of such types faster. Fix os.getenv not returning all variables when no value is passed. Internal:\nAutomated tests run on Windows in addition to Linux. Add tool for automatically incrementing version number. Improve documentation. Remove concept of \u0026ldquo;sources\u0026rdquo;; they\u0026rsquo;re just libraries. See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.6.1 # Botched release. See v0.6.2.\nv0.6.0 # Botched release. See v0.6.2.\nv0.5.1 # Internal:\nFix automated releases. See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.5.0 # Highlights:\nImprove handling of HTTP cookies . Add rbxmk.cookiesFrom for getting cookies from known locations. Add rbxmk.newCookie for creating a cookie from scratch. DataModel metadata is now accessed through the Metadata symbol. Rename \u0026ldquo;file\u0026rdquo; source to \u0026ldquo;fs\u0026rdquo;. Move os.dir and os.stat to the fs library . fs.dir and fs.stat return nil if the file does not exist. Additions to fs library . fs.mkdir for creating directories. fs.remove for removing files. fs.rename for moving files. To reduce the impact of malicious scripts, files can only be accessed by rbxmk from certain locations. The working directory. The directory of the first running script. A temporary directory, accessible via os.expand(\u0026quot;$tmp\u0026quot;) Changes to os.expand . Add the $root_script_directory variable, which expands to the directory of the first running script. The $temp_directory variable now points to a temporary directory that is unique per run of rbxmk. Fixes:\nFix garbled error messages. Internal:\nImplement automated releases. See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.4.0 # Highlights:\nThe command-line API now uses sub-commands. rbxmk run runs scripts as before. rbxmk help displays help. rbxmk version displays the current version. Implement Instance attributes . Instance.GetAttribute Instance.GetAttributes Instance.SetAttribute . Additional SetAttributes method for efficiently setting all attributes at once. Add inheritance-based methods to Instance . Instance.IsA Instance.FindFirstChildWhichIsA Instance.FindFirstAncestorWhichIsA Format configuration : in APIs where a format string could be passed, a table can be passed instead, which can contain additional options that configure the format. The http source has been rewritten. Has single http.request function. Handles CSRF tokens automatically. Add rbxassetid source for accessing assets on the Roblox website. Add clipboard source for accessing the operating system\u0026rsquo;s clipboard. Currently available only on Windows. Add os.stat function for getting the metadata of a file. Additions to the math library . math.log from Lua 5.2. math.clamp from Roblox. math.round from Roblox. math.sign from Roblox. Additions to the table library . table.pack from Lua 5.2. table.unpack from Lua 5.2. table.move from Lua 5.3. table.clear from Roblox. table.create from Roblox. table.find from Roblox. Additions to the string library . string.split from Roblox. Add rbxmk.formatCanDecode function for getting whether a given format can decode into a given type. Add json format for decoding JSON data generically, similar to HttpService.JSONEncode/JSONDecode. Add csv format for converting general CSV data. Add l10n.csv format for converting localization data. Instance.new is allowed to create classes with the NotCreatable tag. Document _RBXMK_VERSION global variable. Remove rbxmk.readSource and rbxmk.writeSource functions. Fixes:\nFix sorting of members returned by ClassDesc.Members . Fix error with EnumDesc.AddItem . Fix error with RootDesc.AddEnum . Fix error when indexing Enums or calling GetEnums. Fix Enums.GetEnums returning no values. Fix issues with cloned Instances . Fix string and double types being returned as empty userdata. Fix strings not having a metatable. See a comparison with the previous version for a thorough list of changes.\nThe Documentation page provides a complete reference for this version of rbxmk.\nv0.3.0 # Imperative Mode is a complete rewrite of rbxmk from the ground up.\nVersus the previous quasi-declarative Lua API, the new API is completely imperative. The API is designed to emulate the Roblox Lua API. The Documentation page provides a complete reference for this version of rbxmk.\n"},{"id":"138","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/base/","permalinkTitle":"Homepage / API reference / Libraries / base","title":"base","content":"The base library is an abridgment of the Lua 5.1 standard library . It is loaded directly into the global environment.\nOverview # Item Kind Description _G Field The global environment. _VERSION Field The current version of Lua. assert Function Tests a condition. error Function Throws an error. getmetatable Function Gets the metatable of a value. ipairs Function Returns an iterator over an array. next Function Gets the next field in a table. pairs Function Returns an iterator over a table. pcall Function Calls a function in protected mode. print Function Prints values to standard output. select Function Returns arguments after a given index. Returns the number of arguments. setmetatable Function Sets the metatable of a value. tonumber Function Converts a value to a number. tostring Function Converts a value to a string. type Function Returns the Lua type of a value. unpack Function Returns the elements in an array. xpcall Function Calls a function in protected mode with an error handler. math Struct Common mathematical functions. os Struct Functions related to the operating system. string Struct Provides functions for string manipulation. table Struct Provides functions for manipulating tables. Fields # _G # _G: table [readonly]\nThe _G field holds the global environment ( _G._G == _G). Setting _G to a different value does not affect the content of the environment.\n_VERSION # _VERSION: string [readonly]\nThe _VERSION field is the current version of the Lua interpreter. The current value is \u0026ldquo;Lua 5.1\u0026rdquo;.\nFunctions # assert # assert(v: any?, message: string? = \u0026quot;assertion failed!\u0026quot;, ...: any?): (...: any?)\nThe assert function throws an error if v evaluates to false. Otherwise, each argument (including v and message) is returned. message is used as the error if the assertion fails.\nerror # error(message: any, level: integer? = 1)\nThe error function throws an error by terminating the last protected function that was called, using message as the error.\nlevel specifies the stack level from which error position information will be acquired. A level of 0 causes no position information to be included.\ngetmetatable # getmetatable(v: any): table?\nThe getmetatable function gets the metatable of v. Returns nil if v does not have a metatable. Otherwise, if the metatable has the field \u0026ldquo;__metatable\u0026rdquo;, then its value is returned. Otherwise, the metatable itself is returned.\nipairs # ipairs(t: table): (iterator: function, t: table, start: integer)\nThe ipairs function iterates over the sequential integers keys of t. The values returned are suitable to be used directly with a generic for loop:\nfor index, value in ipairs(t) do ... end next # next(t: table, index: any?): (index: any?, value: any?)\nThe next function allows all fields of a table to be traversed. t is the table, and index is the index in the table. next returns the next index and its associated value.\nIf index is nil, then the first index and its value are returned. When called with the last index, nil is returned.\nThe order in which fields are returned is undefined. This order is not changed after modifying existing fields, removing fields, or making no changes. How this order changes, when a value is assigned to a non-extant field, is undefined.\npairs # pairs(t: table): (next: function, t: table, start: nil)\nThe pairs function iterates over all fields of t. The values returned are suitable to be used directly with a generic for loop:\nfor key, value in pairs(t) do ... end Specifically, next is the next function, t is the received t, and start is nil.\npcall # pcall(f: function, ...: any?): (ok: boolean, ...: any?)\nThe pcall function calls f in protected mode. Any error thrown within f is caught and returned, instead of propagated. The remaining arguments are passed to f.\nok will be true if the call succeeded without errors. In this case, the remaining values are those returned by f. If ok is false, then the next value is the error value.\nprint # print(...: any?)\nThe print function receives each argument, converts them to strings, and writes them to standard output.\nselect # select(index: integer, ...: any?): (...: any?)\nThe select function returns all arguments after the argument indicated by index.\nselect(1, \u0026#34;A\u0026#34;, \u0026#34;B\u0026#34;, \u0026#34;C\u0026#34;) --\u0026gt; \u0026#34;A\u0026#34;, \u0026#34;B\u0026#34;, \u0026#34;C\u0026#34; select(2, \u0026#34;A\u0026#34;, \u0026#34;B\u0026#34;, \u0026#34;C\u0026#34;) --\u0026gt; \u0026#34;B\u0026#34;, \u0026#34;C\u0026#34; select(3, \u0026#34;A\u0026#34;, \u0026#34;B\u0026#34;, \u0026#34;C\u0026#34;) --\u0026gt; \u0026#34;C\u0026#34; select(4, \u0026#34;A\u0026#34;, \u0026#34;B\u0026#34;, \u0026#34;C\u0026#34;) --\u0026gt; If index is less than 0, then indexing starts from the end of the arguments. An error is thrown if index is 0.\nselect(count: string [\u0026quot;#\u0026quot;], ...: any?): integer\nThe select function with a count of \u0026ldquo;#\u0026rdquo;, returns the number of additional arguments passed.\nsetmetatable # setmetatable(v: table, metatable: table?): table\nThe setmetatable function sets the metatable of v to metatable. If metatable is nil, then the metatable is removed. An error is thrown if the current metatable has a \u0026ldquo;__metatable\u0026rdquo; field.\ntonumber # tonumber(x: any?, base: integer? = 10): number?\nThe tonumber function attempts to convert x into a number. Returns a number if x is a number or a string that can be parsed as a number. Returns nil otherwise.\nbase specifies the base to interpret the numeral. It may be any integer between 2 and 36, inclusive. In bases above 10, the letters A to Z (case-insensitive) represent 10 to 35, respectively. In base 10, the number can have a decimal part, as well as an optional exponent part. In other bases, only unsigned integers are accepted.\ntostring # tostring(v: any?): string\nThe tostring function converts v into a string in a reasonable format. If v has a metatable with the \u0026ldquo;__tostring\u0026rdquo; field, then this field is called with v as its argument, and its result is returned.\ntype # type(v: any): string\nThe type function returns the Lua type of v as a string. Possible values are \u0026ldquo;nil\u0026rdquo;, \u0026ldquo;boolean\u0026rdquo;, \u0026ldquo;number\u0026rdquo;, \u0026ldquo;string\u0026rdquo;, \u0026ldquo;table\u0026rdquo;, \u0026ldquo;function, \u0026ldquo;thread\u0026rdquo;, and \u0026ldquo;userdata\u0026rdquo;.\nTo get the internal type of userdata values, use the typeof function from the roblox library.\nunpack # unpack(list: table, i: integer?, j: integer?): (...: any?)\nThe unpack function returns each element in list from i up to and including j. By default, i is 1, and j is the length of list.\nxpcall # xpcall(f: function, msgh: (err: any) -\u0026gt; (any), ...: any): (ok: boolean, ...: any?)\nThe xpcall function is like pcall, except that it allows a custom error handler to be specified. msgh is the error handler, and is called within the erroring stack frame. msgh receives the current error message, and returns the new error message to be returned by xpcall. The remaining arguments to xpcall are passed to f.\nStructs # math # The math library contains common mathematical functions and variables.\nmath\nos # The os library contains functions related to the operating system.\nos\nstring # The string library provides functions for string manipulation.\nAll strings have a metatable with the __index field set to this library. This allows functions to be called as methods on strings:\ns:byte(...) -- Equivalent to: string.byte(s, ...) string\ntable # The table library provides functions for manipulating tables.\nMost functions assume that the table is an array, where \u0026ldquo;length\u0026rdquo; refers to the result of the # operator.\ntable\n"},{"id":"139","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/rbxmk/enum/","permalinkTitle":"Homepage / API reference / Libraries / rbxmk / Enum","title":"Enum","content":"The Enum field is a collection of Enum values defined by rbxmk.\nOverview # Item Kind Description DescActionElement Field no content for topic \u0026ldquo;Types/DescAction:Enums/DescActionElement/Summary\u0026rdquo; DescActionType Field no content for topic \u0026ldquo;Types/DescAction:Enums/DescActionType/Summary\u0026rdquo; Fields # DescActionElement # no content for topic \u0026ldquo;Types/DescAction:Enums/DescActionElement/Description\u0026rdquo;\nEnum item Value Description Class 1 Property 2 Function 3 Event 4 Callback 5 Enum 6 EnumItem 7 DescActionType # no content for topic \u0026ldquo;Types/DescAction:Enums/DescActionType/Description\u0026rdquo;\nEnum item Value Description Remove -1 Change 0 Add 1 "},{"id":"140","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/base/math/","permalinkTitle":"Homepage / API reference / Libraries / base / math","title":"math","content":"The math library contains common mathematical functions and variables.\nOverview # Item Kind Description huge Field The value \u0026gt;= any other numerical value. pi Field The value of π. abs Function Returns the absolute value of x. acos Function Returns the arc cosine of x. asin Function Returns the arc sine of x. atan Function Returns the arc tangent of x. atan2 Function Returns the arc tangent of y/ x. ceil Function Returns the smallest integer \u0026gt;= x. cos Function Returns the cosine of x. cosh Function Returns the hyperbolic cosine of x. deg Function Returns angle x in degrees. exp Function Returns e^ x. floor Function Returns the largest integer \u0026lt;= x. fmod Function Returns the remainder of x/ y, rounding towards 0. frexp Function Returns such that x = m2^e. ldexp Function Returns m2^e. max Function Returns the maximum value. min Function Returns the minimum value. modf Function Returns the integral and fractional part of x. pow Function Returns x^y. rad Function Returns angle x in radians. random Function Returns a random number in the range [0, 1). Returns a random number in the range [1, m]. Returns a random number in the range [ m, n]. randomseed Function Sets x as the seed for the random number generator. sin Function Returns the sine of x. sinh Function Returns the hyperbolic sine of x. sqrt Function Returns the square root of x. tan Function Returns the tangent of x. tanh Function Returns the hyperbolic tangent of x. Fields # huge # math.huge: number [readonly]\nThe huge value is greater than or equal to any other numerical value (infinity).\npi # math.pi: number [readonly]\nThe pi value is the value of the mathematical constant pi.\nFunctions # abs # math.abs(x: number): number\nThe abs function returns the absolute value of x.\nacos # math.acos(x: number): number\nThe acos function returns the arc cosine of x, in radians.\nasin # math.asin(x: number): number\nThe asin function returns the arc sine of x, in radians.\natan # math.atan(x: number): number\nThe atan function returns the arc tangent of x, in radians.\natan2 # math.atan2(x: number, y: number): number\nThe atan2 function returns the arc tangent of y divided by x, in radians. The signs of both arguments are used to find the quadrant of the result. The case of x being 0 is also handled.\nceil # math.ceil(x: number): integer\nThe ceil function returns the smallest integer less than or equal to x.\ncos # math.cos(x: number): number\nThe cos function returns the cosine of x, which is assumed to be in radians.\ncosh # math.cosh(x: number): number\nThe cosh function returns the hyperbolic cosine of x.\ndeg # math.deg(x: number): number\nThe deg function returns angle x (radians) in degrees.\nexp # math.exp(x: number): number\nThe exp function returns e^ x, where e is Euler\u0026rsquo;s number.\nfloor # math.floor(x: number): integer\nThe floor function returns the largest integer less than or equal to x.\nfmod # math.fmod(x: number, y: number): number\nThe fmod function returns the remainder of x divided by y with the quotient rounded towards 0.\nfrexp # math.frexp(x: number): (m: number, e: integer)\nThe frexp function returns m and e such that x = m2^e. m will be in the range [0.5, 1), or 0 when x is 0.\nldexp # math.ldexp(m: number, e: integer): number\nThe ldexp function returns m2^e.\nmax # math.max(...: number): number\nThe max function returns the largest value among the given arguments.\nmin # math.min(...: number): number\nThe min function returns the smallest value among the given arguments.\nmodf # math.modf(x: number): (integer, number)\nThe modf function returns the integral and fractional part of x.\npow # math.pow(x: number): number\nThe pow function returns x^y.\nrad # math.rad(x: number): number\nThe rad function returns angle x (degrees) in radians.\nrandom # math.random(): number\nThe random function returns a uniform pseudo-random real number in the range [0, 1).\nmath.random(m: integer): number\nThe random function returns a uniform pseudo-random integer in the range [1, m].\nmath.random(m: integer, n: integer): number\nThe random function returns a uniform pseudo-random integer in the range [ m, n].\nrandomseed # math.randomseed(x: number)\nThe randomseed function sets x as the seed for the random number generator.\nsin # math.sin(x: number): number\nThe sin function returns the sine of x, which is assumed to be in radians.\nsinh # math.sinh(x: number): number\nThe sinh function returns the hyperbolic sine of x.\nsqrt # math.sqrt(x: number): number\nThe sqrt function returns the square root of x.\ntan # math.tan(x: number): number\nThe tan function returns the tangent of x, which is assumed to be in radians.\ntanh # math.tanh(x: number): number\nThe tanh function returns the hyperbolic tangent of x.\n"},{"id":"141","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/base/os/","permalinkTitle":"Homepage / API reference / Libraries / base / os","title":"os","content":"The os library contains functions related to the operating system.\nOverview # Item Kind Description clock Function Returns the CPU time. date Function Returns the current time. Returns the time as a table. Returns the time as a formatted string. difftime Function Returns the difference between two times. time Function Returns a numeric time. Functions # clock # os.clock(): number\nThe clock function returns, approximately, the seconds of CPU time used by the program.\ndate # os.date(): string\nThe date function returns a string-representation of the current time.\nos.date(format: string [\u0026quot;*t\u0026quot;, !*t], time: number?): {day: integer, hour: integer?, isdst: boolean?, min: integer?, month: integer, sec: integer?, wday: integer?, yday: integer?, year: integer}\nThe date function returns the time as a table with a number of fields for each component:\nField Notes year 4 digits month 1 - 12 day 1 - 31 hour 0 - 23 min 0 - 59 sec 0 - 61 wday Day of the week, 1 - 7 starting on Sunday. yday Day of the year, 1 - 366. isdst Whether Daylight Saving Time is active. If time is specified, then it specifies the time to be formatted. Otherwise, the current time is used. See os.time for a description of this value.\nos.date(format: string, time: number?): string\nThe date function returns the formatted according to format, which has the same rules as the C function strftime.\nIf time is specified, then it specifies the time to be formatted. Otherwise, the current time is used. See os.time for a description of this value.\ndifftime # os.difftime(t2: number, t1: number): number\nThe difftime function returns the number of seconds between t2 and t1. On most systems, this value is exactly equal to t2 - t1.\ntime # os.time(t: {day: integer, hour: integer?, isdst: boolean?, min: integer?, month: integer, sec: integer?, year: integer}?): number\nThe time function returns a numeric time corresponding to the fields of t. If t is unspecified, then the current time is returned.\nOn most systems, the returned value is the relative to the UNIX epoch. On others, the meaning is unspecified, and may only be passed to os.date and os.difftime.\n"},{"id":"142","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/program/","permalinkTitle":"Homepage / API reference / Libraries / program","title":"program","content":"The program library is loaded directly into the global environment. It contains values related to the compiled executable.\nOverview # Item Kind Description _RBXMK_VERSION Field The current version of rbxmk. Fields # _RBXMK_VERSION # _RBXMK_VERSION: string [readonly]\nThe _RBXMK_VERSION global variable is defined as a string containing the current version of rbxmk, formatted according to semantic versioning .\n"},{"id":"143","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/base/string/","permalinkTitle":"Homepage / API reference / Libraries / base / string","title":"string","content":"The string library provides functions for string manipulation.\nAll strings have a metatable with the __index field set to this library. This allows functions to be called as methods on strings:\ns:byte(...) -- Equivalent to: string.byte(s, ...) Overview # Item Kind Description byte Function Gets the bytes of a string subset. char Function Converts bytes to a string. find Function Finds the indices of a pattern. format Function Formats values as a string. gmatch Function Iterates over the captures of a pattern. gsub Function Replaces patterns. len Function Returns the length of a string. lower Function Converts uppercase letters to lowercase. match Function Returns the captures from a pattern. rep Function Repeats a string. reverse Function Reverses a string. sub Function Returns a subset of a string. upper Function Converts lowercase letters to uppercase. Functions # byte # string.byte(s: string, i: integer? = 1, j: integer? = i): (...: integer)\nThe byte function returns the numerical byte codes of characters within s between i and j.\nchar # string.char(...: integer): string\nThe char function converts each given numeric byte code to a character, then returns the concatenation of each character.\nfind # string.find(s: string, pattern: string, init: integer? = 1, plain: boolean? = false): (start: number?, end: number?, ...: string?)\nThe find function searches for the first match of pattern in s. If found, then find returns the indices of s where the match starts and ends. If pattern contains captures, they are also returned after start and end. If no match is found, then nil is returned.\ninit specifies where the search begins. If plain is true, then pattern matching is disabled, and pattern is searched for as a simple substring.\nformat # string.format(format: string, ...: any): string\nThe format function formats each remaining argument according to format, and returns the result.\nformat follows the same rules for printing as Go\u0026rsquo;s fmt package , of which Lua\u0026rsquo;s string.format is mostly a subset.\ngmatch # string.gmatch(s: string, pattern: string): () -\u0026gt; (...: string)\nThe gmatch function returns an iterator function. Each time this function is called, it returns the next captures from pattern for s. If pattern contains no captures, then the entire match is returned.\ngsub # string.gsub(s: string, pattern: string, repl: string|{[string]: string | number | false}|(...: string) -\u0026gt; (string | number | false | nil), n: integer?): (string, integer)\nThe gsub function returns s for which each occurrence of pattern is replaced according to repl. If n is specified, then only the first n occurrences are replaced.\nIf repl is a string, then it is used for replacement. A sequence within repl of the form %n, where n is between 1 and 9, stands for the value of the n-th captured substring. The sequence %0 stands for the entire match, and %% stands for a literal % character.\nIf repl is a table, then it is queried for each match, using the first capture as the key. If pattern has no captures, then the entire match is used as the key. The value is used for replacement.\nIf repl is a function, then it is called each time a match occurs. Each capture is passed as an argument, or the entire match if no captures are specified.\nIf a replacement value is a string or number, then it is used as the replacement by converting to a string. If it is false or nil, then the match is not replaced.\nlen # string.len(s: string): integer\nThe len function returns the byte length of the string, equivalent to the # operator.\nlower # string.lower(s: string): string\nThe lower function returns s with all uppercase letters converted to lowercase, and any other character left unchanged.\nmatch # string.match(s: string, pattern: string, init: integer? = 1): (...: string?)\nThe match function searches for the first match of pattern in s. If found, then each capture within pattern is returned. Otherwise, nil is returned. If pattern has no captures, then the whole match is returned instead. init specifies where to start the search.\nrep # string.rep(s: string, n: integer): string\nThe rep function returns the concatenation of n copies of s.\nreverse # string.reverse(s: string): string\nThe reverse function returns s with bytes in reversed order.\nsub # string.sub(s: string, i: integer, j: integer? = -1): string\nThe sub function returns the substring of s starting from i up to and including j.\nupper # string.upper(s: string): string\nThe upper function returns s with all lowercase letters converted to uppercase, and any other character left unchanged.\n"},{"id":"144","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/base/table/","permalinkTitle":"Homepage / API reference / Libraries / base / table","title":"table","content":"The table library provides functions for manipulating tables.\nMost functions assume that the table is an array, where \u0026ldquo;length\u0026rdquo; refers to the result of the # operator.\nOverview # Item Kind Description concat Function Concatenates each element as a string. insert Function Inserts an element. Appends an element. maxn Function Returns the largest positive numerical index. remove Function Removes an element. sort Function Sorts elements. Functions # concat # table.concat(t: {string | number}, sep: string? = \u0026quot;\u0026quot;, i: integer? = 1, j: integer? = #t): string\nThe concat function concatenates each element within the table from i to j. Each element must be a string or a number. sep is concatenated between each element. An empty string is returned if i is greater than j.\ninsert # table.insert(t: table, index: integer, value: any)\nThe insert function inserts value into t at index. Each element after index is shifted upward to make room.\ntable.insert(t: table, value: any)\nThe insert function appends value to the end of t, such that the index is the length t plus one.\nmaxn # table.maxn(t: table): integer\nThe maxn function returns the largest positive numerical index in t, or 0 if none can be found.\nremove # table.remove(t: table, index: integer? = #t): any\nThe remove function removes the element at index from t. Each element after index is shifted downward to close the gap. Returns the removed element.\nsort # table.sort(t: table, comp: (a: any, b: any) -\u0026gt; (boolean)?)\nThe sort function sorts the elements in t in-place from index 1 to the length of t. If comp is specified, then it must return true when a is less than b. If comp is unspecified, then the \u0026lt; operator is used instead.\nThe sorting algorithm is not stable. Elements considered equal may have their relative positions changed.\n"},{"id":"145","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/rbxmk/","permalinkTitle":"Homepage / API reference / Libraries / rbxmk","title":"rbxmk","content":"The rbxmk library contains functions related to the rbxmk engine.\nOverview # Item Kind Description globalAttrConfig Field Get or set the global AttrConfig. globalDesc Field Get or set the global descriptor. decodeFormat Function Deserialize data from bytes. encodeFormat Function Serialize data into bytes. formatCanDecode Function Check whether a format decodes into a type. get Function Gets the property of an instance. loadFile Function Load the content of a file as a function. loadString Function Load a string as a function. propType Function Gets the unreflected type of an instance property. runFile Function Run a file as a Lua chunk. runString Function Run a string as a Lua chunk. set Function Sets the property of an instance. Enum Struct Collection of rbxmk-defined enums. Fields # globalAttrConfig # rbxmk.globalAttrConfig: AttrConfig?\nThe globalAttrConfig field gets or sets the global AttrConfig. Most items that utilize an AttrConfig will fallback to the global AttrConfig when possible.\nSee the Value inheritance section for details on how this field is inherited by Instances .\nglobalDesc # rbxmk.globalDesc: Desc?\nThe globalDesc field gets or sets the global root descriptor. Most items that utilize a root descriptor will fallback to the global descriptor when possible.\nSee the Value inheritance section for details on how this field is inherited by Instances .\nFunctions # decodeFormat # rbxmk.decodeFormat(format: string, bytes: BinaryString): (value: any)\nThe decodeFormat function decodes bytes into a value according to format. The exact details of each format are described in the Formats documents.\ndecodeFormat will throw an error if the format does not exist, or the format has no decoder defined.\nencodeFormat # rbxmk.encodeFormat(format: string, value: any): (bytes: BinaryString)\nThe encodeFormat function encodes value into a sequence of bytes according to format. The exact details of each format are described in the Formats document.\nencodeFormat will throw an error if the format does not exist, or the format has no encoder defined.\nformatCanDecode # rbxmk.formatCanDecode(format: string, type: string): bool\nThe formatCanDecode function returns whether format decodes into type.\nformatCanDecode will throw an error if the format does not exist, or the format does not define types it decodes into.\nget # rbxmk.get(instance: Instance, property: string, fallback: string | Desc | nil): (value: any)\nThe get function gets the property of instance. If instance has a descriptor, then it is used to determine the type when getting the property. Otherwise fallback is used. If fallback is a string, then the type named by the string is used. If fallback is a Desc, then that descriptor is used. If fallback is nil, then the type will be derived directly from the value of the property.\nNote that fallback is always treated as less specific than the descriptor of instance. The purpose of the get function is to provide a descriptor-agnostic way to get properties that have ambiguous types in the absence of a descriptor. With a descriptor, the function behaves the same as indexing the property directly. Without a descriptor, the fallback argument is used to determine the type instead.\nloadFile # rbxmk.loadFile(path: string): (func: function)\nThe loadFile function loads the content of a file as a Lua function. path is the path to the file.\nThe function runs in the context of the calling script.\nloadString # rbxmk.loadString(source: string): (func: function)\nThe loadString function loads the a string as a Lua function. source is the string to load.\nThe function runs in the context of the calling script.\npropType # rbxmk.propType(instance: Instance, property: string): (type: string?)\nThe propType function returns the unreflected type of the value of property from instance. Returns nil if the property is uninitialized.\nrunFile # rbxmk.runFile(path: string, ...: any): (...: any)\nThe runFile function runs the content of a file as a Lua script. path is the path to the file. args are passed into the script as arguments. Returns the values returned by the script.\nThe script runs in the context of the referred file. Files cannot be run recursively; if a file is already running as a script, then runFile will throw an error.\nrunString # rbxmk.runString(source: string, ...: any): (...: any)\nThe runString function runs a string as a Lua script. source is the string to run. args are passed into the script as arguments. Returns the values returned by the script.\nThe script runs in the context of the calling script.\nset # rbxmk.set(instance: Instance, property: string, value: any, fallback: string | Desc | nil)\nThe set function sets the property of instance to value. If instance has a descriptor, then it is used to determine the type when setting the property. Otherwise, fallback is used. If fallback is a string, then the type named by the string is used. If fallback is a Desc, then that descriptor is used. If fallback is nil, then the type will be derived directly from value.\nNote that fallback is always treated as less specific than the descriptor of instance. The purpose of the set function is to provide a descriptor-agnostic way to set properties that have ambiguous types in the absence of a descriptor. With a descriptor, the function behaves the same as assigning to the property directly. Without a descriptor, the fallback argument is used to determine the type instead.\nStructs # Enum # The Enum field is a collection of Enum values defined by rbxmk.\nEnum\n"},{"id":"146","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/roblox/","permalinkTitle":"Homepage / API reference / Libraries / roblox","title":"roblox","content":"The Roblox library contains an environment similar to the Roblox Lua API. It is included directly into the global environment.\nOverview # Item Kind Description typeof Function Gets the internal type of a userdata. Functions # typeof # typeof(value: any): string\nThe typeof function returns the type of a value. For userdata, the internal value is returned. Other Lua values return the same as the type function.\n"},{"id":"147","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/clipboard/","permalinkTitle":"Homepage / API reference / Libraries / clipboard","title":"clipboard","content":"The clipboard library provides an interface to the operating system\u0026rsquo;s clipboard.\nThe clipboard is currently available only on Windows. Other operating systems return no data.\nOverview # Item Kind Description read Function Gets data from the clipboard in one of a number of formats. write Function Sets data to the clipboard in a number of formats. Functions # read # clipboard.read(...: FormatSelector): (value: any?)\nThe read function gets a value from the clipboard according to one of the given formats .\nEach format has a number of associated media types . Each format is traversed in order, and each media type within a format is traversed in order. The data that matches the first media type found in the clipboard is selected. This data is decoded by the format corresponding to the matched media type, and the result is returned.\nThrows an error if value could not be decoded from the format, or if data could not be retrieved from the clipboard. If no data was found, then nil is returned.\nwrite # clipboard.write(value: any, ...: FormatSelector)\nThe write function sets value to the clipboard according to the given formats .\nEach format has a number of associated media types . For each format, the data is encoded in the format, which is then sent to the clipboard for each of the format\u0026rsquo;s media type. Data is not sent for a media type if that media type was already sent.\nIf no formats are given, then the clipboard is cleared with no further action.\nThrows an error if value could not be encoded in a format, or if data could not be sent to the clipboard.\n"},{"id":"148","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/fs/","permalinkTitle":"Homepage / API reference / Libraries / fs","title":"fs","content":"The fs library provides an interface to the file system.\nOverview # Item Kind Description dir Function Gets a list of files in a directory. mkdir Function Makes a new directory. read Function Reads data from a file in a certain format. remove Function Removes a file or directory. rename Function Moves a file or directory. stat Function Gets metadata about a file. write Function Writes data to a file in a certain format. Functions # dir # fs.dir(path: string): {DirEntry}?\nThe dir function returns a list of files in the given directory. Each file is a table with the following fields:\nField Type Description Name string The base name of the file. IsDir boolean Whether the file is a directory. dir returns nil if the directory does not exist, or the path does not point to a directory. An error is thrown if a problem otherwise occurred while reading the directory.\nmkdir # fs.mkdir(path: string, all: bool?): boolean\nThe mkdir function creates a directory at path. If all is true, then mkdir will create each parent directory as needed. all defaults to false.\nReturns true if all the directories were created successfully. Returns false if all of the directories already exist. Throws an error if a problem otherwise occurred while creating a directory.\nread # fs.read(path: string, format: FormatSelector?): (value: any)\nThe read function reads the content of the file at path, and decodes it into value according to the format matching the file extension of path. If format is given, then it will be used instead of the file extension.\nIf the format returns an Instance , then the Name property will be set to the \u0026ldquo;fstem\u0026rdquo; component of path according to path.split .\nremove # fs.remove(path: string, all: bool?): boolean\nThe remove function removes the file or directory at path. If all is true, then removing a directory will also recursively remove all of its children. all defaults to false.\nReturns true if every file is removed successfully. Returns false if the file or directory does not exist. Throws an error if a problem occurred while removing a file.\nrename # fs.rename(old: string, new: string): boolean\nThe rename functions moves the file or directory at path old to path new. If new exists and is not a directory, it is replaced.\nReturns true if the file was moved successfully. Returns false if the file or directory does not exist. Throws an error if a problem otherwise occurred while moving the file.\nstat # fs.stat(path: string): FileInfo?\nThe stat function gets metadata of the given file. Returns a table with the following fields:\nField Type Description Name string The base name of the file. IsDir boolean Whether the file is a directory. Size number The size of the file, in bytes. ModTime number The modification time of the file, in Unix time. stats returns nil if the file does not exist. An error will be thrown if a problem otherwise occurred while getting the metadata.\nstat does not follow symbolic links.\nwrite # fs.write(path: string, value: any, format: FormatSelector?)\nThe write function encodes value according to the format matching the file extension of path, and writes the result to the file at path. If format is given, then it will be used instead of the file extension.\n"},{"id":"149","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/http/","permalinkTitle":"Homepage / API reference / Libraries / http","title":"http","content":"The http library provides an interface to resources on the network via HTTP.\nOverview # Item Kind Description request Function Begins an HTTP request. Functions # request # http.request(options: HttpOptions): (req: HttpRequest)\nThe request function begins a request with the specified options . Returns a request object that may be resolved or canceled . Throws an error if the request could not be started.\n"},{"id":"150","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/json/","permalinkTitle":"Homepage / API reference / Libraries / json","title":"json","content":"The json library provides functions for handling JSON data.\nOverview # Item Kind Description diff Function Get difference between two JSON values. fromString Function Converts a string to a JSON value. patch Function Tranforms a JSON value according to a patch. string Function no content for topic \u0026ldquo;Libraries/json:Fields/string/Summary\u0026rdquo; Functions # diff # json.diff(prev: JsonValue, next: JsonValue): {JsonPatch}?\nThe diff function returns a patch that represents the transformation of prev to next. This patch can be applied with json.patch.\nfromString # json.fromString(string: string): JsonValue\nThe fromString function attempts to convert string to a JSON value. It is equivalent to rbxmk.decodeFormat(\u0026quot;json\u0026quot;, string)\npatch # json.patch(value: JsonValue, patch: JsonPatch): JsonValue\nThe patch function returns a copy of value that has been transformed according to patch.\nstring # json.string(value: JsonValue): string\nno content for topic \u0026ldquo;Libraries/json:Fields/string/Description\u0026rdquo;\n"},{"id":"151","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/math/","permalinkTitle":"Homepage / API reference / Libraries / math","title":"math","content":"The math library is an extension to the standard library that includes the same additions to Roblox\u0026rsquo;s\nmath library :\nOverview # Item Kind Description clamp Function Returns a number clamped between a minimum and maximum. log Function Includes optional base argument. round Function Rounds a number to the nearest integer. sign Function Returns the sign of a number. Functions # clamp # math.clamp(x: number, min: number, max: number): number\nThe clamp function returns x clamped so that it is not less than min or greater than max.\nlog # math.log(x: number, base: number? = 𝑒): number\nThe log function returns the logarithm of x in base. The default for base is e, returning the natural logarithm of x.\nround # math.round(x: number): number\nThe round function returns x rounded to the nearest integer. The function rounds half away from zero.\nsign # math.sign(x: number): number\nThe sign function returns the sign of x: 1 if x is greater than zero, -1 of x is less than zero, and 0 if x equals zero.\n"},{"id":"152","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/os/","permalinkTitle":"Homepage / API reference / Libraries / os","title":"os","content":"The os library is an extension to the standard library.\nOverview # Item Kind Description getenv Function Gets an environment variable. Functions # getenv # os.getenv(name: string?): string?|{[string]: string}\nThe getenv function returns the value of the name environment variable, or nil if no such value is defined. If name is not specified, then a table of environment variable names mapped to values is returned.\n"},{"id":"153","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/path/","permalinkTitle":"Homepage / API reference / Libraries / path","title":"path","content":"The path library provides functions that handle file paths.\nOverview # Item Kind Description clean Function Cleans up a file path. expand Function Expands predefined file path variables. join Function Joins a number of file paths together. rel Function Produces a relative path. split Function Splits a file path into its components. Functions # clean # path.clean(path: string): string\nThe clean function returns the shortest path equivalent to path. Separators are replaced with the OS-specific path separator.\nexpand # path.expand(path: string): string\nThe expand function scans path for certain variables of the form $var or ${var} an expands them. The following variables are expanded:\nVariable Description $script_name, $sn The base name of the currently running script. Empty for stdin. $script_directory, $script_dir, $sd The directory of the currently running script. Expands to the working directory for stdin. Causes an error if the working directory could not be located. $root_script_directory, $root_script_dir, $rsd The directory of the first running script. Expands to the working directory for stdin. Causes an error if the working directory could not be located. $working_directory, $working_dir, $wd The current working directory. Causes an error if the working directory could not be located. $temp_directory, $temp_dir, $tmp The directory for temporary files. Causes an error if a temporary directory could not be located. Other variables cause an error to be thrown.\njoin # path.join(...: string): string\nThe join function joins each path element into a single path, separating them using the operating system\u0026rsquo;s path separator. This also cleans up the path.\nrel # path.rel(basePath: string, targetPath: string): string?\nThe rel function returns a relative path that is equivalent to targetPath when joined with basePath, such that following equivalence is true:\npath.clean(targetPath) == path.join(basePath, path.rel(basePath, targetPath)) path.clean is called on the result. Returns nil if targetPath cannot be made relative to basePath.\nsplit # path.split(path: string, ...: string): (...: string)\nThe split function returns the components of a file path.\nComponent project/scripts/main.script.lua Description base main.script.lua The file name; the last element of the path. dir project/scripts The directory; all but the last element of the path. ext .lua The extension; the suffix starting at the last dot of the last element of the path. fext .script.lua The format extension, as determined by registered formats. fstem main The base without the format extension. stem main.script The base without the extension. A format extension depends on the available formats. See Formats for more information.\n"},{"id":"154","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/rbxassetid/","permalinkTitle":"Homepage / API reference / Libraries / rbxassetid","title":"rbxassetid","content":"The rbxassetid library provides an interface to assets on the Roblox website.\nOverview # Item Kind Description read Function Reads data from a rbxassetid in a certain format. write Function Writes data to a rbxassetid in a certain format. Functions # read # rbxassetid.read(options: RbxAssetOptions): (value: any)\nThe read function downloads an asset according to the given options . Returns the content of the asset corresponding to AssetId, decoded according to Format.\nThrows an error if a problem occurred while downloading the asset.\nwrite # rbxassetid.write(options: RbxAssetOptions)\nThe write function uploads to an existing asset according to the given options . The Body is encoded according to Format, then uploaded to AssetId. AssetId must be the ID of an existing asset.\nThrows an error if a problem occurred while uploading the asset.\n"},{"id":"155","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/string/","permalinkTitle":"Homepage / API reference / Libraries / string","title":"string","content":"The string library is an extension to the standard library that includes the same additions to Roblox\u0026rsquo;s string library .\nOverview # Item Kind Description split Function Splits a string into a list of substrings. Functions # split # string.split(s: string, sep: string? = \u0026quot;,\u0026quot;): {string}\nThe split function splits s into substrings separated by sep.\nIf sep is nil, or if sep is not nil but not in s, then split returns a table with s as its only element.\nIf sep is empty, then s is split after each UTF-8 sequence.\nNote: Roblox\u0026rsquo;s implementation splits per byte, while this implementation splits per UTF-8 character.\n"},{"id":"156","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/sym/","permalinkTitle":"Homepage / API reference / Libraries / sym","title":"sym","content":"The sym library contains Symbol values. A symbol is a unique identifier that can be used to access certain metadata fields of an Instance .\nAn instance can be indexed with a symbol to get a metadata value in the same way it can be indexed with a string to get a property value:\nlocal instance = Instance.new(\u0026#34;Workspace\u0026#34;) instance[sym.IsService] = true print(instance[sym.IsService]) --\u0026gt; true Overview # Item Kind Description AttrConfig Field Gets the inherited AttrConfig of an instance. Desc Field Gets the inherited descriptor of an instance. IsService Field Determines whether an instance is a service. Metadata Field Gets the metadata of a DataModel . Properties Field Gets the properties of an instance. RawAttrConfig Field Accesses the direct AttrConfig of an instance. RawDesc Field Accesses the direct descriptor of an instance. Reference Field Determines the value used to identify the instance. Fields # AttrConfig # sym.AttrConfig: Symbol [readonly]\nThe AttrConfig symbol gets the inherited AttrConfig of an instance.\nDesc # sym.Desc: Symbol [readonly]\nThe Desc symbol gets the inherited descriptor of an instance.\nIsService # sym.IsService: Symbol [readonly]\nThe IsService symbol determines whether an instance is a service.\nMetadata # sym.Metadata: Symbol [readonly]\nThe Metadata symbol gets the metadata of a DataModel .\nProperties # sym.Properties: Symbol [readonly]\nThe Properties symbol gets the properties of an instance.\nRawAttrConfig # sym.RawAttrConfig: Symbol [readonly]\nThe RawAttrConfig symbol accesses the direct AttrConfig of an instance.\nRawDesc # sym.RawDesc: Symbol [readonly]\nThe RawDesc symbol accesses the direct descriptor of an instance.\nReference # sym.Reference: Symbol [readonly]\nThe Reference symbol determines the value used to identify the instance.\n"},{"id":"157","rootTitleIndex":"5","rootTitle":"API reference","rootTitleIcon":"fas fa-list fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/","rootTitleTitle":"Homepage / API reference","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/table/","permalinkTitle":"Homepage / API reference / Libraries / table","title":"table","content":"The table library is an extension to the standard library that includes the same additions to Roblox\u0026rsquo;s table library .\nOverview # Item Kind Description clear Function Removes all entries from a table. create Function Creates a new table with a preallocated capacity. find Function Find the index of a value in a table. move Function Copies the entries in a table. pack Function Packs arguments into a table. unpack Function Unpacks a table into arguments. Functions # clear # table.clear(t: table)\nThe clear function removes all the entries from t.\ncreate # table.create(cap: integer, value: any?): table\nThe create function returns a table with the array part allocated with a capacity of cap. Each entry in the array is optionally filled with value.\nfind # table.find(t: table, value: any, init: integer? = 1): integer?\nThe find function returns the index in t of the first occurrence of value, or nil if value was not found. Starts at index init, or 1 if unspecified.\nmove # table.move(a1: table, f: integer, e: integer, t: integer, a2: table?): table\nThe move function copies elements from a1 to a2, performing the equivalent to the multiple assignment\na2[t], ... = a1[f], ..., a1[e] The default for a2 is a1. The destination range can overlap the source range. Returns a2.\npack # table.pack(...: any?): table\nThe pack function returns a table with each argument stored at keys 1, 2, etc. Also sets field \u0026ldquo;n\u0026rdquo; to the number of arguments. Note that the resulting table may not be a sequence.\nunpack # table.unpack(list: table, i: integer?, j: integer?): (...: any?)\nReturns the elements from list, equivalent to\nlist[i], list[i+1], ..., list[j] By default, i is 1 and j is the length of list.\n"},{"id":"160","rootTitleIndex":"6","rootTitle":"Guides","rootTitleIcon":"fas fa-map fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/guides/","rootTitleTitle":"Homepage / Guides","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/guides/autocompletion/","permalinkTitle":"Homepage / Guides / CLI autocompletion","title":"CLI autocompletion","content":" Stub # "},{"id":"162","rootTitleIndex":"2","rootTitle":"Installation","rootTitleIcon":"fas fa-download fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/installation/","rootTitleTitle":"Homepage / Installation","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/installation/compiling/","permalinkTitle":"Homepage / Installation / Compiling from source","title":"Compiling from source","content":"This document contains information for compiling and installing rbxmk.\nrbxmk is written in Go . For development, it is recommend to be familiar with the go command . Basic installation # Instead of using prebuilt releases, rbxmk can be installed manually.\nInstall Go Install Git Using a shell with Git (such as Git Bash), run the following command: go install github.com/anaminus/rbxmk/rbxmk@latest If you installed Go correctly, this will install the latest version of rbxmk to $GOPATH/bin, which will allow you run it directly from a shell. No further configuration is necessary.\nA specific version of rbxmk may be installed by replacing latest with a version number (e.g. v0.8.0).\nBuilding the repository # To compile and install the bleeding-edge version, the best way is to clone the repository:\ngit clone https://github.com/anaminus/rbxmk cd rbxmk/rbxmk go install By default, this will install rbxmk with the version set as \u0026ldquo;imperative\u0026rdquo;.\nBuild tags # Several build tags are available to configure how rbxmk is compiled. Tags can be configured with the -tags flag:\ngo install -tags \u0026#34;tag1 tag2 etc\u0026#34; The following tags are available:\nrelease # To aid with debugging, the program version is built as \u0026ldquo;imperative\u0026rdquo; by default, indicating the default branch.\ngo install rbxmk version # imperative To build a release version, the release tag must be included:\ngo install -tags \u0026#34;release\u0026#34; rbxmk version # 0.5.1 interactive_commands # Including the interactive_commands tag will enable interactive command mode. For windows builds, if the executable is run from Windows Explorer, rbxmk runs in a mode that allows commands to be used interactively. If not included, a message is displayed instead.\nThis feature is locked behind a tag because Cobra commands are currently not designed to be run more than once. Progress on this issue can be tracked at github.com/spf13/cobra#1419 .\nno_desc_test # Testing of the --desc-latest flag involves downloading an external file, which can slow down testing. This can be disabled by including the no_desc_test tag.\ngo test -tags \u0026#34;no_desc_test\u0026#34; sslkeylog # Including the sslkeylog tag will compile rbxmk with SSL key logging support. This is useful for interfacing with external programs like Wireshark to debug HTTPS connections.\nAdditionally, the linker must be configured to set the main.sslKeyLogFileEnvVar variable to the name of an environment variable. This environment variable will be used to get the location of a key logging file when it is available.\nFor example, Wireshark reads from the file pointed to by the SSLKEYLOGFILE environment variable. To interface with Wireshark, rbxmk can be compiled as follows:\ngo install -tags \u0026#34;sslkeylog\u0026#34; -ldflags=\u0026#34;-X main.sslKeyLogFileEnvVar=SSLKEYLOGFILE\u0026#34; Then, when SSLKEYLOGFILE is set to, say, /tmp/sslkeys.log, rbxmk will write keys to this file as it makes network requests. Meanwhile, Wireshark will read keys from this file, and use them to decrypt the network traffic made by rbxmk.\nIf the SSLKEYLOGFILE environment variable is defined globally, other programs may respect it inadvertently. Make sure to have it enabled only when debugging. Or, compile rbxmk with a different variable name. Because key logging can be a security risk, the sslkeylog tag is forced disabled when the release build tag is included.\nLanguage tags # Support for compilation with alternate languages is available.\nBy default, the \u0026ldquo;en-us\u0026rdquo; language is compiled. To compile with a different language, the lang_no_default tag must be included disable the default language, then a lang_* tag is included to set the desired language.\ngo install -tags \u0026#34;lang_no_default lang_en_us\u0026#34; Language build tags are formatted by converting non-letter characters to underscores, and prefixing with \u0026ldquo;lang_\u0026rdquo;. For example, en-us becomes lang_en_us.\nThe following language tags are available:\nlang_en_us Version configuration # Extra version information can be included by passing the -X flag to the linker:\ngo install -ldflags=\u0026#34;-X $VARIABLE=$VALUE\u0026#34; The main.Prerelease variable appends a prerelease version. The main.Build variable appends build metadata. The following example sets the prelease as \u0026ldquo;rc.1\u0026rdquo;, and sets the build information to include the current date and commit hash.\ngo install -ldflags=\u0026#34;-X main.Prerelease=rc.1 -X main.Build=$(echo $(git log -1 --format=%cI | date --utc +%Y%m%d)-$(git rev-parse --short HEAD))\u0026#34; rbxmk version # imperative-rc.1+20210312-2070bf8 Cross-compilation # rbxmk can be cross-compiled by setting the GOOS and GOARCH environment variables to the target system before compiling. For example, in Bash:\nGOOS=windows GOARCH=amd64 go install -tags \u0026#34;lang_no_default lang_en_us\u0026#34; The page on Go environment variables contains more information, including a list of valid combinations of GOOS and GOARCH.\n"},{"id":"166","rootTitleIndex":"0","rootTitle":"Homepage","rootTitleIcon":"fa-solid fa-house-chimney fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/","rootTitleTitle":"Homepage","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/","permalinkTitle":"Homepage","title":"Homepage","content":" rbxmk rbxmk is a tool for processing Roblox files.\nWhether your project is a game, plugin, module, or whatever, rbxmk is essential for your workflow.\nGet started Download Through a familiar Lua API, data can be received, transformed, and sent in whatever way you need.\nlocal url = clipboard.read(\u0026#34;txt\u0026#34;) local id = tonumber(url:match(\u0026#34;%d+\u0026#34;)) if id then local asset = rbxassetid.read({ AssetId = id, Format = \u0026#34;rbxm\u0026#34;, }) clipboard.write(asset, \u0026#34;rbxm\u0026#34;) end Drill into your models, surgically pick them apart, and recombine them.\nlocal game = fs.read(\u0026#34;place.rbxl\u0026#34;) local models = game:Descend(\u0026#34;Workspace\u0026#34;, \u0026#34;Models\u0026#34;) for i, model in ipairs(models:GetChildren()) do local fileName = model.Name .. \u0026#34;.rbxm\u0026#34; fs.write(path.join(\u0026#34;models\u0026#34;, fileName)) end Not yet implemented: tags, pivots. First-class support for all data types, as well as attributes, tags, and pivots.\nlocal position = model:GetAttribute(\u0026#34;Position\u0026#34;) if typeof(position) ~= \u0026#34;Vector3\u0026#34; then position = Vector3.zero end model:PivotTo(CFrame.new(position)) Command-line A common interface for both manual and automated work. Rich documentation Has a complete reference built-in. Not yet implemented. Fast installation With a streamlined installer, getting started is a breeze. Let's go! "},{"id":"167","rootTitleIndex":"6","rootTitle":"Guides","rootTitleIcon":"fas fa-map fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/guides/","rootTitleTitle":"Homepage / Guides","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/guides/remodel/","permalinkTitle":"Homepage / Guides / rbxmk vs Remodel","title":"rbxmk vs Remodel","content":" Remodel is a tool similar to rbxmk. It also runs Lua scripts, and has its own Lua API. This page lists the Lua APIs provided by Remodel, and their equivalents in rbxmk.\nDescriptors # Remodel has API descriptors built-in, whereas descriptors in rbxmk must be specified by the user.\nTo fetch the latest descriptors provided by Roblox, the --desc-latest flag can be passed. Additionally, the dump-patch file can be applied afterwards to further improve compatibility. For example:\nrbxmk run --desc-latest --desc-patch dump.desc-patch.json script.lua Instances # Most methods for navigating instance trees are available in both Remodel and rbxmk.\nRoblox Remodel rbxmk Instance.new The parent argument is not supported. parent is supported. Has third optional argument to override the instance\u0026rsquo;s descriptor. Instance.Name Equivalent Equivalent Instance.ClassName Equivalent Can be written, but no transformations are made to properties. Instance.Parent Equivalent Equivalent Instance.Destroy Equivalent Equivalent Instance.Clone Equivalent Equivalent Instance.GetChildren Equivalent Equivalent Instance.GetDescendants Equivalent Equivalent Instance.FindFirstChild recursive argument is not supported. recursive is supported. DataModel.GetService Inserts service if it does not exist. Inserts service if it does not exist. Types # rbxmk supports all property types available in Roblox, which includes all types supported by Remodel. In rbxmk, while a descriptor is set, value type conversions are performed automatically when getting or setting a property. Without a descriptor, the types library can be used to specify a type that would otherwise be ambiguous (for example, differentiating a number between an int, float or double).\nAuthentication # Remodel can be passed the --auth flag to receive a cookie for authentication. APIs that require authentication automatically use this cookie when it is available.\nIn rbxmk, cookies must handled within the script through the Cookie type. APIs requiring authentication have an option to receive these cookies.\nrbxmk can attempt to retrieve cookies from the user\u0026rsquo;s Studio session using the Cookie.from function:\n-- Returns a list of cookies. local cookies = Cookie.from(\u0026#34;studio\u0026#34;) Cookies can also be created from scratch with the Cookie.new function. This can be combined with the os.getenv function to emulate Remodel\u0026rsquo;s behavior with the REMODEL_AUTH environment variable:\nlocal authCookie = Cookie.new(\u0026#34;.ROBLOSECURITY\u0026#34;, os.getenv(\u0026#34;REMODEL_AUTH\u0026#34;) or \u0026#34;\u0026#34;) Or, the cookie value can be received as an argument to the script, which is similar to the --auth flag:\n-- From first argument. local authCookie = Cookie.new(\u0026#34;.ROBLOSECURITY\u0026#34;, (...)) Library functions # The following section lists each Remodel API and its equivalent in rbxmk.\nremodel.readPlaceFile # remodel:\nlocal game = remodel.readPlaceFile(\u0026#34;file.rbxl\u0026#34;) local game = remodel.readPlaceFile(\u0026#34;file.rbxlx\u0026#34;) rbxmk:\nlocal game = fs.read(\u0026#34;file.rbxl\u0026#34;) -- Implicit format from extension. local game = fs.read(\u0026#34;file.rbxlx\u0026#34;) -- Implicit format from extension. local game = fs.read(\u0026#34;file.rbxl\u0026#34;, \u0026#34;rbxl\u0026#34;) -- Explicit format. local game = fs.read(\u0026#34;file.rbxlx\u0026#34;, \u0026#34;rbxlx\u0026#34;) -- Explicit format. remodel.readModelFile # remodel:\nlocal model = remodel.readPlaceFile(\u0026#34;file.rbxm\u0026#34;) local model = remodel.readPlaceFile(\u0026#34;file.rbxmx\u0026#34;) rbxmk:\n-- Returns a DataModel with top-level instances as children. local model = fs.read(\u0026#34;file.rbxm\u0026#34;):GetChildren() -- Implicit format from extension. local model = fs.read(\u0026#34;file.rbxmx\u0026#34;):GetChildren() -- Implicit format from extension. local model = fs.read(\u0026#34;file.rbxm\u0026#34;, \u0026#34;rbxm\u0026#34;):GetChildren() -- Explicit format. local model = fs.read(\u0026#34;file.rbxmx\u0026#34;, \u0026#34;rbxmx\u0026#34;):GetChildren() -- Explicit format. remodel.readPlaceAsset # remodel:\nlocal game = remodel.readPlaceAsset(\u0026#34;123456789\u0026#34;) rbxmk:\n-- No authentication. local game = rbxassetid.read({AssetID=123456789, Format=\u0026#34;rbxl\u0026#34;}) -- Using REMODEL_AUTH environment variable for authentication. local auth = {Cookie.new(\u0026#34;.ROBLOSECURITY\u0026#34;, os.getenv(\u0026#34;REMODEL_AUTH\u0026#34;) or \u0026#34;\u0026#34;)} local game = rbxassetid.read({AssetID=123456789, Format=\u0026#34;rbxl\u0026#34;, Cookies=auth}) remodel.readModelAsset # remodel:\nlocal model = remodel.readModelAsset(\u0026#34;123456789\u0026#34;) rbxmk:\n-- No authentication. local model = rbxassetid.read({AssetID=123456789, Format=\u0026#34;rbxm\u0026#34;}):GetChildren() -- Using REMODEL_AUTH environment variable for authentication. local auth = {Cookie.new(\u0026#34;.ROBLOSECURITY\u0026#34;, os.getenv(\u0026#34;REMODEL_AUTH\u0026#34;) or \u0026#34;\u0026#34;)} local model = rbxassetid.read({AssetID=123456789, Format=\u0026#34;rbxm\u0026#34;, Cookies=auth}):GetChildren() remodel.writePlaceFile # remodel:\nremodel.writePlaceFile(game, \u0026#34;file.rbxl\u0026#34;) remodel.writePlaceFile(game, \u0026#34;file.rbxlx\u0026#34;) rbxmk:\n-- game may be a DataModel, Instance, or array of Instances. fs.write(\u0026#34;file.rbxl\u0026#34;, game) -- Implicit format from extension. fs.write(\u0026#34;file.rbxlx\u0026#34;, game) -- Implicit format from extension. fs.write(\u0026#34;file.rbxl\u0026#34;, game, \u0026#34;rbxl\u0026#34;) -- Explicit format. fs.write(\u0026#34;file.rbxlx\u0026#34;, game, \u0026#34;rbxlx\u0026#34;) -- Explicit format. remodel.writeModelFile # remodel:\nremodel.writeModelFile(instance, \u0026#34;file.rbxm\u0026#34;) remodel.writeModelFile(instance, \u0026#34;file.rbxmx\u0026#34;) rbxmk:\n-- instance may be a DataModel, Instance, or array of Instances. fs.write(\u0026#34;file.rbxm\u0026#34;, instance) -- Implicit format from extension. fs.write(\u0026#34;file.rbxmx\u0026#34;, instance) -- Implicit format from extension. fs.write(\u0026#34;file.rbxm\u0026#34;, instance, \u0026#34;rbxm\u0026#34;) -- Explicit format. fs.write(\u0026#34;file.rbxmx\u0026#34;, instance, \u0026#34;rbxmx\u0026#34;) -- Explicit format. remodel.writeExistingPlaceAsset # remodel:\nremodel.writeExistingPlaceAsset(game, \u0026#34;123456789\u0026#34;) rbxmk:\n-- Using REMODEL_AUTH environment variable for authentication. local auth = {Cookie.new(\u0026#34;.ROBLOSECURITY\u0026#34;, os.getenv(\u0026#34;REMODEL_AUTH\u0026#34;) or \u0026#34;\u0026#34;)} rbxassetid.write({AssetID=123456789, Format=\u0026#34;rbxl\u0026#34;, Body=game}) remodel.writeExistingModelAsset # remodel:\nremodel.writeExistingModelAsset(instance, \u0026#34;123456789\u0026#34;) rbxmk:\n-- Using REMODEL_AUTH environment variable for authentication. local auth = {Cookie.new(\u0026#34;.ROBLOSECURITY\u0026#34;, os.getenv(\u0026#34;REMODEL_AUTH\u0026#34;) or \u0026#34;\u0026#34;)} rbxassetid.write({AssetID=123456789, Format=\u0026#34;rbxm\u0026#34;, Body=instance}) remodel.getRawProperty # remodel:\nlocal value = remodel.getRawProperty(instance, \u0026#34;Property\u0026#34;) rbxmk:\n-- Get property. May have descriptor validation depending on -- `instance[sym.Desc]`. local value = instance.Property -- Ensure validation is disabled. instance[sym.RawDesc] = false local value = instance.Property remodel.setRawProperty # remodel:\nremodel.setRawProperty(instance, \u0026#34;Property\u0026#34;, \u0026#34;String\u0026#34;, value) rbxmk:\n-- Set property. May have descriptor validation depending on -- `instance[sym.Desc]`. instance.Property = value -- Ensure validation is disabled. instance[sym.RawDesc] = false instance.Property = value remodel.readFile # remodel:\nlocal content = remodel.readFile(path) rbxmk:\n-- Read raw content of file as raw bytes. local content = fs.read(path, \u0026#34;bin\u0026#34;) remodel.readDir # remodel:\nlocal files = remodel.readDir(path) rbxmk:\n-- fs.dir returns an array of tables with Name and IsDir fields. local files = fs.dir(path) for i, file in ipairs(files) do files[i] = file.Name end remodel.writeFile # remodel:\nremodel.writeFile(path, content) rbxmk:\n-- Write content to file as raw bytes. fs.write(path, content, \u0026#34;bin\u0026#34;) remodel.createDirAll # remodel:\nremodel.createDirAll(path) rbxmk:\n-- Second argument causes parent directories to be created as needed. fs.mkdir(path, true) remodel.isFile # remodel:\nlocal isFile = remodel.isFile(path) rbxmk:\n-- fs.stat returns metadata of file. local stat = fs.stat(path) if stat == nil then error(\u0026#34;file does not exist\u0026#34;) end local isFile = not stat.IsDir remodel.isDir # remodel:\nlocal isDir = remodel.isDir(path) rbxmk:\n-- fs.stat returns metadata of file. local stat = fs.stat(path) if stat == nil then error(\u0026#34;file does not exist\u0026#34;) end local isDir = stat.IsDir json.fromString # remodel:\nlocal data = json.fromString(source) rbxmk:\n-- Decode string content according to json format. local data = rbxmk.decodeFormat(\u0026#34;json\u0026#34;, source) json.toString # remodel:\nlocal output = json.toString(data) rbxmk:\n-- Encode value according to json format. Default configuration produces -- minified JSON. local output = rbxmk.encodeFormat(\u0026#34;json\u0026#34;, data) json.toStringPretty # remodel:\nlocal output = json.toStringPretty(data) local output = json.toStringPretty(data, \u0026#34;\\t\u0026#34;) rbxmk:\n-- Encode value according to json format, with Indent option set to use two -- spaces. local output = rbxmk.encodeFormat({Format=\u0026#34;json\u0026#34;, Indent=\u0026#34; \u0026#34;}, data) -- Using tabs for indentation. local output = rbxmk.encodeFormat({Format=\u0026#34;json\u0026#34;, Indent=\u0026#34;\\t\u0026#34;}, data) "},{"id":"168","rootTitleIndex":"6","rootTitle":"Guides","rootTitleIcon":"fas fa-map fa-lg","rootTitlePath":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/guides/","rootTitleTitle":"Homepage / Guides","permalink":"/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/guides/selene/","permalinkTitle":"Homepage / Guides / Selene configuration","title":"Selene configuration","content":" Stub # "}]