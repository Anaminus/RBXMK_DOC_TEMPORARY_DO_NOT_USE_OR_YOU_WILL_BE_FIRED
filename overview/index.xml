<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Overview on rbxmk</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/</link><description>Recent content in Overview on rbxmk</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright Â© 2022 Anaminus</copyright><atom:link href="https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Instances</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/instances/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/instances/</guid><description>A major difference between Roblox and rbxmk is what an instance represents. In Roblox, an instance is a live object that acts and reacts. In rbxmk, an instance represents data, and only data.
Consider the RBXL file format. Files of this format contain information used to reconstruct the instances that make up a place or model. Such files are static: they contain only data, but are difficult to manipulate in-place. Instances in rbxmk are like this, except that they are also interactive: the user can freely modify data and move it around.</description></item><item><title>Configuration</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/configuration/</guid><description>Not yet implemented. Stub #</description></item><item><title>Permissions system</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/permissions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/permissions/</guid><description>Not yet implemented. Stub #</description></item><item><title>Automation</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/automation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/automation/</guid><description>Not yet implemented. Stub #</description></item><item><title>rbxmk vs Remodel</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/remodel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/remodel/</guid><description>Remodel is a tool similar to rbxmk. It also runs Lua scripts, and has its own Lua API. This page lists the Lua APIs provided by Remodel, and their equivalents in rbxmk.
Descriptors # Remodel has API descriptors built-in, whereas descriptors in rbxmk must be specified by the user.
To fetch the latest descriptors provided by Roblox, the --desc-latest flag can be passed. Additionally, the dump-patch file can be applied afterwards to further improve compatibility.</description></item></channel></rss>