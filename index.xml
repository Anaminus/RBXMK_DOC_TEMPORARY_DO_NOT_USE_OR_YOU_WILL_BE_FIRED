<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rbxmk - A tool for processing Roblox files on rbxmk</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/</link><description>Recent content in rbxmk - A tool for processing Roblox files on rbxmk</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright Â© 2022 Anaminus</copyright><atom:link href="https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/index.xml" rel="self" type="application/rss+xml"/><item><title>Extensions</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/extensions/</guid><description>Stub # Not yet implemented.</description></item><item><title>Instances</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/instances/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/instances/</guid><description>A major difference between Roblox and rbxmk is what an instance represents. In Roblox, an instance is a live object that acts and reacts. In rbxmk, an instance represents data, and only data.
Consider the RBXL file format. Files of this format contain information used to reconstruct the instances that make up a place or model. Such files are static: they contain only data, but are difficult to manipulate in-place. Instances in rbxmk are like this, except that they are also interactive: the user can freely modify data and move it around.</description></item><item><title>Configs</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/configs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/configs/</guid><description>Not yet implemented. The following configs are defined by rbxmk:
Config Description ClassName Set the field of Instances that determines the class of the instance. IndexChildren Set whether instances have child indexing behavior. ClassName # TODO
IndexChildren # TODO</description></item><item><title>Behaviors</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/behaviors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/descriptors/behaviors/</guid><description>Not yet implemented. This page lists and describes the available behavior descriptors.
Each behavior has a corresponding class and field. That is, when the combination of class and field has no definition, that behavior is used as the default. A behavior can be explicitly unset by setting the behavior to an empty string.
Basic # Behavior Class Field Description Instance.ClearAllChildren Instance ClearAllChildren Returns ClearAllChildren method.</description></item><item><title>Configuration</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/configuration/</guid><description>Not yet implemented. Stub #</description></item><item><title>Permissions system</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/permissions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/permissions/</guid><description>Not yet implemented. Stub #</description></item><item><title>Automation</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/automation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/automation/</guid><description>Not yet implemented. Stub #</description></item><item><title>rbxmk vs Remodel</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/remodel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/overview/remodel/</guid><description>Remodel is a tool similar to rbxmk. It also runs Lua scripts, and has its own Lua API. This page lists the Lua APIs provided by Remodel, and their equivalents in rbxmk.
Descriptors # Remodel has API descriptors built-in, whereas descriptors in rbxmk must be specified by the user.
To fetch the latest descriptors provided by Roblox, the --desc-latest flag can be passed. Additionally, the dump-patch file can be applied afterwards to further improve compatibility.</description></item><item><title>base</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/base/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/base/</guid><description>The base library is an abridgment of the Lua 5.1 standard library. It is loaded directly into the global environment. ItemKindDescription _GFieldThe global environment.
_VERSIONFieldThe current version of Lua.
assertFunctionTests a condition.
errorFunctionThrows an error.
getmetatableFunctionGets the metatable of a value.
ipairsFunctionReturns an iterator over an array.
nextFunctionGets the next field in a table.
pairsFunctionReturns an iterator over a table.</description></item><item><title>program</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/program/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/program/</guid><description>The program library is loaded directly into the global environment. It contains values related to the compiled executable.
ItemKindDescription _RBXMK_VERSIONFieldThe current version of rbxmk.
Fields _RBXMK_VERSION _RBXMK_VERSION: string [readonly] The _RBXMK_VERSION global variable is defined as a string containing the current version of rbxmk, formatted according to semantic versioning.</description></item><item><title>rbxmk</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/rbxmk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/rbxmk/</guid><description>The rbxmk library contains functions related to the rbxmk engine.
$FIELDS
ItemKindDescription EnumFieldCollection of rbxmk-defined enums.
globalAttrConfigFieldGet or set the global AttrConfig.
globalDescFieldGet or set the global descriptor.
decodeFormatFunctionDeserialize data from bytes.
encodeFormatFunctionSerialize data into bytes.
formatCanDecodeFunctionCheck whether a format decodes into a type.
loadFileFunctionLoad the content of a file as a function.
loadStringFunctionLoad a string as a function.</description></item><item><title>roblox</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/roblox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/roblox/</guid><description>The Roblox library contains an environment similar to the Roblox Lua API. It is included directly into the global environment.
$FIELDS
ItemKindDescription typeofFunctionGets the internal type of a userdata.
Functions typeof typeof(value: any): string The typeof function returns the type of a value. For userdata, the internal value is returned. Other Lua values return the same as the type function.</description></item><item><title>clipboard</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/clipboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/clipboard/</guid><description>The clipboard library provides an interface to the operating system&amp;#39;s clipboard.
$FIELDS
The clipboard is currently available only on Windows. Other operating systems return no data.
ItemKindDescription readFunctionGets data from the clipboard in one of a number of formats.
writeFunctionSets data to the clipboard in a number of formats.
Functions read clipboard.read(...: string): (value: any?) The read function gets a value from the clipboard according to one of the given formats.</description></item><item><title>fs</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/fs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/fs/</guid><description>The fs library provides an interface to the file system.
$FIELDS
ItemKindDescription dirFunctionGets a list of files in a directory.
mkdirFunctionMakes a new directory.
readFunctionReads data from a file in a certain format.
removeFunctionRemoves a file or directory.
renameFunctionMoves a file or directory.
statFunctionGets metadata about a file.
writeFunctionWrites data to a file in a certain format.
Functions dir fs.</description></item><item><title>http</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/http/</guid><description>The http library provides an interface to resources on the network via HTTP.
$FIELDS
ItemKindDescription requestFunctionBegins an HTTP request.
Functions request http.request(options: HTTPOptions): (req: HTTPRequest) The request function begins a request with the specified options. Returns a request object that may be resolved or canceled. Throws an error if the request could not be started.</description></item><item><title>math</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/math/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/math/</guid><description>The math library is an extension to the standard library that includes the same additions to Roblox&amp;#39;s math library:
$FIELDS
ItemKindDescription clampFunctionReturns a number clamped between a minimum and maximum.
logFunctionIncludes optional base argument.
roundFunctionRounds a number to the nearest integer.
signFunctionReturns the sign of a number.
Functions clamp math.clamp(x: number, min: number, max: number): number The clamp function returns x clamped so that it is not less than min or greater than max.</description></item><item><title>os</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/os/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/os/</guid><description>The os library is an extension to the standard library. The following additional functions are included:
$FIELDS
ItemKindDescription getenvFunctionGets an environment variable.
Functions getenv os.getenv(name: string?): string?|{[string]: string} The getenv function returns the value of the name environment variable, or nil if no such value is defined. If name is not specified, then a table of environment variable names mapped to values is returned.</description></item><item><title>path</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/path/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/path/</guid><description>The path library provides functions that handle file paths. The following functions are included:
$FIELDS
ItemKindDescription cleanFunctionCleans up a file path.
expandFunctionExpands predefined file path variables.
joinFunctionJoins a number of file paths together.
splitFunctionSplits a file path into its components.
Functions clean path.clean(path: string): string The clean function returns the shortest path equivalent to path. Separators are replaced with the OS-specific path separator.</description></item><item><title>rbxassetid</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/rbxassetid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/rbxassetid/</guid><description>The rbxassetid library provides an interface to assets on the Roblox website.
$FIELDS
ItemKindDescription readFunctionReads data from a rbxassetid in a certain format.
writeFunctionWrites data to a rbxassetid in a certain format.
Functions read rbxassetid.read(options: RBXAssetOptions): (value: any) The read function downloads an asset according to the given options. Returns the content of the asset corresponding to AssetID, decoded according to Format.</description></item><item><title>string</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/string/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/string/</guid><description>The string library is an extension to the standard library that includes the same additions to Roblox&amp;#39;s string library:
$FIELDS
ItemKindDescription splitFunctionSplits a string into a list of substrings.
Functions split string.split(s: string, sep: string? = ","): {string} The split function splits s into substrings separated by sep.
If sep is nil, or if sep is not nil but not in s, then split returns a table with s as its only element.</description></item><item><title>sym</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/sym/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/sym/</guid><description>The sym library contains Symbol values. A symbol is a unique identifier that can be used to access certain metadata fields of an Instance.
An instance can be indexed with a symbol to get a metadata value in the same way it can be indexed with a string to get a property value:
local instance = Instance.new(&amp;#34;Workspace&amp;#34;) instance[sym.IsService] = true print(instance[sym.IsService]) --&amp;gt; true The following symbols are defined:</description></item><item><title>table</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/table/</guid><description>The table library is an extension to the standard library that includes the same additions to Roblox&amp;#39;s table library:
$FIELDS
ItemKindDescription clearFunctionRemoves all entries from a table.
createFunctionCreates a new table with a preallocated capacity.
findFunctionFind the index of a value in a table.
moveFunctionCopies the entries in a table.
packFunctionPacks arguments into a table.
unpackFunctionUnpacks a table into arguments.</description></item><item><title>types</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/api/libraries/types/</guid><description>The types library contains functions for constructing explicit primitives. The name of a function corresponds directly to the type. See Explicit primitives for more information.
$FIELDS
ItemKindDescription BinaryStringFunctionCreates an explicit BinaryString type.
Color3uint8FunctionCreates an explicit Color3uint8 type.
ContentFunctionCreates an explicit Content type.
ProtectedStringFunctionCreates an explicit ProtectedString type.
SharedStringFunctionCreates an explicit SharedString type.
floatFunctionCreates an explicit float type.
intFunctionCreates an explicit int type.</description></item><item><title>Compiling from source</title><link>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/installation/compiling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anaminus.github.io/RBXMK_DOC_TEMPORARY_DO_NOT_USE_OR_YOU_WILL_BE_FIRED/installation/compiling/</guid><description>This document contains information for compiling and installing rbxmk.
rbxmk is written in Go. For development, it is recommend to be familiar with the go command. Basic installation # Instead of using prebuilt releases, rbxmk can be installed manually.
Install Go Install Git Using a shell with Git (such as Git Bash), run the following command: go install github.com/anaminus/rbxmk/rbxmk@latest If you installed Go correctly, this will install the latest version of rbxmk to $GOPATH/bin, which will allow you run it directly from a shell.</description></item></channel></rss>